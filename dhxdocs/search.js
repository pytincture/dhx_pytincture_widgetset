window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "dhxpyt", "modulename": "dhxpyt", "kind": "module", "doc": "<h1 id=\"dhx-pytincture-wasm-based-widgetset\">DHX PyTincture WASM Based Widgetset</h1>\n\n<p><img src=\"tincture.jpeg\" alt=\"DHX PyTincture Widgetset Logo\" width=\"400\" style=\"display: block; margin: 0 auto;\"></p>\n\n<h2 id=\"overview\">Overview</h2>\n\n<p>The DHX PyTincture Widgetset is a Python library that integrates DHTMLX JavaScript UI components with the pyTincture framework using Pyodide. It enables building interactive, browser-based user interfaces directly in Python, supporting cross-platform GUI development with rich widgets like grids, charts, and forms.</p>\n\n<h2 id=\"features\">Features</h2>\n\n<ul>\n<li>Direct integration with DHTMLX UI components</li>\n<li>Pyodide-powered Python execution in the browser</li>\n<li>Cross-platform compatibility</li>\n<li>Customizable and reusable widgets</li>\n<li>Event handling for interactive experiences</li>\n</ul>\n\n<p>Detailed class and API documentation is available in the sidebar.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<h3 id=\"prerequisites\">Prerequisites</h3>\n\n<ul>\n<li>Python 3.13+</li>\n<li>Pyodide</li>\n</ul>\n\n<h3 id=\"steps\">Steps</h3>\n\n<ol>\n<li>Clone the repository:<br />\n<code>bash\ngit clone https://github.com/pytincture/dhx_pytincture_widgetset.git\ncd dhx_pytincture_widgetset;</code></li>\n</ol>\n\n<h2 id=\"quickstart\">QuickStart</h2>\n\n<h2 id=\"windows\">Windows</h2>\n\n<h4 id=\"install-uv-pytincture-dhxpyt-on-powershell\">Install UV / pytincture / dhxpyt on Powershell</h4>\n\n<pre><code>powershell -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n$env:Path += \";$env:USERPROFILE\\.cargo\bin\"\n[Environment]::SetEnvironmentVariable(\"Path\", $env:Path, [System.EnvironmentVariableTarget]::User)\n$env:Path = [System.Environment]::GetEnvironmentVariable(\"Path\", [System.EnvironmentVariableTarget]::User)\nNew-Item -ItemType Directory -Name dhxpyt_quickstart; Set-Location dhxpyt_quickstart\nuv venv --python 3.13; .\\.venv\\Scripts\\Activate.ps1\nuv pip install dhxpyt pyodide-py js pytincture itsdangerous\nInvoke-WebRequest -Uri https://pytincture.com/quickstart.py -OutFile quickstart.py\n$env:PYTHONUTF8 = \"1\"\nuv run quickstart.py\n</code></pre>\n\n<h2 id=\"linux-macos\">Linux / MacOS</h2>\n\n<h4 id=\"install-uv-pytincture-dhxpyt-on-bash\">Install UV / pytincture / dhxpyt on Bash</h4>\n\n<pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh\necho 'export PATH=\"$HOME/.cargo/bin:$PATH\"' &gt;&gt; ~/.bashrc\nsource ~/.bashrc\nuv --version\nmkdir dhxpyt_quickstart;cd dhxpyt_quickstart\nuv venv --python 3.13 &amp;&amp; source .venv/bin/activate\nuv pip install dhxpyt pyodide-py js pytincture itsdangerous\ncurl -O https://pytincture.com/quickstart.py\nuv run quickstart.py\n</code></pre>\n\n<p>Open in Browser:\n<a href=\"http://localhost:8070/quickstart\">http://localhost:8070/quickstart</a></p>\n\n<h3 id=\"example-code\">Example Code</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">sys</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">dhxpyt.layout</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">MainWindow</span><span class=\"p\">,</span> <span class=\"n\">Layout</span><span class=\"p\">,</span> <span class=\"n\">LayoutConfig</span><span class=\"p\">,</span> <span class=\"n\">CellConfig</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">dhxpyt.toolbar</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">ButtonConfig</span><span class=\"p\">,</span> <span class=\"n\">ToolbarConfig</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">dhxpyt.sidebar</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">NavItemConfig</span><span class=\"p\">,</span> <span class=\"n\">SidebarConfig</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">dhxpyt.grid</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">GridConfig</span><span class=\"p\">,</span> <span class=\"n\">GridColumnConfig</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">pyodide.ffi</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">create_proxy</span>\n\n<span class=\"c1\"># Sample data for the grid</span>\n<span class=\"n\">SAMPLE_DATA</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Item 1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Item 2&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Item 3&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"mi\">300</span><span class=\"p\">}</span>\n<span class=\"p\">]</span>\n\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">QuickstartMain</span><span class=\"p\">(</span><span class=\"n\">Layout</span><span class=\"p\">):</span>\n    <span class=\"n\">layout_config</span> <span class=\"o\">=</span> <span class=\"n\">LayoutConfig</span><span class=\"p\">(</span>\n        <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;line&quot;</span><span class=\"p\">,</span>\n        <span class=\"n\">cols</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">CellConfig</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;sidebar&quot;</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"s2\">&quot;auto&quot;</span><span class=\"p\">),</span>\n            <span class=\"n\">CellConfig</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;content&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">load_ui</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Sidebar configuration</span>\n        <span class=\"n\">sidebar_items</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">NavItemConfig</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;hamburger&quot;</span><span class=\"p\">,</span> <span class=\"n\">icon</span><span class=\"o\">=</span><span class=\"s2\">&quot;mdi mdi-menu&quot;</span><span class=\"p\">),</span>\n            <span class=\"n\">NavItemConfig</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;items&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;Items&quot;</span><span class=\"p\">,</span> <span class=\"n\">icon</span><span class=\"o\">=</span><span class=\"s2\">&quot;mdi mdi-view-list&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">sidebar_config</span> <span class=\"o\">=</span> <span class=\"n\">SidebarConfig</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">sidebar_items</span><span class=\"p\">,</span> <span class=\"n\">collapsed</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sidebar</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_sidebar</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;sidebar&quot;</span><span class=\"p\">,</span> <span class=\"n\">sidebar_config</span><span class=\"o\">=</span><span class=\"n\">sidebar_config</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">on_click</span><span class=\"p\">(</span><span class=\"n\">create_proxy</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle_sidebar_click</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># Content layout with toolbar and grid</span>\n        <span class=\"n\">content_layout_config</span> <span class=\"o\">=</span> <span class=\"n\">LayoutConfig</span><span class=\"p\">(</span>\n            <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;line&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">rows</span><span class=\"o\">=</span><span class=\"p\">[</span>\n                <span class=\"n\">CellConfig</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;toolbar&quot;</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"s2\">&quot;auto&quot;</span><span class=\"p\">),</span>\n                <span class=\"n\">CellConfig</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;grid&quot;</span><span class=\"p\">)</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">content_layout</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_layout</span><span class=\"p\">(</span><span class=\"s2\">&quot;content&quot;</span><span class=\"p\">,</span> <span class=\"n\">content_layout_config</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Toolbar configuration</span>\n        <span class=\"n\">toolbar_config</span> <span class=\"o\">=</span> <span class=\"n\">ToolbarConfig</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">ButtonConfig</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;add&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;Add Item&quot;</span><span class=\"p\">,</span> <span class=\"n\">icon</span><span class=\"o\">=</span><span class=\"s2\">&quot;mdi mdi-plus&quot;</span><span class=\"p\">),</span>\n            <span class=\"n\">ButtonConfig</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;refresh&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;Refresh&quot;</span><span class=\"p\">,</span> <span class=\"n\">icon</span><span class=\"o\">=</span><span class=\"s2\">&quot;mdi mdi-refresh&quot;</span><span class=\"p\">)</span>\n        <span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">toolbar</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">content_layout</span><span class=\"o\">.</span><span class=\"n\">add_toolbar</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;toolbar&quot;</span><span class=\"p\">,</span> <span class=\"n\">toolbar_config</span><span class=\"o\">=</span><span class=\"n\">toolbar_config</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Grid configuration</span>\n        <span class=\"n\">grid_columns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">GridColumnConfig</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">header</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"s2\">&quot;text&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ID&quot;</span><span class=\"p\">}]),</span>\n            <span class=\"n\">GridColumnConfig</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">header</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"s2\">&quot;text&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">}]),</span>\n            <span class=\"n\">GridColumnConfig</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;value&quot;</span><span class=\"p\">,</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">header</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"s2\">&quot;text&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Value&quot;</span><span class=\"p\">}])</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">grid_config</span> <span class=\"o\">=</span> <span class=\"n\">GridConfig</span><span class=\"p\">(</span><span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"n\">grid_columns</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">SAMPLE_DATA</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">grid</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">content_layout</span><span class=\"o\">.</span><span class=\"n\">add_grid</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;grid&quot;</span><span class=\"p\">,</span> <span class=\"n\">grid_config</span><span class=\"o\">=</span><span class=\"n\">grid_config</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">handle_sidebar_click</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">id</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;hamburger&quot;</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">toggle</span><span class=\"p\">()</span>\n\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">QuickstartApp</span><span class=\"p\">(</span><span class=\"n\">MainWindow</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">load_ui</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_theme</span><span class=\"p\">(</span><span class=\"s2\">&quot;dark&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">main_layout</span> <span class=\"o\">=</span> <span class=\"n\">QuickstartMain</span><span class=\"p\">(</span><span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">attach</span><span class=\"p\">(</span><span class=\"s2\">&quot;mainwindow&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">main_layout</span><span class=\"o\">.</span><span class=\"n\">layout</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">platform</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;emscripten&quot;</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">pytincture</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">launch_service</span>\n    <span class=\"n\">launch_service</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n"}, {"fullname": "dhxpyt.calendar", "modulename": "dhxpyt.calendar", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.Calendar", "modulename": "dhxpyt.calendar", "qualname": "Calendar", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.Calendar.__init__", "modulename": "dhxpyt.calendar", "qualname": "Calendar.__init__", "kind": "function", "doc": "<p>Initializes the calendar instance.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">calendar</span><span class=\"o\">.</span><span class=\"n\">calendar_config</span><span class=\"o\">.</span><span class=\"n\">CalendarConfig</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.calendar.Calendar.calendar", "modulename": "dhxpyt.calendar", "qualname": "Calendar.calendar", "kind": "variable", "doc": "<p>Calendar API Functions</p>\n"}, {"fullname": "dhxpyt.calendar.Calendar.clear", "modulename": "dhxpyt.calendar", "qualname": "Calendar.clear", "kind": "function", "doc": "<p>Clears the value set in the calendar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.destructor", "modulename": "dhxpyt.calendar", "qualname": "Calendar.destructor", "kind": "function", "doc": "<p>Removes a calendar instance and releases occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.get_current_mode", "modulename": "dhxpyt.calendar", "qualname": "Calendar.get_current_mode", "kind": "function", "doc": "<p>Returns the current mode of displaying the Calendar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.get_value", "modulename": "dhxpyt.calendar", "qualname": "Calendar.get_value", "kind": "function", "doc": "<p>Returns the selected date(s).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">as_date_obj</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.link", "modulename": "dhxpyt.calendar", "qualname": "Calendar.link", "kind": "function", "doc": "<p>Links the calendar to another calendar for selecting a date range.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">calendar</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.paint", "modulename": "dhxpyt.calendar", "qualname": "Calendar.paint", "kind": "function", "doc": "<p>Repaints the calendar on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.set_value", "modulename": "dhxpyt.calendar", "qualname": "Calendar.set_value", "kind": "function", "doc": "<p>Selects a date in the calendar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.show_date", "modulename": "dhxpyt.calendar", "qualname": "Calendar.show_date", "kind": "function", "doc": "<p>Shows a specified date and/or opens the calendar in one of the available modes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">date</span><span class=\"p\">:</span> <span class=\"n\">NoneType</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;calendar&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.add_event_handler", "modulename": "dhxpyt.calendar", "qualname": "Calendar.add_event_handler", "kind": "function", "doc": "<p>Helper method to dynamically add event handlers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.before_change", "modulename": "dhxpyt.calendar", "qualname": "Calendar.before_change", "kind": "function", "doc": "<p>Fires before the change of date selection.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.cancel_click", "modulename": "dhxpyt.calendar", "qualname": "Calendar.cancel_click", "kind": "function", "doc": "<p>Fires when the user clicks on the 'Cancel' control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.change", "modulename": "dhxpyt.calendar", "qualname": "Calendar.change", "kind": "function", "doc": "<p>Fires on change of date selection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.date_mouse_over", "modulename": "dhxpyt.calendar", "qualname": "Calendar.date_mouse_over", "kind": "function", "doc": "<p>Fires when the mouse pointer is over a date.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.mode_change", "modulename": "dhxpyt.calendar", "qualname": "Calendar.mode_change", "kind": "function", "doc": "<p>Fires on change of the calendar mode.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">NoneType</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.month_selected", "modulename": "dhxpyt.calendar", "qualname": "Calendar.month_selected", "kind": "function", "doc": "<p>Fires after a month was selected in the calendar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.year_selected", "modulename": "dhxpyt.calendar", "qualname": "Calendar.year_selected", "kind": "function", "doc": "<p>Fires after a year was selected in the calendar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.calendar.Calendar.css", "modulename": "dhxpyt.calendar", "qualname": "Calendar.css", "kind": "variable", "doc": "<p>Optional. Adds style classes to the calendar.</p>\n", "annotation": ": None"}, {"fullname": "dhxpyt.calendar.Calendar.date", "modulename": "dhxpyt.calendar", "qualname": "Calendar.date", "kind": "variable", "doc": "<p>Optional. Defines the date that will be opened when the calendar is created.</p>\n", "annotation": ": NoneType"}, {"fullname": "dhxpyt.calendar.Calendar.date_format", "modulename": "dhxpyt.calendar", "qualname": "Calendar.date_format", "kind": "variable", "doc": "<p>Optional. Defines the format of dates in the calendar.</p>\n", "annotation": ": None"}, {"fullname": "dhxpyt.calendar.Calendar.disabled_dates", "modulename": "dhxpyt.calendar", "qualname": "Calendar.disabled_dates", "kind": "variable", "doc": "<p>Optional. Allows disabling some date intervals.</p>\n", "annotation": ": Callable[[NoneType], bool]"}, {"fullname": "dhxpyt.calendar.Calendar.mark", "modulename": "dhxpyt.calendar", "qualname": "Calendar.mark", "kind": "variable", "doc": "<p>Optional. Adds a CSS class to specific days.</p>\n", "annotation": ": Callable[[NoneType], NoneType]"}, {"fullname": "dhxpyt.calendar.Calendar.mode", "modulename": "dhxpyt.calendar", "qualname": "Calendar.mode", "kind": "variable", "doc": "<p>Optional. The mode of Calendar initialization.</p>\n", "annotation": ": None"}, {"fullname": "dhxpyt.calendar.Calendar.range", "modulename": "dhxpyt.calendar", "qualname": "Calendar.range", "kind": "variable", "doc": "<p>Optional. Enables/disables the possibility to select a range of dates.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.calendar.Calendar.this_month_only", "modulename": "dhxpyt.calendar", "qualname": "Calendar.this_month_only", "kind": "variable", "doc": "<p>Optional. Hides dates of the previous/next months relative to the currently displayed one.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.calendar.Calendar.time_format", "modulename": "dhxpyt.calendar", "qualname": "Calendar.time_format", "kind": "variable", "doc": "<p>Optional. Defines the time format for the timepicker in the calendar.</p>\n", "annotation": ": int"}, {"fullname": "dhxpyt.calendar.Calendar.time_picker", "modulename": "dhxpyt.calendar", "qualname": "Calendar.time_picker", "kind": "variable", "doc": "<p>Optional. Adds a timepicker into the calendar.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.calendar.Calendar.value", "modulename": "dhxpyt.calendar", "qualname": "Calendar.value", "kind": "variable", "doc": "<p>Optional. Selects the day(s) (adds a round blue marker).</p>\n", "annotation": ": Optional[List[NoneType]]"}, {"fullname": "dhxpyt.calendar.Calendar.week_numbers", "modulename": "dhxpyt.calendar", "qualname": "Calendar.week_numbers", "kind": "variable", "doc": "<p>Optional. Defines whether to show the numbers of weeks.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.calendar.Calendar.week_start", "modulename": "dhxpyt.calendar", "qualname": "Calendar.week_start", "kind": "variable", "doc": "<p>Optional. Sets the starting day of the week.</p>\n", "annotation": ": None"}, {"fullname": "dhxpyt.calendar.Calendar.width", "modulename": "dhxpyt.calendar", "qualname": "Calendar.width", "kind": "variable", "doc": "<p>Optional. Sets the width of the calendar.</p>\n", "annotation": ": Optional[int]"}, {"fullname": "dhxpyt.calendar.CalendarConfig", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig", "kind": "class", "doc": "<p>Configuration class for Calendar.</p>\n", "bases": "dhxpyt.calendar.calendar_config.ControlConfig"}, {"fullname": "dhxpyt.calendar.CalendarConfig.__init__", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">date</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">date_format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"si\">%d</span><span class=\"s1\">/%m/%y&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">disabled_dates</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mark</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;calendar&#39;</span>,</span><span class=\"param\">\t<span class=\"nb\">range</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">this_month_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">time_format</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">24</span>,</span><span class=\"param\">\t<span class=\"n\">time_picker</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">week_numbers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">week_start</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;sunday&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;250px&#39;</span></span>)</span>"}, {"fullname": "dhxpyt.calendar.CalendarConfig.date", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.date", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.date_format", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.date_format", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.disabled_dates", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.disabled_dates", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.mark", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.mark", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.mode", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.range", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.range", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.this_month_only", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.this_month_only", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.time_format", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.time_format", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.time_picker", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.time_picker", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.value", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.week_numbers", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.week_numbers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.week_start", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.week_start", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.css", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.calendar.CalendarConfig.width", "modulename": "dhxpyt.calendar", "qualname": "CalendarConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow", "modulename": "dhxpyt.cardflow", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlow", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow", "kind": "class", "doc": "<p>Wrapper class for the CardFlow widget.</p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlow.__init__", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  An instance of CardFlowConfig describing columns, data, etc.</li>\n<li><strong>container</strong>:  An optional reference to a layout cell or container ID where the JS CardFlow is attached.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">cardflow</span><span class=\"o\">.</span><span class=\"n\">cardflow_config</span><span class=\"o\">.</span><span class=\"n\">CardFlowConfig</span>,</span><span class=\"param\">\t<span class=\"n\">container</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.cardflow.CardFlow.cardflow", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.cardflow", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlow.event_handlers", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.event_handlers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlow.on_sort", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.on_sort", "kind": "function", "doc": "<p>Placeholder for a sort event if the JS side triggers a \"sort\" event.\nCurrently, the main code does not raise a custom \"sort\" event, so you may \nwant to capture the sorting user action differently or modify the JS code \nto fire an event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.on_card_options", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.on_card_options", "kind": "function", "doc": "<p>Called when card's options (e.g., dots menu) are used.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.on_card_expand", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.on_card_expand", "kind": "function", "doc": "<p>Called when a card is expanded.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.on_card_collapse", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.on_card_collapse", "kind": "function", "doc": "<p>Called when a card is collapsed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.on_options", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.on_options", "kind": "function", "doc": "<p>Same as above for on_card_options, if you prefer a shorter name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.update_header", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.update_header", "kind": "function", "doc": "<p>If your JS code has a method named updateHeader, call it here.\nOtherwise, remove or adjust as needed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.set_row_color", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.set_row_color", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span>, </span><span class=\"param\"><span class=\"n\">color</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.set_row_font_size", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.set_row_font_size", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span>, </span><span class=\"param\"><span class=\"n\">font_size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.set_row_data_value", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.set_row_data_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span>, </span><span class=\"param\"><span class=\"n\">column_id</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.toggle_header", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.toggle_header", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.toggle_sort", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.toggle_sort", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.toggle_data_headers", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.toggle_data_headers", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">show</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.set_theme", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.set_theme", "kind": "function", "doc": "<p>If your JS code supports a setTheme method, or if you have a theme mechanism, call it here.\nOtherwise, remove.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">theme</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.export_to_json", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.export_to_json", "kind": "function", "doc": "<p>Exports the current data to JSON. If your JS code actually supports data.serialize(), this will work.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.collapse_all", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.collapse_all", "kind": "function", "doc": "<p>Collapses all cards (if the underlying JS code includes collapseAll()).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.expand_all", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.expand_all", "kind": "function", "doc": "<p>Expands all cards (if the underlying JS code includes expandAll()).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.add_layout", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.add_layout", "kind": "function", "doc": "<p>Example of how you might nest a dhtmlx Layout inside a card's content.\nThis calls attach_to_card_content to wire up the new layout widget. \nModify as needed for your application.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mainwindow&#39;</span>, </span><span class=\"param\"><span class=\"n\">layout_config</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.attach_to_card_content", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.attach_to_card_content", "kind": "function", "doc": "<p>Attach a (JS) widget to a card's content area when expanded.\nPassing in the cardid and the widget (which might be another dhtmlx object).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cardid</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">widget</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlow.detach_from_card_content", "modulename": "dhxpyt.cardflow", "qualname": "CardFlow.detach_from_card_content", "kind": "function", "doc": "<p>Removes a widget from the card's content area.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cardid</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig", "kind": "class", "doc": "<p>Configuration class for the CardFlow widget.\nExample structure:\n{\n    \"columns\": [\n        { \"id\": \"name\", \"header\": \"Name:\" },\n        { \"id\": \"vehicle\", \"header\": \"Vehicle:\" },\n        { \"id\": \"status\", \"header\": \"Status:\" },\n        { \"id\": \"promise_time\", \"header\": \"Promise Time:\" }\n    ],\n    \"data\": [ ... ],\n    \"cardHeight\": \"120px\",\n    \"stacked\": True\n}</p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.__init__", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.__init__", "kind": "function", "doc": "<p>Initializes the CardFlowConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>columns</strong>:  List of column configurations (dict or CardFlowColumnConfig).</li>\n<li><strong>data</strong>:  A list of dictionaries containing the CardFlow data (each representing one card).</li>\n<li><strong>editable</strong>:  Whether the CardFlow is editable.</li>\n<li><strong>group</strong>:  Optional grouping config (not always used).</li>\n<li><strong>groupable</strong>:  Whether grouping is enabled (not always used).</li>\n<li><strong>hideExpandCollapse</strong>:  If set to True, you might hide the expand/collapse UI.</li>\n<li><strong>optionItems</strong>:  Specifies items for the \"options\" dropdown.</li>\n<li><strong>sortDisabled</strong>:  Disables the sorting toolbar if True.</li>\n<li><strong>sortHeader</strong>:  Label/text to show on the sorting toolbar.</li>\n<li><strong>cardHeight</strong>:  Height (CSS) of each card row, e.g. \"100px\". Defaults to \"auto\" in JS if not set.</li>\n<li><strong>stacked</strong>:  If True, card data displays in vertical (stacked) format rather than side-by-side grid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">columns</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">cardflow</span><span class=\"o\">.</span><span class=\"n\">cardflow_config</span><span class=\"o\">.</span><span class=\"n\">CardFlowColumnConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">editable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">group</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">groupable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">hideExpandCollapse</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">autoCollapse</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">optionItems</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sortDisabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">showHeader</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">showSort</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">sortHeader</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">showDataHeaders</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">showOptions</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">fontSize</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cardHeight</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stacked</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.columns", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.columns", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.data", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.editable", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.editable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.group", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.group", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.groupable", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.groupable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.hideExpandCollapse", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.hideExpandCollapse", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.autoCollapse", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.autoCollapse", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.sortDisabled", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.sortDisabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.sortHeader", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.sortHeader", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.cardHeight", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.cardHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.stacked", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.stacked", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.optionItems", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.optionItems", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.showHeader", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.showHeader", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.showSort", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.showSort", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.showDataHeaders", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.showDataHeaders", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.fontSize", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.fontSize", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.showOptions", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.showOptions", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowConfig.to_dict", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowConfig.to_dict", "kind": "function", "doc": "<p>Converts the CardFlowConfig into a dictionary format for the JS code.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig", "kind": "class", "doc": "<p>Configuration class for CardFlow columns.\nSimilar to GridColumnConfig, lets you control properties like width, header text, etc.</p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.__init__", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.__init__", "kind": "function", "doc": "<p>Initializes a CardFlow column configuration.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  Unique identifier for the column.</li>\n<li><strong>header</strong>:  Header text or a more complex header config.</li>\n<li><strong>width</strong>:  Column width (e.g., \"100px\" or 100).</li>\n<li><strong>align</strong>:  Alignment for cell content.</li>\n<li><strong>hidden</strong>:  Whether the column is hidden.</li>\n<li><strong>css</strong>:  Additional CSS classes.</li>\n<li><strong>dataType</strong>:  Type of the data (e.g., \"str\", \"int\", \"time\").</li>\n<li><strong>dataFormat: Used if dataType is \"time\" (e.g. \"HH</strong>: MM AM/PM\").</li>\n<li><strong>applyFormat</strong>:  Whether to apply the dataFormat for display.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">header</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;100px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">align</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dataType</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;str&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dataFormat</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">applyFormat</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">coltype</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span>)</span>"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.id", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.header", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.header", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.width", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.align", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.align", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.hidden", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.css", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.dataType", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.dataType", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.dataFormat", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.dataFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.applyFormat", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.applyFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.coltype", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.coltype", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.cardflow.CardFlowColumnConfig.to_dict", "modulename": "dhxpyt.cardflow", "qualname": "CardFlowColumnConfig.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart", "modulename": "dhxpyt.chart", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.chart.Chart", "modulename": "dhxpyt.chart", "qualname": "Chart", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.chart.Chart.__init__", "modulename": "dhxpyt.chart", "qualname": "Chart.__init__", "kind": "function", "doc": "<p>Initializes the chart instance.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">chart</span><span class=\"o\">.</span><span class=\"n\">chart_config</span><span class=\"o\">.</span><span class=\"n\">ChartConfig</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.chart.Chart.chart", "modulename": "dhxpyt.chart", "qualname": "Chart.chart", "kind": "variable", "doc": "<p>Chart API Functions</p>\n"}, {"fullname": "dhxpyt.chart.Chart.destructor", "modulename": "dhxpyt.chart", "qualname": "Chart.destructor", "kind": "function", "doc": "<p>Removes a chart instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart.Chart.each_series", "modulename": "dhxpyt.chart", "qualname": "Chart.each_series", "kind": "function", "doc": "<p>Iterates over chart series.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart.Chart.get_series", "modulename": "dhxpyt.chart", "qualname": "Chart.get_series", "kind": "function", "doc": "<p>Returns an object with configuration of a specified series.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart.Chart.paint", "modulename": "dhxpyt.chart", "qualname": "Chart.paint", "kind": "function", "doc": "<p>Repaints a chart on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart.Chart.set_config", "modulename": "dhxpyt.chart", "qualname": "Chart.set_config", "kind": "function", "doc": "<p>Sets configuration of a chart.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart.Chart.png", "modulename": "dhxpyt.chart", "qualname": "Chart.png", "kind": "function", "doc": "<p>Exports a chart to a PNG file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart.Chart.pdf", "modulename": "dhxpyt.chart", "qualname": "Chart.pdf", "kind": "function", "doc": "<p>Exports a chart to a PDF file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart.Chart.add_event_handler", "modulename": "dhxpyt.chart", "qualname": "Chart.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart.Chart.resize", "modulename": "dhxpyt.chart", "qualname": "Chart.resize", "kind": "function", "doc": "<p>Fires on changing the size of the chart container.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart.Chart.serie_click", "modulename": "dhxpyt.chart", "qualname": "Chart.serie_click", "kind": "function", "doc": "<p>Fires on clicking a series.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart.Chart.toggle_series", "modulename": "dhxpyt.chart", "qualname": "Chart.toggle_series", "kind": "function", "doc": "<p>Fires on toggle on/off a series in a legend.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.chart.Chart.css", "modulename": "dhxpyt.chart", "qualname": "Chart.css", "kind": "variable", "doc": "<p>Optional. Adds style classes to the chart.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.chart.Chart.data", "modulename": "dhxpyt.chart", "qualname": "Chart.data", "kind": "variable", "doc": "<p>Optional. Specifies an array of data objects to set into the chart.</p>\n", "annotation": ": List[Dict[str, Any]]"}, {"fullname": "dhxpyt.chart.Chart.export_styles", "modulename": "dhxpyt.chart", "qualname": "Chart.export_styles", "kind": "variable", "doc": "<p>Optional. Defines the styles that will be sent to the export service when exporting Chart.</p>\n", "annotation": ": Union[bool, List[str]]"}, {"fullname": "dhxpyt.chart.Chart.legend", "modulename": "dhxpyt.chart", "qualname": "Chart.legend", "kind": "variable", "doc": "<p>Optional. Defines the configuration of a chart legend.</p>\n", "annotation": ": Dict[str, Any]"}, {"fullname": "dhxpyt.chart.Chart.max_points", "modulename": "dhxpyt.chart", "qualname": "Chart.max_points", "kind": "variable", "doc": "<p>Optional. Displays an average number of values if data set is too large.</p>\n", "annotation": ": int"}, {"fullname": "dhxpyt.chart.Chart.scales", "modulename": "dhxpyt.chart", "qualname": "Chart.scales", "kind": "variable", "doc": "<p>Required. Defines configuration of scales for certain chart types.</p>\n", "annotation": ": Dict[str, Any]"}, {"fullname": "dhxpyt.chart.Chart.series", "modulename": "dhxpyt.chart", "qualname": "Chart.series", "kind": "variable", "doc": "<p>Required. Defines configuration of chart series.</p>\n", "annotation": ": List[Dict[str, Any]]"}, {"fullname": "dhxpyt.chart.Chart.type", "modulename": "dhxpyt.chart", "qualname": "Chart.type", "kind": "variable", "doc": "<p>Required. Specifies the type of a chart.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.chart.ChartConfig", "modulename": "dhxpyt.chart", "qualname": "ChartConfig", "kind": "class", "doc": "<p>Configuration class for Chart.</p>\n", "bases": "dhxpyt.chart.chart_config.ControlConfig"}, {"fullname": "dhxpyt.chart.ChartConfig.__init__", "modulename": "dhxpyt.chart", "qualname": "ChartConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">series</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">scales</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">legend</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_points</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">export_styles</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "dhxpyt.chart.ChartConfig.type", "modulename": "dhxpyt.chart", "qualname": "ChartConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.chart.ChartConfig.series", "modulename": "dhxpyt.chart", "qualname": "ChartConfig.series", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.chart.ChartConfig.scales", "modulename": "dhxpyt.chart", "qualname": "ChartConfig.scales", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.chart.ChartConfig.data", "modulename": "dhxpyt.chart", "qualname": "ChartConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.chart.ChartConfig.legend", "modulename": "dhxpyt.chart", "qualname": "ChartConfig.legend", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.chart.ChartConfig.css", "modulename": "dhxpyt.chart", "qualname": "ChartConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.chart.ChartConfig.max_points", "modulename": "dhxpyt.chart", "qualname": "ChartConfig.max_points", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.chart.ChartConfig.export_styles", "modulename": "dhxpyt.chart", "qualname": "ChartConfig.export_styles", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker", "modulename": "dhxpyt.colorpicker", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker.Colorpicker", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.__init__", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.__init__", "kind": "function", "doc": "<p>Initializes the Colorpicker instance.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">colorpicker</span><span class=\"o\">.</span><span class=\"n\">colorpicker_config</span><span class=\"o\">.</span><span class=\"n\">ColorpickerConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.colorpicker", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.colorpicker", "kind": "variable", "doc": "<p>Colorpicker API Functions</p>\n"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.clear", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.clear", "kind": "function", "doc": "<p>Clears the value set in the colorpicker and removes focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.destructor", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.destructor", "kind": "function", "doc": "<p>Releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.get_current_mode", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.get_current_mode", "kind": "function", "doc": "<p>Returns the current mode of displaying Colorpicker ('palette' or 'picker').</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.get_custom_colors", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.get_custom_colors", "kind": "function", "doc": "<p>Returns an array of selected custom colors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.get_value", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.get_value", "kind": "function", "doc": "<p>Returns the code of a selected color in the Hex format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.paint", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.paint", "kind": "function", "doc": "<p>Repaints Colorpicker on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.set_current_mode", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.set_current_mode", "kind": "function", "doc": "<p>Shows Colorpicker either in the 'palette' or 'picker' mode.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">view</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.set_custom_colors", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.set_custom_colors", "kind": "function", "doc": "<p>Sets custom colors that will be displayed at the bottom of the palette.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">custom_colors</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.set_focus", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.set_focus", "kind": "function", "doc": "<p>Sets focus on the specified color value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.set_value", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.set_value", "kind": "function", "doc": "<p>Selects a color in Colorpicker.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.add_event_handler", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.on_apply", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.on_apply", "kind": "function", "doc": "<p>Fires on clicking the 'Select' button.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.on_before_change", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.on_before_change", "kind": "function", "doc": "<p>Fires before changing the selected color in Colorpicker.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.on_cancel_click", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.on_cancel_click", "kind": "function", "doc": "<p>Fires on clicking the 'Cancel' button.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.on_change", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.on_change", "kind": "function", "doc": "<p>Fires on changing the selected color in Colorpicker.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.on_mode_change", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.on_mode_change", "kind": "function", "doc": "<p>Fires on changing the mode of the colorpicker.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.css", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.css", "kind": "variable", "doc": "<p>Gets or sets custom CSS classes for Colorpicker.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.custom_colors", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.custom_colors", "kind": "variable", "doc": "<p>Gets or sets custom colors displayed at the bottom of Colorpicker.</p>\n", "annotation": ": List[str]"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.gray_shades", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.gray_shades", "kind": "variable", "doc": "<p>Gets or sets whether the gray shades are displayed in the palette.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.mode", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.mode", "kind": "variable", "doc": "<p>Gets or sets the mode of displaying the colorpicker ('palette' or 'picker').</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.palette", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.palette", "kind": "variable", "doc": "<p>Gets or sets the arrays of colors shown in the colorpicker.</p>\n", "annotation": ": List[List[str]]"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.palette_only", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.palette_only", "kind": "variable", "doc": "<p>Gets or sets whether Colorpicker is shown only in the palette mode.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.picker_only", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.picker_only", "kind": "variable", "doc": "<p>Gets or sets whether Colorpicker is shown only in the picker mode.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.transparency", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.transparency", "kind": "variable", "doc": "<p>Gets or sets whether the transparency scale is displayed in the picker mode.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.colorpicker.Colorpicker.width", "modulename": "dhxpyt.colorpicker", "qualname": "Colorpicker.width", "kind": "variable", "doc": "<p>Gets or sets the width of Colorpicker.</p>\n", "annotation": ": Union[str, int]"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig", "kind": "class", "doc": "<p>Configuration class for Colorpicker. Contains properties to customize the colorpicker.</p>\n"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig.__init__", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>css</strong>:  (Optional) Adds custom CSS classes to Colorpicker.</li>\n<li><strong>customColors</strong>:  (Optional) Shows custom colors at the bottom of Colorpicker.</li>\n<li><strong>grayShades</strong>:  (Optional) Displays the section with gray shades in the palette.</li>\n<li><strong>mode</strong>:  (Optional) Specifies the mode of displaying the colorpicker (\"palette\" or \"picker\").</li>\n<li><strong>palette</strong>:  (Optional) Arrays of colors to show in the colorpicker.</li>\n<li><strong>paletteOnly</strong>:  (Optional) Shows Colorpicker only in the palette mode.</li>\n<li><strong>pickerOnly</strong>:  (Optional) Shows Colorpicker only in the picker mode.</li>\n<li><strong>transparency</strong>:  (Optional) Displays the transparency scale in the picker mode.</li>\n<li><strong>width</strong>:  (Optional) Sets the width of Colorpicker.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">customColors</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">grayShades</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;palette&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">palette</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">paletteOnly</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pickerOnly</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">transparency</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;238px&#39;</span></span>)</span>"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig.css", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig.customColors", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig.customColors", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig.grayShades", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig.grayShades", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig.mode", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig.mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig.palette", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig.palette", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig.paletteOnly", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig.paletteOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig.pickerOnly", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig.pickerOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig.transparency", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig.transparency", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig.width", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.colorpicker.ColorpickerConfig.to_dict", "modulename": "dhxpyt.colorpicker", "qualname": "ColorpickerConfig.to_dict", "kind": "function", "doc": "<p>Converts the ColorpickerConfig into a dictionary format that can be\npassed into the colorpicker constructor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox", "modulename": "dhxpyt.combobox", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.Combobox", "modulename": "dhxpyt.combobox", "qualname": "Combobox", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.Combobox.__init__", "modulename": "dhxpyt.combobox", "qualname": "Combobox.__init__", "kind": "function", "doc": "<p>Initializes the Combobox instance.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">combobox</span><span class=\"o\">.</span><span class=\"n\">combobox_config</span><span class=\"o\">.</span><span class=\"n\">ComboboxConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.combobox.Combobox.combobox", "modulename": "dhxpyt.combobox", "qualname": "Combobox.combobox", "kind": "variable", "doc": "<p>Combobox API Functions</p>\n"}, {"fullname": "dhxpyt.combobox.Combobox.add_option", "modulename": "dhxpyt.combobox", "qualname": "Combobox.add_option", "kind": "function", "doc": "<p>Adds a new item into the list of Combobox options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">join</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.blur", "modulename": "dhxpyt.combobox", "qualname": "Combobox.blur", "kind": "function", "doc": "<p>Removes focus from Combobox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.clear", "modulename": "dhxpyt.combobox", "qualname": "Combobox.clear", "kind": "function", "doc": "<p>Clears the value set in the Combobox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.destructor", "modulename": "dhxpyt.combobox", "qualname": "Combobox.destructor", "kind": "function", "doc": "<p>Removes a Combobox instance and releases occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.disable", "modulename": "dhxpyt.combobox", "qualname": "Combobox.disable", "kind": "function", "doc": "<p>Disables Combobox on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.enable", "modulename": "dhxpyt.combobox", "qualname": "Combobox.enable", "kind": "function", "doc": "<p>Enables a disabled Combobox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.focus", "modulename": "dhxpyt.combobox", "qualname": "Combobox.focus", "kind": "function", "doc": "<p>Sets focus in the input without opening a popup with options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.get_value", "modulename": "dhxpyt.combobox", "qualname": "Combobox.get_value", "kind": "function", "doc": "<p>Gets id(s) of items from data collection selected in Combobox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">as_array</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.is_disabled", "modulename": "dhxpyt.combobox", "qualname": "Combobox.is_disabled", "kind": "function", "doc": "<p>Checks whether a Combobox is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.paint", "modulename": "dhxpyt.combobox", "qualname": "Combobox.paint", "kind": "function", "doc": "<p>Repaints the Combobox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.set_value", "modulename": "dhxpyt.combobox", "qualname": "Combobox.set_value", "kind": "function", "doc": "<p>Selects option(s) in Combobox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.add_event_handler", "modulename": "dhxpyt.combobox", "qualname": "Combobox.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.on_after_close", "modulename": "dhxpyt.combobox", "qualname": "Combobox.on_after_close", "kind": "function", "doc": "<p>Fires after closing a list with options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.on_after_open", "modulename": "dhxpyt.combobox", "qualname": "Combobox.on_after_open", "kind": "function", "doc": "<p>Fires after opening a list with options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.on_before_change", "modulename": "dhxpyt.combobox", "qualname": "Combobox.on_before_change", "kind": "function", "doc": "<p>Fires before selection of a new option.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.on_before_close", "modulename": "dhxpyt.combobox", "qualname": "Combobox.on_before_close", "kind": "function", "doc": "<p>Fires before closing a list with options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.on_before_open", "modulename": "dhxpyt.combobox", "qualname": "Combobox.on_before_open", "kind": "function", "doc": "<p>Fires before opening a list with options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.on_blur", "modulename": "dhxpyt.combobox", "qualname": "Combobox.on_blur", "kind": "function", "doc": "<p>Fires when Combobox has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.on_change", "modulename": "dhxpyt.combobox", "qualname": "Combobox.on_change", "kind": "function", "doc": "<p>Fires when a new option is selected.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.on_focus", "modulename": "dhxpyt.combobox", "qualname": "Combobox.on_focus", "kind": "function", "doc": "<p>Fires when Combobox has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.on_input", "modulename": "dhxpyt.combobox", "qualname": "Combobox.on_input", "kind": "function", "doc": "<p>Fires on typing text in an input of Combobox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.on_keydown", "modulename": "dhxpyt.combobox", "qualname": "Combobox.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and an option of Combobox is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.combobox.Combobox.css", "modulename": "dhxpyt.combobox", "qualname": "Combobox.css", "kind": "variable", "doc": "<p>Gets or sets the CSS classes for Combobox.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.combobox.Combobox.data", "modulename": "dhxpyt.combobox", "qualname": "Combobox.data", "kind": "variable", "doc": "<p>Gets or sets the data objects for Combobox.</p>\n", "annotation": ": List[Dict[str, Any]]"}, {"fullname": "dhxpyt.combobox.Combobox.disabled", "modulename": "dhxpyt.combobox", "qualname": "Combobox.disabled", "kind": "variable", "doc": "<p>Gets or sets whether the Combobox is disabled.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.combobox.Combobox.multiselection", "modulename": "dhxpyt.combobox", "qualname": "Combobox.multiselection", "kind": "variable", "doc": "<p>Gets or sets whether multiple selection is enabled.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.combobox.Combobox.placeholder", "modulename": "dhxpyt.combobox", "qualname": "Combobox.placeholder", "kind": "variable", "doc": "<p>Gets or sets the placeholder text.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.combobox.Combobox.read_only", "modulename": "dhxpyt.combobox", "qualname": "Combobox.read_only", "kind": "variable", "doc": "<p>Gets or sets whether the Combobox is read-only.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.combobox.Combobox.value", "modulename": "dhxpyt.combobox", "qualname": "Combobox.value", "kind": "variable", "doc": "<p>Gets or sets the selected value(s) of the Combobox.</p>\n", "annotation": ": Union[str, int, List[Union[str, int]]]"}, {"fullname": "dhxpyt.combobox.Combobox.filter", "modulename": "dhxpyt.combobox", "qualname": "Combobox.filter", "kind": "variable", "doc": "<p>Gets or sets a custom function for filtering Combobox options.</p>\n", "annotation": ": Callable[[Dict[str, Any], str], bool]"}, {"fullname": "dhxpyt.combobox.Combobox.template", "modulename": "dhxpyt.combobox", "qualname": "Combobox.template", "kind": "variable", "doc": "<p>Gets or sets a template for displaying options.</p>\n", "annotation": ": Callable[[Any], str]"}, {"fullname": "dhxpyt.combobox.ComboboxConfig", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig", "kind": "class", "doc": "<p>Configuration class for Combobox.</p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.__init__", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>css</strong>:  (Optional) Adds style classes to Combobox.</li>\n<li><strong>data</strong>:  (Optional) Specifies an array of data objects to set into the combobox.</li>\n<li><strong>disabled</strong>:  (Optional) Makes Combobox disabled.</li>\n<li><strong>eventHandlers</strong>:  (Optional) Adds event handlers to HTML elements of a custom template.</li>\n<li><strong>filter</strong>:  (Optional) Sets a custom function for filtering Combobox options.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds an icon with a question mark next to the Combo input.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Adds a hidden label for a Combo box input.</li>\n<li><strong>htmlEnable</strong>:  (Optional) Enables rendering of HTML content in options.</li>\n<li><strong>itemHeight</strong>:  (Optional) Sets the height of an item in the list of options.</li>\n<li><strong>itemsCount</strong>:  (Optional) Shows the total number of selected options.</li>\n<li><strong>label</strong>:  (Optional) Adds a label for Combobox.</li>\n<li><strong>labelPosition</strong>:  (Optional) Defines the position of a label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Sets the width of a label.</li>\n<li><strong>listHeight</strong>:  (Optional) Sets the height of the list of options.</li>\n<li><strong>multiselection</strong>:  (Optional) Enables selection of multiple options.</li>\n<li><strong>newOptions</strong>:  (Optional) Allows users to add new options into the data collection.</li>\n<li><strong>placeholder</strong>:  (Optional) Sets a placeholder in the input of Combobox.</li>\n<li><strong>readOnly</strong>:  (Optional) Makes Combobox read-only.</li>\n<li><strong>selectAllButton</strong>:  (Optional) Defines whether the Select All button should be shown.</li>\n<li><strong>template</strong>:  (Optional) Sets a template for displaying options.</li>\n<li><strong>value</strong>:  (Optional) Specifies the values that will appear in the input on initialization.</li>\n<li><strong>virtual</strong>:  (Optional) Enables dynamic loading of data on scrolling the list of options.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">eventHandlers</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">filter</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">htmlEnable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">itemHeight</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">itemsCount</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;auto&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">listHeight</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">224</span>,</span><span class=\"param\">\t<span class=\"n\">multiselection</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">newOptions</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">readOnly</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">selectAllButton</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">template</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">virtual</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.css", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.data", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.disabled", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.eventHandlers", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.eventHandlers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.filter", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.filter", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.helpMessage", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.hiddenLabel", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.htmlEnable", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.htmlEnable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.itemHeight", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.itemHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.itemsCount", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.itemsCount", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.label", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.labelPosition", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.labelWidth", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.listHeight", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.listHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.multiselection", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.multiselection", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.newOptions", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.newOptions", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.placeholder", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.readOnly", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.readOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.selectAllButton", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.selectAllButton", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.template", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.template", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.value", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.virtual", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.virtual", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.combobox.ComboboxConfig.to_dict", "modulename": "dhxpyt.combobox", "qualname": "ComboboxConfig.to_dict", "kind": "function", "doc": "<p>Converts the ComboboxConfig into a dictionary format that can be\npassed into the combobox constructor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form", "modulename": "dhxpyt.form", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Form", "modulename": "dhxpyt.form", "qualname": "Form", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Form.__init__", "modulename": "dhxpyt.form", "qualname": "Form.__init__", "kind": "function", "doc": "<p>Initializes the Form instance.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">form_config</span><span class=\"o\">.</span><span class=\"n\">FormConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Form.form", "modulename": "dhxpyt.form", "qualname": "Form.form", "kind": "variable", "doc": "<p>Form API Functions</p>\n"}, {"fullname": "dhxpyt.form.Form.blur", "modulename": "dhxpyt.form", "qualname": "Form.blur", "kind": "function", "doc": "<p>Removes focus from a control of the Form.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.clear", "modulename": "dhxpyt.form", "qualname": "Form.clear", "kind": "function", "doc": "<p>Clears the form.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.destructor", "modulename": "dhxpyt.form", "qualname": "Form.destructor", "kind": "function", "doc": "<p>Removes the Form instance and releases occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.disable", "modulename": "dhxpyt.form", "qualname": "Form.disable", "kind": "function", "doc": "<p>Disables the Form.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.enable", "modulename": "dhxpyt.form", "qualname": "Form.enable", "kind": "function", "doc": "<p>Enables the Form.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.for_each", "modulename": "dhxpyt.form", "qualname": "Form.for_each", "kind": "function", "doc": "<p>Iterates over all controls of the Form.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.get_item", "modulename": "dhxpyt.form", "qualname": "Form.get_item", "kind": "function", "doc": "<p>Gives access to the object of a Form control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.get_properties", "modulename": "dhxpyt.form", "qualname": "Form.get_properties", "kind": "function", "doc": "<p>Returns objects with available configuration attributes of Form controls.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.get_value", "modulename": "dhxpyt.form", "qualname": "Form.get_value", "kind": "function", "doc": "<p>Gets current values/states of controls.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">as_form_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.hide", "modulename": "dhxpyt.form", "qualname": "Form.hide", "kind": "function", "doc": "<p>Hides the Form.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.is_disabled", "modulename": "dhxpyt.form", "qualname": "Form.is_disabled", "kind": "function", "doc": "<p>Checks whether the Form or a control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.is_visible", "modulename": "dhxpyt.form", "qualname": "Form.is_visible", "kind": "function", "doc": "<p>Checks whether the Form or a control is visible.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.paint", "modulename": "dhxpyt.form", "qualname": "Form.paint", "kind": "function", "doc": "<p>Repaints the Form on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.send", "modulename": "dhxpyt.form", "qualname": "Form.send", "kind": "function", "doc": "<p>Sends the Form to the server.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;POST&#39;</span>, </span><span class=\"param\"><span class=\"n\">as_form_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.set_focus", "modulename": "dhxpyt.form", "qualname": "Form.set_focus", "kind": "function", "doc": "<p>Sets focus to a Form control by its name or id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.set_properties", "modulename": "dhxpyt.form", "qualname": "Form.set_properties", "kind": "function", "doc": "<p>Allows changing available configuration attributes of Form controls dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">arg</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.set_value", "modulename": "dhxpyt.form", "qualname": "Form.set_value", "kind": "function", "doc": "<p>Sets values/states for controls.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.show", "modulename": "dhxpyt.form", "qualname": "Form.show", "kind": "function", "doc": "<p>Shows the Form on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.validate", "modulename": "dhxpyt.form", "qualname": "Form.validate", "kind": "function", "doc": "<p>Validates form fields.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Form.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Form.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes of a Form control have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Form.on_after_hide", "kind": "function", "doc": "<p>Fires after a Form control or its element is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_after_send", "modulename": "dhxpyt.form", "qualname": "Form.on_after_send", "kind": "function", "doc": "<p>Fires after a form is sent to the server.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_after_show", "modulename": "dhxpyt.form", "qualname": "Form.on_after_show", "kind": "function", "doc": "<p>Fires after a Form control or its element is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_after_validate", "modulename": "dhxpyt.form", "qualname": "Form.on_after_validate", "kind": "function", "doc": "<p>Fires after validation of form fields is finished.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_before_change", "modulename": "dhxpyt.form", "qualname": "Form.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of a control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Form.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes of a Form control are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Form.on_before_hide", "kind": "function", "doc": "<p>Fires before a Form control or its element is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_before_send", "modulename": "dhxpyt.form", "qualname": "Form.on_before_send", "kind": "function", "doc": "<p>Fires before a form is sent to the server.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_before_show", "modulename": "dhxpyt.form", "qualname": "Form.on_before_show", "kind": "function", "doc": "<p>Fires before a Form control or its element is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_before_validate", "modulename": "dhxpyt.form", "qualname": "Form.on_before_validate", "kind": "function", "doc": "<p>Fires before validation of form fields has started.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_blur", "modulename": "dhxpyt.form", "qualname": "Form.on_blur", "kind": "function", "doc": "<p>Fires when a control of Form has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_change", "modulename": "dhxpyt.form", "qualname": "Form.on_change", "kind": "function", "doc": "<p>Fires on changing the value of a control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_click", "modulename": "dhxpyt.form", "qualname": "Form.on_click", "kind": "function", "doc": "<p>Fires after a click on a button in a form.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_focus", "modulename": "dhxpyt.form", "qualname": "Form.on_focus", "kind": "function", "doc": "<p>Fires when a control of Form has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.on_keydown", "modulename": "dhxpyt.form", "qualname": "Form.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Form.align", "modulename": "dhxpyt.form", "qualname": "Form.align", "kind": "variable", "doc": "<p>Gets or sets the alignment of controls inside the control group.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.form.Form.cols", "modulename": "dhxpyt.form", "qualname": "Form.cols", "kind": "variable", "doc": "<p>Gets or sets the columns of controls inside the control group.</p>\n", "annotation": ": List[Dict[str, Any]]"}, {"fullname": "dhxpyt.form.Form.css", "modulename": "dhxpyt.form", "qualname": "Form.css", "kind": "variable", "doc": "<p>Gets or sets the CSS classes applied to the control group.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.form.Form.disabled", "modulename": "dhxpyt.form", "qualname": "Form.disabled", "kind": "variable", "doc": "<p>Gets or sets whether the Form is disabled.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.form.Form.height", "modulename": "dhxpyt.form", "qualname": "Form.height", "kind": "variable", "doc": "<p>Gets or sets the height of the control group.</p>\n", "annotation": ": Union[str, int]"}, {"fullname": "dhxpyt.form.Form.hidden", "modulename": "dhxpyt.form", "qualname": "Form.hidden", "kind": "variable", "doc": "<p>Gets or sets whether the Form is hidden.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.form.Form.padding", "modulename": "dhxpyt.form", "qualname": "Form.padding", "kind": "variable", "doc": "<p>Gets or sets the padding for content inside the control group.</p>\n", "annotation": ": Union[str, int]"}, {"fullname": "dhxpyt.form.Form.rows", "modulename": "dhxpyt.form", "qualname": "Form.rows", "kind": "variable", "doc": "<p>Gets or sets the rows of controls inside the control group.</p>\n", "annotation": ": List[Dict[str, Any]]"}, {"fullname": "dhxpyt.form.Form.title", "modulename": "dhxpyt.form", "qualname": "Form.title", "kind": "variable", "doc": "<p>Gets or sets the title of the control group.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.form.Form.width", "modulename": "dhxpyt.form", "qualname": "Form.width", "kind": "variable", "doc": "<p>Gets or sets the width of the control group.</p>\n", "annotation": ": Union[str, int]"}, {"fullname": "dhxpyt.form.FormConfig", "modulename": "dhxpyt.form", "qualname": "FormConfig", "kind": "class", "doc": "<p>Configuration class for Form.</p>\n"}, {"fullname": "dhxpyt.form.FormConfig.__init__", "modulename": "dhxpyt.form", "qualname": "FormConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>align</strong>:  (Optional) Sets the alignment of controls inside the control group.</li>\n<li><strong>cols</strong>:  (Optional) Arranges controls inside the control group horizontally.</li>\n<li><strong>css</strong>:  (Optional) The name of a CSS class(es) applied to the control group.</li>\n<li><strong>disabled</strong>:  (Optional) Makes a form disabled.</li>\n<li><strong>height</strong>:  (Optional) Sets the height of the control group.</li>\n<li><strong>hidden</strong>:  (Optional) Defines whether a form is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding for content inside the control group.</li>\n<li><strong>rows</strong>:  (Optional) Arranges controls inside the control group vertically.</li>\n<li><strong>title</strong>:  (Optional) Specifies the title of the control group.</li>\n<li><strong>width</strong>:  (Optional) Sets the width of the control group.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">align</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;start&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cols</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rows</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span></span>)</span>"}, {"fullname": "dhxpyt.form.FormConfig.align", "modulename": "dhxpyt.form", "qualname": "FormConfig.align", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FormConfig.cols", "modulename": "dhxpyt.form", "qualname": "FormConfig.cols", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FormConfig.css", "modulename": "dhxpyt.form", "qualname": "FormConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FormConfig.disabled", "modulename": "dhxpyt.form", "qualname": "FormConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FormConfig.height", "modulename": "dhxpyt.form", "qualname": "FormConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FormConfig.hidden", "modulename": "dhxpyt.form", "qualname": "FormConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FormConfig.padding", "modulename": "dhxpyt.form", "qualname": "FormConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FormConfig.rows", "modulename": "dhxpyt.form", "qualname": "FormConfig.rows", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FormConfig.title", "modulename": "dhxpyt.form", "qualname": "FormConfig.title", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FormConfig.width", "modulename": "dhxpyt.form", "qualname": "FormConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FormConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "FormConfig.to_dict", "kind": "function", "doc": "<p>Converts the FormConfig into a dictionary format that can be\npassed into the form constructor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar", "modulename": "dhxpyt.form", "qualname": "Avatar", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Avatar.__init__", "modulename": "dhxpyt.form", "qualname": "Avatar.__init__", "kind": "function", "doc": "<p>Initializes the Avatar control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">avatar_config</span><span class=\"o\">.</span><span class=\"n\">AvatarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Avatar.avatar", "modulename": "dhxpyt.form", "qualname": "Avatar.avatar", "kind": "variable", "doc": "<p>Avatar API Functions</p>\n"}, {"fullname": "dhxpyt.form.Avatar.blur", "modulename": "dhxpyt.form", "qualname": "Avatar.blur", "kind": "function", "doc": "<p>Removes focus from the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.clear", "modulename": "dhxpyt.form", "qualname": "Avatar.clear", "kind": "function", "doc": "<p>Clears the value of the Avatar control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.clear_validate", "modulename": "dhxpyt.form", "qualname": "Avatar.clear_validate", "kind": "function", "doc": "<p>Clears validation of the Avatar control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.destructor", "modulename": "dhxpyt.form", "qualname": "Avatar.destructor", "kind": "function", "doc": "<p>Removes the Avatar instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.disable", "modulename": "dhxpyt.form", "qualname": "Avatar.disable", "kind": "function", "doc": "<p>Disables the Avatar control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.enable", "modulename": "dhxpyt.form", "qualname": "Avatar.enable", "kind": "function", "doc": "<p>Enables the Avatar control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.focus", "modulename": "dhxpyt.form", "qualname": "Avatar.focus", "kind": "function", "doc": "<p>Sets focus to the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.get_properties", "modulename": "dhxpyt.form", "qualname": "Avatar.get_properties", "kind": "function", "doc": "<p>Returns an object with the available configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.get_value", "modulename": "dhxpyt.form", "qualname": "Avatar.get_value", "kind": "function", "doc": "<p>Returns the current value of the Avatar control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.hide", "modulename": "dhxpyt.form", "qualname": "Avatar.hide", "kind": "function", "doc": "<p>Hides the Avatar control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.is_disabled", "modulename": "dhxpyt.form", "qualname": "Avatar.is_disabled", "kind": "function", "doc": "<p>Checks whether the Avatar control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.is_visible", "modulename": "dhxpyt.form", "qualname": "Avatar.is_visible", "kind": "function", "doc": "<p>Checks whether the Avatar control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.select_file", "modulename": "dhxpyt.form", "qualname": "Avatar.select_file", "kind": "function", "doc": "<p>Opens the dialog for selecting an image.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.send", "modulename": "dhxpyt.form", "qualname": "Avatar.send", "kind": "function", "doc": "<p>Sends a POST request for a file upload to a server-side URL.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.set_properties", "modulename": "dhxpyt.form", "qualname": "Avatar.set_properties", "kind": "function", "doc": "<p>Allows changing available configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.set_value", "modulename": "dhxpyt.form", "qualname": "Avatar.set_value", "kind": "function", "doc": "<p>Sets the value for the Avatar control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.show", "modulename": "dhxpyt.form", "qualname": "Avatar.show", "kind": "function", "doc": "<p>Shows the Avatar control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.validate", "modulename": "dhxpyt.form", "qualname": "Avatar.validate", "kind": "function", "doc": "<p>Validates the Avatar control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validate_value</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Avatar.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Avatar.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Avatar.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_after_show", "modulename": "dhxpyt.form", "qualname": "Avatar.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_after_validate", "modulename": "dhxpyt.form", "qualname": "Avatar.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_before_change", "modulename": "dhxpyt.form", "qualname": "Avatar.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Avatar.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Avatar.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_before_show", "modulename": "dhxpyt.form", "qualname": "Avatar.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_before_upload_file", "modulename": "dhxpyt.form", "qualname": "Avatar.on_before_upload_file", "kind": "function", "doc": "<p>Fires before file upload begins.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_before_validate", "modulename": "dhxpyt.form", "qualname": "Avatar.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_blur", "modulename": "dhxpyt.form", "qualname": "Avatar.on_blur", "kind": "function", "doc": "<p>Fires when the control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_change", "modulename": "dhxpyt.form", "qualname": "Avatar.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_focus", "modulename": "dhxpyt.form", "qualname": "Avatar.on_focus", "kind": "function", "doc": "<p>Fires when the control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_keydown", "modulename": "dhxpyt.form", "qualname": "Avatar.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and the control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_upload_begin", "modulename": "dhxpyt.form", "qualname": "Avatar.on_upload_begin", "kind": "function", "doc": "<p>Fires when file upload begins.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_upload_complete", "modulename": "dhxpyt.form", "qualname": "Avatar.on_upload_complete", "kind": "function", "doc": "<p>Fires when upload is completed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_upload_fail", "modulename": "dhxpyt.form", "qualname": "Avatar.on_upload_fail", "kind": "function", "doc": "<p>Fires if the file upload failed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_upload_file", "modulename": "dhxpyt.form", "qualname": "Avatar.on_upload_file", "kind": "function", "doc": "<p>Fires when a file has been uploaded.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Avatar.on_upload_progress", "modulename": "dhxpyt.form", "qualname": "Avatar.on_upload_progress", "kind": "function", "doc": "<p>Fires on each percent of a file uploading.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button", "modulename": "dhxpyt.form", "qualname": "Button", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Button.__init__", "modulename": "dhxpyt.form", "qualname": "Button.__init__", "kind": "function", "doc": "<p>Initializes the Button control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">button_config</span><span class=\"o\">.</span><span class=\"n\">ButtonConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Button.button", "modulename": "dhxpyt.form", "qualname": "Button.button", "kind": "variable", "doc": "<p>Button API Functions</p>\n"}, {"fullname": "dhxpyt.form.Button.blur", "modulename": "dhxpyt.form", "qualname": "Button.blur", "kind": "function", "doc": "<p>Removes focus from the Button control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.destructor", "modulename": "dhxpyt.form", "qualname": "Button.destructor", "kind": "function", "doc": "<p>Removes the Button instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.disable", "modulename": "dhxpyt.form", "qualname": "Button.disable", "kind": "function", "doc": "<p>Disables the Button control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.enable", "modulename": "dhxpyt.form", "qualname": "Button.enable", "kind": "function", "doc": "<p>Enables the Button control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.focus", "modulename": "dhxpyt.form", "qualname": "Button.focus", "kind": "function", "doc": "<p>Sets focus to the Button control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.get_properties", "modulename": "dhxpyt.form", "qualname": "Button.get_properties", "kind": "function", "doc": "<p>Returns an object with the available configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.hide", "modulename": "dhxpyt.form", "qualname": "Button.hide", "kind": "function", "doc": "<p>Hides the Button control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.is_disabled", "modulename": "dhxpyt.form", "qualname": "Button.is_disabled", "kind": "function", "doc": "<p>Checks whether the Button control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.is_visible", "modulename": "dhxpyt.form", "qualname": "Button.is_visible", "kind": "function", "doc": "<p>Checks whether the Button control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.set_properties", "modulename": "dhxpyt.form", "qualname": "Button.set_properties", "kind": "function", "doc": "<p>Allows changing available configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.show", "modulename": "dhxpyt.form", "qualname": "Button.show", "kind": "function", "doc": "<p>Shows the Button control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Button.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Button.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Button.on_after_hide", "kind": "function", "doc": "<p>Fires after the Button control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.on_after_show", "modulename": "dhxpyt.form", "qualname": "Button.on_after_show", "kind": "function", "doc": "<p>Fires after the Button control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Button.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Button.on_before_hide", "kind": "function", "doc": "<p>Fires before the Button control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.on_before_show", "modulename": "dhxpyt.form", "qualname": "Button.on_before_show", "kind": "function", "doc": "<p>Fires before the Button control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.on_blur", "modulename": "dhxpyt.form", "qualname": "Button.on_blur", "kind": "function", "doc": "<p>Fires when the Button control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.on_click", "modulename": "dhxpyt.form", "qualname": "Button.on_click", "kind": "function", "doc": "<p>Fires after a click on the Button control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.on_focus", "modulename": "dhxpyt.form", "qualname": "Button.on_focus", "kind": "function", "doc": "<p>Fires when the Button control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Button.on_keydown", "modulename": "dhxpyt.form", "qualname": "Button.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and the Button control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox", "modulename": "dhxpyt.form", "qualname": "Checkbox", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Checkbox.__init__", "modulename": "dhxpyt.form", "qualname": "Checkbox.__init__", "kind": "function", "doc": "<p>Initializes the Checkbox control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">checkbox_config</span><span class=\"o\">.</span><span class=\"n\">CheckboxConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Checkbox.checkbox", "modulename": "dhxpyt.form", "qualname": "Checkbox.checkbox", "kind": "variable", "doc": "<p>Checkbox API Functions</p>\n"}, {"fullname": "dhxpyt.form.Checkbox.blur", "modulename": "dhxpyt.form", "qualname": "Checkbox.blur", "kind": "function", "doc": "<p>Removes focus from the Checkbox control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.clear", "modulename": "dhxpyt.form", "qualname": "Checkbox.clear", "kind": "function", "doc": "<p>Clears the value of the Checkbox control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.clear_validate", "modulename": "dhxpyt.form", "qualname": "Checkbox.clear_validate", "kind": "function", "doc": "<p>Clears validation of the Checkbox control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.destructor", "modulename": "dhxpyt.form", "qualname": "Checkbox.destructor", "kind": "function", "doc": "<p>Removes the Checkbox instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.disable", "modulename": "dhxpyt.form", "qualname": "Checkbox.disable", "kind": "function", "doc": "<p>Disables the Checkbox control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.enable", "modulename": "dhxpyt.form", "qualname": "Checkbox.enable", "kind": "function", "doc": "<p>Enables the Checkbox control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.focus", "modulename": "dhxpyt.form", "qualname": "Checkbox.focus", "kind": "function", "doc": "<p>Sets focus to the Checkbox control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.get_properties", "modulename": "dhxpyt.form", "qualname": "Checkbox.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.get_value", "modulename": "dhxpyt.form", "qualname": "Checkbox.get_value", "kind": "function", "doc": "<p>Returns the current value/state of the Checkbox control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.hide", "modulename": "dhxpyt.form", "qualname": "Checkbox.hide", "kind": "function", "doc": "<p>Hides the Checkbox control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.is_checked", "modulename": "dhxpyt.form", "qualname": "Checkbox.is_checked", "kind": "function", "doc": "<p>Checks whether the Checkbox control is checked.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.is_disabled", "modulename": "dhxpyt.form", "qualname": "Checkbox.is_disabled", "kind": "function", "doc": "<p>Checks whether the Checkbox control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.is_visible", "modulename": "dhxpyt.form", "qualname": "Checkbox.is_visible", "kind": "function", "doc": "<p>Checks whether the Checkbox control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.set_properties", "modulename": "dhxpyt.form", "qualname": "Checkbox.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.set_value", "modulename": "dhxpyt.form", "qualname": "Checkbox.set_value", "kind": "function", "doc": "<p>Sets the state for the Checkbox control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">checked</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.show", "modulename": "dhxpyt.form", "qualname": "Checkbox.show", "kind": "function", "doc": "<p>Shows the Checkbox control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.validate", "modulename": "dhxpyt.form", "qualname": "Checkbox.validate", "kind": "function", "doc": "<p>Validates the Checkbox control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Checkbox.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_after_show", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_after_validate", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_before_change", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_before_show", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_before_validate", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_blur", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_blur", "kind": "function", "doc": "<p>Fires when the control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_change", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_focus", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_focus", "kind": "function", "doc": "<p>Fires when the control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Checkbox.on_keydown", "modulename": "dhxpyt.form", "qualname": "Checkbox.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and the control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroup.__init__", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.__init__", "kind": "function", "doc": "<p>Initializes the CheckboxGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">checkboxgroup_config</span><span class=\"o\">.</span><span class=\"n\">CheckboxGroupConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.CheckboxGroup.checkboxgroup", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.checkboxgroup", "kind": "variable", "doc": "<p>CheckboxGroup API Functions</p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroup.blur", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.blur", "kind": "function", "doc": "<p>Removes focus from the CheckboxGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.clear", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.clear", "kind": "function", "doc": "<p>Clears the value of the CheckboxGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.clear_validate", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.clear_validate", "kind": "function", "doc": "<p>Clears validation of the CheckboxGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.destructor", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.destructor", "kind": "function", "doc": "<p>Removes the CheckboxGroup instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.disable", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.disable", "kind": "function", "doc": "<p>Disables the CheckboxGroup control or a specific checkbox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.enable", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.enable", "kind": "function", "doc": "<p>Enables the CheckboxGroup control or a specific checkbox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.focus", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.focus", "kind": "function", "doc": "<p>Sets focus to a checkbox of the CheckboxGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.get_properties", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.get_properties", "kind": "function", "doc": "<p>Returns configuration attributes of the control or a specific checkbox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.get_value", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.get_value", "kind": "function", "doc": "<p>Returns the current value/state of the control or a specific checkbox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.hide", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.hide", "kind": "function", "doc": "<p>Hides the CheckboxGroup control or a specific checkbox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.is_checked", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.is_checked", "kind": "function", "doc": "<p>Checks whether a checkbox is checked.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.is_disabled", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.is_disabled", "kind": "function", "doc": "<p>Checks whether the control or a specific checkbox is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.is_visible", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.is_visible", "kind": "function", "doc": "<p>Checks whether the control or a specific checkbox is visible.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.set_properties", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">arg</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.set_value", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.set_value", "kind": "function", "doc": "<p>Sets the value for the CheckboxGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.show", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.show", "kind": "function", "doc": "<p>Shows the CheckboxGroup control or a specific checkbox.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.validate", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.validate", "kind": "function", "doc": "<p>Validates the CheckboxGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.add_event_handler", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_after_hide", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_after_hide", "kind": "function", "doc": "<p>Fires after the control or its checkbox is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_after_show", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_after_show", "kind": "function", "doc": "<p>Fires after the control or its checkbox is shown.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_after_validate", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_before_change", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_before_hide", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_before_hide", "kind": "function", "doc": "<p>Fires before the control or its checkbox is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_before_show", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_before_show", "kind": "function", "doc": "<p>Fires before the control or its checkbox is shown.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_before_validate", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_blur", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_blur", "kind": "function", "doc": "<p>Fires when the control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_change", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_focus", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_focus", "kind": "function", "doc": "<p>Fires when the control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroup.on_keydown", "modulename": "dhxpyt.form", "qualname": "CheckboxGroup.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and a checkbox is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker", "modulename": "dhxpyt.form", "qualname": "Colorpicker", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Colorpicker.__init__", "modulename": "dhxpyt.form", "qualname": "Colorpicker.__init__", "kind": "function", "doc": "<p>Initializes the ColorPicker control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">colorpicker_config</span><span class=\"o\">.</span><span class=\"n\">ColorpickerConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Colorpicker.colorpicker", "modulename": "dhxpyt.form", "qualname": "Colorpicker.colorpicker", "kind": "variable", "doc": "<p>ColorPicker API Functions</p>\n"}, {"fullname": "dhxpyt.form.Colorpicker.blur", "modulename": "dhxpyt.form", "qualname": "Colorpicker.blur", "kind": "function", "doc": "<p>Removes focus from the ColorPicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.clear", "modulename": "dhxpyt.form", "qualname": "Colorpicker.clear", "kind": "function", "doc": "<p>Clears the value of the ColorPicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.clear_validate", "modulename": "dhxpyt.form", "qualname": "Colorpicker.clear_validate", "kind": "function", "doc": "<p>Clears validation of the ColorPicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.destructor", "modulename": "dhxpyt.form", "qualname": "Colorpicker.destructor", "kind": "function", "doc": "<p>Removes the ColorPicker instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.disable", "modulename": "dhxpyt.form", "qualname": "Colorpicker.disable", "kind": "function", "doc": "<p>Disables the ColorPicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.enable", "modulename": "dhxpyt.form", "qualname": "Colorpicker.enable", "kind": "function", "doc": "<p>Enables the ColorPicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.focus", "modulename": "dhxpyt.form", "qualname": "Colorpicker.focus", "kind": "function", "doc": "<p>Sets focus to the ColorPicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.get_properties", "modulename": "dhxpyt.form", "qualname": "Colorpicker.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.get_value", "modulename": "dhxpyt.form", "qualname": "Colorpicker.get_value", "kind": "function", "doc": "<p>Returns the current value of the ColorPicker control (in Hex format).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.get_widget", "modulename": "dhxpyt.form", "qualname": "Colorpicker.get_widget", "kind": "function", "doc": "<p>Returns the DHTMLX ColorPicker widget attached to the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.hide", "modulename": "dhxpyt.form", "qualname": "Colorpicker.hide", "kind": "function", "doc": "<p>Hides the ColorPicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.is_disabled", "modulename": "dhxpyt.form", "qualname": "Colorpicker.is_disabled", "kind": "function", "doc": "<p>Checks whether the ColorPicker control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.is_visible", "modulename": "dhxpyt.form", "qualname": "Colorpicker.is_visible", "kind": "function", "doc": "<p>Checks whether the ColorPicker control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.set_properties", "modulename": "dhxpyt.form", "qualname": "Colorpicker.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.set_value", "modulename": "dhxpyt.form", "qualname": "Colorpicker.set_value", "kind": "function", "doc": "<p>Sets the value for the ColorPicker control (Hex format).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.show", "modulename": "dhxpyt.form", "qualname": "Colorpicker.show", "kind": "function", "doc": "<p>Shows the ColorPicker control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.validate", "modulename": "dhxpyt.form", "qualname": "Colorpicker.validate", "kind": "function", "doc": "<p>Validates the ColorPicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">validate_value</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Colorpicker.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_after_show", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_after_validate", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_before_change", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_before_show", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_before_validate", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_blur", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_blur", "kind": "function", "doc": "<p>Fires when the control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_change", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_focus", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_focus", "kind": "function", "doc": "<p>Fires when the control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_input", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_input", "kind": "function", "doc": "<p>Fires when a user enters the value manually.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Colorpicker.on_keydown", "modulename": "dhxpyt.form", "qualname": "Colorpicker.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and the control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo", "modulename": "dhxpyt.form", "qualname": "Combo", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Combo.__init__", "modulename": "dhxpyt.form", "qualname": "Combo.__init__", "kind": "function", "doc": "<p>Initializes the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">combo_config</span><span class=\"o\">.</span><span class=\"n\">ComboConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Combo.combo", "modulename": "dhxpyt.form", "qualname": "Combo.combo", "kind": "variable", "doc": "<p>Combo API Functions</p>\n"}, {"fullname": "dhxpyt.form.Combo.blur", "modulename": "dhxpyt.form", "qualname": "Combo.blur", "kind": "function", "doc": "<p>Removes focus from the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.clear", "modulename": "dhxpyt.form", "qualname": "Combo.clear", "kind": "function", "doc": "<p>Clears the value of the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.clear_validate", "modulename": "dhxpyt.form", "qualname": "Combo.clear_validate", "kind": "function", "doc": "<p>Clears validation of the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.destructor", "modulename": "dhxpyt.form", "qualname": "Combo.destructor", "kind": "function", "doc": "<p>Removes the Combo instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.disable", "modulename": "dhxpyt.form", "qualname": "Combo.disable", "kind": "function", "doc": "<p>Disables the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.enable", "modulename": "dhxpyt.form", "qualname": "Combo.enable", "kind": "function", "doc": "<p>Enables the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.focus", "modulename": "dhxpyt.form", "qualname": "Combo.focus", "kind": "function", "doc": "<p>Sets focus to the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.get_properties", "modulename": "dhxpyt.form", "qualname": "Combo.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.get_value", "modulename": "dhxpyt.form", "qualname": "Combo.get_value", "kind": "function", "doc": "<p>Returns IDs of options which are currently selected in the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.get_widget", "modulename": "dhxpyt.form", "qualname": "Combo.get_widget", "kind": "function", "doc": "<p>Returns the ComboBox widget attached to the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.hide", "modulename": "dhxpyt.form", "qualname": "Combo.hide", "kind": "function", "doc": "<p>Hides the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.is_disabled", "modulename": "dhxpyt.form", "qualname": "Combo.is_disabled", "kind": "function", "doc": "<p>Checks whether the Combo control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.is_visible", "modulename": "dhxpyt.form", "qualname": "Combo.is_visible", "kind": "function", "doc": "<p>Checks whether the Combo control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.set_properties", "modulename": "dhxpyt.form", "qualname": "Combo.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.set_value", "modulename": "dhxpyt.form", "qualname": "Combo.set_value", "kind": "function", "doc": "<p>Sets the value for the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.show", "modulename": "dhxpyt.form", "qualname": "Combo.show", "kind": "function", "doc": "<p>Shows the Combo control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.validate", "modulename": "dhxpyt.form", "qualname": "Combo.validate", "kind": "function", "doc": "<p>Validates the Combo control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validate_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Combo.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Combo.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Combo.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_after_show", "modulename": "dhxpyt.form", "qualname": "Combo.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_after_validate", "modulename": "dhxpyt.form", "qualname": "Combo.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_before_change", "modulename": "dhxpyt.form", "qualname": "Combo.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Combo.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Combo.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_before_show", "modulename": "dhxpyt.form", "qualname": "Combo.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_before_validate", "modulename": "dhxpyt.form", "qualname": "Combo.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_blur", "modulename": "dhxpyt.form", "qualname": "Combo.on_blur", "kind": "function", "doc": "<p>Fires when the control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_change", "modulename": "dhxpyt.form", "qualname": "Combo.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_focus", "modulename": "dhxpyt.form", "qualname": "Combo.on_focus", "kind": "function", "doc": "<p>Fires when the control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Combo.on_keydown", "modulename": "dhxpyt.form", "qualname": "Combo.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and an option is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container", "modulename": "dhxpyt.form", "qualname": "Container", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Container.__init__", "modulename": "dhxpyt.form", "qualname": "Container.__init__", "kind": "function", "doc": "<p>Initializes the Container control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">container_config</span><span class=\"o\">.</span><span class=\"n\">ContainerConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Container.container", "modulename": "dhxpyt.form", "qualname": "Container.container", "kind": "variable", "doc": "<p>Container API Functions</p>\n"}, {"fullname": "dhxpyt.form.Container.attach", "modulename": "dhxpyt.form", "qualname": "Container.attach", "kind": "function", "doc": "<p>Attaches a DHTMLX widget into the Container control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">widget</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.attach_html", "modulename": "dhxpyt.form", "qualname": "Container.attach_html", "kind": "function", "doc": "<p>Attaches an HTML content into the Container control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.disable", "modulename": "dhxpyt.form", "qualname": "Container.disable", "kind": "function", "doc": "<p>Disables the Container control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.enable", "modulename": "dhxpyt.form", "qualname": "Container.enable", "kind": "function", "doc": "<p>Enables the Container control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.get_properties", "modulename": "dhxpyt.form", "qualname": "Container.get_properties", "kind": "function", "doc": "<p>Returns the configuration properties of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.hide", "modulename": "dhxpyt.form", "qualname": "Container.hide", "kind": "function", "doc": "<p>Hides the Container control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.is_disabled", "modulename": "dhxpyt.form", "qualname": "Container.is_disabled", "kind": "function", "doc": "<p>Checks whether the Container control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.is_visible", "modulename": "dhxpyt.form", "qualname": "Container.is_visible", "kind": "function", "doc": "<p>Checks whether the Container control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.set_properties", "modulename": "dhxpyt.form", "qualname": "Container.set_properties", "kind": "function", "doc": "<p>Allows changing configuration properties of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.show", "modulename": "dhxpyt.form", "qualname": "Container.show", "kind": "function", "doc": "<p>Shows the Container control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Container.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Container.on_after_change_properties", "kind": "function", "doc": "<p>Fires after properties have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Container.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.on_after_show", "modulename": "dhxpyt.form", "qualname": "Container.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Container.on_before_change_properties", "kind": "function", "doc": "<p>Fires before properties are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Container.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Container.on_before_show", "modulename": "dhxpyt.form", "qualname": "Container.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker", "modulename": "dhxpyt.form", "qualname": "Datepicker", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Datepicker.__init__", "modulename": "dhxpyt.form", "qualname": "Datepicker.__init__", "kind": "function", "doc": "<p>Initializes the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">datepicker_config</span><span class=\"o\">.</span><span class=\"n\">DatepickerConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Datepicker.datepicker", "modulename": "dhxpyt.form", "qualname": "Datepicker.datepicker", "kind": "variable", "doc": "<p>DatePicker API Functions</p>\n"}, {"fullname": "dhxpyt.form.Datepicker.blur", "modulename": "dhxpyt.form", "qualname": "Datepicker.blur", "kind": "function", "doc": "<p>Removes focus from the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.clear", "modulename": "dhxpyt.form", "qualname": "Datepicker.clear", "kind": "function", "doc": "<p>Clears the value of the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.clear_validate", "modulename": "dhxpyt.form", "qualname": "Datepicker.clear_validate", "kind": "function", "doc": "<p>Clears validation of the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.destructor", "modulename": "dhxpyt.form", "qualname": "Datepicker.destructor", "kind": "function", "doc": "<p>Removes the DatePicker instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.disable", "modulename": "dhxpyt.form", "qualname": "Datepicker.disable", "kind": "function", "doc": "<p>Disables the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.enable", "modulename": "dhxpyt.form", "qualname": "Datepicker.enable", "kind": "function", "doc": "<p>Enables the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.focus", "modulename": "dhxpyt.form", "qualname": "Datepicker.focus", "kind": "function", "doc": "<p>Sets focus to the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.get_properties", "modulename": "dhxpyt.form", "qualname": "Datepicker.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.get_value", "modulename": "dhxpyt.form", "qualname": "Datepicker.get_value", "kind": "function", "doc": "<p>Returns the current value of the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">as_date</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.get_widget", "modulename": "dhxpyt.form", "qualname": "Datepicker.get_widget", "kind": "function", "doc": "<p>Returns the DHTMLX Calendar widget attached to the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.hide", "modulename": "dhxpyt.form", "qualname": "Datepicker.hide", "kind": "function", "doc": "<p>Hides the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.is_disabled", "modulename": "dhxpyt.form", "qualname": "Datepicker.is_disabled", "kind": "function", "doc": "<p>Checks whether the DatePicker control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.is_visible", "modulename": "dhxpyt.form", "qualname": "Datepicker.is_visible", "kind": "function", "doc": "<p>Checks whether the DatePicker control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.set_properties", "modulename": "dhxpyt.form", "qualname": "Datepicker.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.set_value", "modulename": "dhxpyt.form", "qualname": "Datepicker.set_value", "kind": "function", "doc": "<p>Sets a date in the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.show", "modulename": "dhxpyt.form", "qualname": "Datepicker.show", "kind": "function", "doc": "<p>Shows the DatePicker control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.validate", "modulename": "dhxpyt.form", "qualname": "Datepicker.validate", "kind": "function", "doc": "<p>Validates the DatePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validate_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Datepicker.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_after_show", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_after_validate", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_before_change", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_before_show", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_before_validate", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_blur", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_blur", "kind": "function", "doc": "<p>Fires when the control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_change", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_focus", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_focus", "kind": "function", "doc": "<p>Fires when the control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_input", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_input", "kind": "function", "doc": "<p>Fires when a user enters the value manually.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Datepicker.on_keydown", "modulename": "dhxpyt.form", "qualname": "Datepicker.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and the control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset", "modulename": "dhxpyt.form", "qualname": "Fieldset", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Fieldset.__init__", "modulename": "dhxpyt.form", "qualname": "Fieldset.__init__", "kind": "function", "doc": "<p>Initializes the Fieldset control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">fieldset_config</span><span class=\"o\">.</span><span class=\"n\">FieldsetConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Fieldset.fieldset", "modulename": "dhxpyt.form", "qualname": "Fieldset.fieldset", "kind": "variable", "doc": "<p>Fieldset API Functions</p>\n"}, {"fullname": "dhxpyt.form.Fieldset.destructor", "modulename": "dhxpyt.form", "qualname": "Fieldset.destructor", "kind": "function", "doc": "<p>Removes the Fieldset instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.disable", "modulename": "dhxpyt.form", "qualname": "Fieldset.disable", "kind": "function", "doc": "<p>Disables the Fieldset control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.enable", "modulename": "dhxpyt.form", "qualname": "Fieldset.enable", "kind": "function", "doc": "<p>Enables the Fieldset control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.for_each", "modulename": "dhxpyt.form", "qualname": "Fieldset.for_each", "kind": "function", "doc": "<p>Allows iterating through all the nested items.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">tree</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.get_properties", "modulename": "dhxpyt.form", "qualname": "Fieldset.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.hide", "modulename": "dhxpyt.form", "qualname": "Fieldset.hide", "kind": "function", "doc": "<p>Hides the Fieldset control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.is_disabled", "modulename": "dhxpyt.form", "qualname": "Fieldset.is_disabled", "kind": "function", "doc": "<p>Checks whether the Fieldset control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.is_visible", "modulename": "dhxpyt.form", "qualname": "Fieldset.is_visible", "kind": "function", "doc": "<p>Checks whether the Fieldset control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.set_properties", "modulename": "dhxpyt.form", "qualname": "Fieldset.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.show", "modulename": "dhxpyt.form", "qualname": "Fieldset.show", "kind": "function", "doc": "<p>Shows the Fieldset control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Fieldset.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Fieldset.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Fieldset.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Fieldset.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input", "modulename": "dhxpyt.form", "qualname": "Input", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Input.__init__", "modulename": "dhxpyt.form", "qualname": "Input.__init__", "kind": "function", "doc": "<p>Initializes the Input control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">input_config</span><span class=\"o\">.</span><span class=\"n\">InputConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Input.input", "modulename": "dhxpyt.form", "qualname": "Input.input", "kind": "variable", "doc": "<p>Input API Functions</p>\n"}, {"fullname": "dhxpyt.form.Input.blur", "modulename": "dhxpyt.form", "qualname": "Input.blur", "kind": "function", "doc": "<p>Removes focus from the Input control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.clear", "modulename": "dhxpyt.form", "qualname": "Input.clear", "kind": "function", "doc": "<p>Clears the value of the Input control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.clear_validate", "modulename": "dhxpyt.form", "qualname": "Input.clear_validate", "kind": "function", "doc": "<p>Clears validation of the Input control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.destructor", "modulename": "dhxpyt.form", "qualname": "Input.destructor", "kind": "function", "doc": "<p>Removes the Input instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.disable", "modulename": "dhxpyt.form", "qualname": "Input.disable", "kind": "function", "doc": "<p>Disables the Input control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.enable", "modulename": "dhxpyt.form", "qualname": "Input.enable", "kind": "function", "doc": "<p>Enables the Input control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.focus", "modulename": "dhxpyt.form", "qualname": "Input.focus", "kind": "function", "doc": "<p>Sets focus to the Input control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.get_properties", "modulename": "dhxpyt.form", "qualname": "Input.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.get_value", "modulename": "dhxpyt.form", "qualname": "Input.get_value", "kind": "function", "doc": "<p>Returns the current value of the Input control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.hide", "modulename": "dhxpyt.form", "qualname": "Input.hide", "kind": "function", "doc": "<p>Hides the Input control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.is_disabled", "modulename": "dhxpyt.form", "qualname": "Input.is_disabled", "kind": "function", "doc": "<p>Checks whether the Input control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.is_visible", "modulename": "dhxpyt.form", "qualname": "Input.is_visible", "kind": "function", "doc": "<p>Checks whether the Input control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.set_properties", "modulename": "dhxpyt.form", "qualname": "Input.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.set_value", "modulename": "dhxpyt.form", "qualname": "Input.set_value", "kind": "function", "doc": "<p>Sets the value for the Input control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.show", "modulename": "dhxpyt.form", "qualname": "Input.show", "kind": "function", "doc": "<p>Shows the Input control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.validate", "modulename": "dhxpyt.form", "qualname": "Input.validate", "kind": "function", "doc": "<p>Validates the Input control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validate_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Input.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Input.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Input.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_after_show", "modulename": "dhxpyt.form", "qualname": "Input.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_after_validate", "modulename": "dhxpyt.form", "qualname": "Input.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_before_change", "modulename": "dhxpyt.form", "qualname": "Input.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Input.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Input.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_before_show", "modulename": "dhxpyt.form", "qualname": "Input.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_before_validate", "modulename": "dhxpyt.form", "qualname": "Input.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_blur", "modulename": "dhxpyt.form", "qualname": "Input.on_blur", "kind": "function", "doc": "<p>Fires when the control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_change", "modulename": "dhxpyt.form", "qualname": "Input.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_focus", "modulename": "dhxpyt.form", "qualname": "Input.on_focus", "kind": "function", "doc": "<p>Fires when the control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_input", "modulename": "dhxpyt.form", "qualname": "Input.on_input", "kind": "function", "doc": "<p>Fires when a user types some text in the input.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Input.on_keydown", "modulename": "dhxpyt.form", "qualname": "Input.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and the control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup", "modulename": "dhxpyt.form", "qualname": "RadioGroup", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroup.__init__", "modulename": "dhxpyt.form", "qualname": "RadioGroup.__init__", "kind": "function", "doc": "<p>Initializes the RadioGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">radiogroup_config</span><span class=\"o\">.</span><span class=\"n\">RadioGroupConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.RadioGroup.radiogroup", "modulename": "dhxpyt.form", "qualname": "RadioGroup.radiogroup", "kind": "variable", "doc": "<p>RadioGroup API Functions</p>\n"}, {"fullname": "dhxpyt.form.RadioGroup.blur", "modulename": "dhxpyt.form", "qualname": "RadioGroup.blur", "kind": "function", "doc": "<p>Removes focus from the RadioGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.clear", "modulename": "dhxpyt.form", "qualname": "RadioGroup.clear", "kind": "function", "doc": "<p>Clears the value of the RadioGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.clear_validate", "modulename": "dhxpyt.form", "qualname": "RadioGroup.clear_validate", "kind": "function", "doc": "<p>Clears validation of the RadioGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.destructor", "modulename": "dhxpyt.form", "qualname": "RadioGroup.destructor", "kind": "function", "doc": "<p>Removes the RadioGroup instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.disable", "modulename": "dhxpyt.form", "qualname": "RadioGroup.disable", "kind": "function", "doc": "<p>Disables the RadioGroup control or a specific element inside the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.enable", "modulename": "dhxpyt.form", "qualname": "RadioGroup.enable", "kind": "function", "doc": "<p>Enables the RadioGroup control or a specific element inside the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.focus", "modulename": "dhxpyt.form", "qualname": "RadioGroup.focus", "kind": "function", "doc": "<p>Sets focus to the radio button of the RadioGroup control by its id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.get_properties", "modulename": "dhxpyt.form", "qualname": "RadioGroup.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control or a specific radio button.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.get_value", "modulename": "dhxpyt.form", "qualname": "RadioGroup.get_value", "kind": "function", "doc": "<p>Returns the current value of the RadioGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.hide", "modulename": "dhxpyt.form", "qualname": "RadioGroup.hide", "kind": "function", "doc": "<p>Hides either a radio button of RadioGroup or the whole RadioGroup.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.is_disabled", "modulename": "dhxpyt.form", "qualname": "RadioGroup.is_disabled", "kind": "function", "doc": "<p>Checks whether the RadioGroup control or a specific element is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.is_visible", "modulename": "dhxpyt.form", "qualname": "RadioGroup.is_visible", "kind": "function", "doc": "<p>Checks whether the RadioGroup control or a specific element is visible.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.set_properties", "modulename": "dhxpyt.form", "qualname": "RadioGroup.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">arg</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">props</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.set_value", "modulename": "dhxpyt.form", "qualname": "RadioGroup.set_value", "kind": "function", "doc": "<p>Sets the value for the RadioGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.show", "modulename": "dhxpyt.form", "qualname": "RadioGroup.show", "kind": "function", "doc": "<p>Shows either a radio button of RadioGroup or the whole RadioGroup.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.validate", "modulename": "dhxpyt.form", "qualname": "RadioGroup.validate", "kind": "function", "doc": "<p>Validates the RadioGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.add_event_handler", "modulename": "dhxpyt.form", "qualname": "RadioGroup.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_after_hide", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_after_hide", "kind": "function", "doc": "<p>Fires after the control or its radio button is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_after_show", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_after_show", "kind": "function", "doc": "<p>Fires after the control or its radio button is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_after_validate", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_before_change", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_before_hide", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_before_hide", "kind": "function", "doc": "<p>Fires before the control or its radio button is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_before_show", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_before_show", "kind": "function", "doc": "<p>Fires before the control or its radio button is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_before_validate", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_blur", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_blur", "kind": "function", "doc": "<p>Fires when the RadioGroup control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_change", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_focus", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_focus", "kind": "function", "doc": "<p>Fires when the RadioGroup control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroup.on_keydown", "modulename": "dhxpyt.form", "qualname": "RadioGroup.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and a radio button is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select", "modulename": "dhxpyt.form", "qualname": "Select", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Select.__init__", "modulename": "dhxpyt.form", "qualname": "Select.__init__", "kind": "function", "doc": "<p>Initializes the Select control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">select_config</span><span class=\"o\">.</span><span class=\"n\">SelectConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Select.select", "modulename": "dhxpyt.form", "qualname": "Select.select", "kind": "variable", "doc": "<p>Select API Functions</p>\n"}, {"fullname": "dhxpyt.form.Select.blur", "modulename": "dhxpyt.form", "qualname": "Select.blur", "kind": "function", "doc": "<p>Removes focus from the Select control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.clear", "modulename": "dhxpyt.form", "qualname": "Select.clear", "kind": "function", "doc": "<p>Clears the value of the Select control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.clear_validate", "modulename": "dhxpyt.form", "qualname": "Select.clear_validate", "kind": "function", "doc": "<p>Clears validation of the Select control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.destructor", "modulename": "dhxpyt.form", "qualname": "Select.destructor", "kind": "function", "doc": "<p>Removes the Select instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.disable", "modulename": "dhxpyt.form", "qualname": "Select.disable", "kind": "function", "doc": "<p>Disables the Select control or a specific option.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.enable", "modulename": "dhxpyt.form", "qualname": "Select.enable", "kind": "function", "doc": "<p>Enables the Select control or a specific option.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.focus", "modulename": "dhxpyt.form", "qualname": "Select.focus", "kind": "function", "doc": "<p>Sets focus to the Select control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.get_properties", "modulename": "dhxpyt.form", "qualname": "Select.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.get_options", "modulename": "dhxpyt.form", "qualname": "Select.get_options", "kind": "function", "doc": "<p>Returns an array of Select options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.get_value", "modulename": "dhxpyt.form", "qualname": "Select.get_value", "kind": "function", "doc": "<p>Returns the current value of the Select control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.hide", "modulename": "dhxpyt.form", "qualname": "Select.hide", "kind": "function", "doc": "<p>Hides the Select control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.is_disabled", "modulename": "dhxpyt.form", "qualname": "Select.is_disabled", "kind": "function", "doc": "<p>Checks whether the Select control or a specific option is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.is_visible", "modulename": "dhxpyt.form", "qualname": "Select.is_visible", "kind": "function", "doc": "<p>Checks whether the Select control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.set_options", "modulename": "dhxpyt.form", "qualname": "Select.set_options", "kind": "function", "doc": "<p>Allows changing a list of Select options dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.set_properties", "modulename": "dhxpyt.form", "qualname": "Select.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.set_value", "modulename": "dhxpyt.form", "qualname": "Select.set_value", "kind": "function", "doc": "<p>Sets the value for the Select control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.show", "modulename": "dhxpyt.form", "qualname": "Select.show", "kind": "function", "doc": "<p>Shows the Select control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.validate", "modulename": "dhxpyt.form", "qualname": "Select.validate", "kind": "function", "doc": "<p>Validates the Select control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Select.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Select.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Select.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_after_show", "modulename": "dhxpyt.form", "qualname": "Select.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_after_validate", "modulename": "dhxpyt.form", "qualname": "Select.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_before_change", "modulename": "dhxpyt.form", "qualname": "Select.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_before_change_options", "modulename": "dhxpyt.form", "qualname": "Select.on_before_change_options", "kind": "function", "doc": "<p>Fires before changing a list of Select options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Select.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Select.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_before_show", "modulename": "dhxpyt.form", "qualname": "Select.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_before_validate", "modulename": "dhxpyt.form", "qualname": "Select.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_blur", "modulename": "dhxpyt.form", "qualname": "Select.on_blur", "kind": "function", "doc": "<p>Fires when the control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_change", "modulename": "dhxpyt.form", "qualname": "Select.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_change_options", "modulename": "dhxpyt.form", "qualname": "Select.on_change_options", "kind": "function", "doc": "<p>Fires on changing a list of Select options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_focus", "modulename": "dhxpyt.form", "qualname": "Select.on_focus", "kind": "function", "doc": "<p>Fires when the control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Select.on_keydown", "modulename": "dhxpyt.form", "qualname": "Select.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and the control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault", "modulename": "dhxpyt.form", "qualname": "SimpleVault", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVault.__init__", "modulename": "dhxpyt.form", "qualname": "SimpleVault.__init__", "kind": "function", "doc": "<p>Initializes the SimpleVault control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">simplevault_config</span><span class=\"o\">.</span><span class=\"n\">SimpleVaultConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.SimpleVault.simplevault", "modulename": "dhxpyt.form", "qualname": "SimpleVault.simplevault", "kind": "variable", "doc": "<p>SimpleVault API Functions</p>\n"}, {"fullname": "dhxpyt.form.SimpleVault.blur", "modulename": "dhxpyt.form", "qualname": "SimpleVault.blur", "kind": "function", "doc": "<p>Removes focus from the SimpleVault control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.clear", "modulename": "dhxpyt.form", "qualname": "SimpleVault.clear", "kind": "function", "doc": "<p>Clears the value of the SimpleVault control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.clear_validate", "modulename": "dhxpyt.form", "qualname": "SimpleVault.clear_validate", "kind": "function", "doc": "<p>Clears validation of the SimpleVault control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.destructor", "modulename": "dhxpyt.form", "qualname": "SimpleVault.destructor", "kind": "function", "doc": "<p>Removes the SimpleVault instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.disable", "modulename": "dhxpyt.form", "qualname": "SimpleVault.disable", "kind": "function", "doc": "<p>Disables the SimpleVault control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.enable", "modulename": "dhxpyt.form", "qualname": "SimpleVault.enable", "kind": "function", "doc": "<p>Enables the SimpleVault control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.focus", "modulename": "dhxpyt.form", "qualname": "SimpleVault.focus", "kind": "function", "doc": "<p>Sets focus to the SimpleVault control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.get_properties", "modulename": "dhxpyt.form", "qualname": "SimpleVault.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.get_value", "modulename": "dhxpyt.form", "qualname": "SimpleVault.get_value", "kind": "function", "doc": "<p>Returns the current value of the SimpleVault control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.hide", "modulename": "dhxpyt.form", "qualname": "SimpleVault.hide", "kind": "function", "doc": "<p>Hides the SimpleVault control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.is_disabled", "modulename": "dhxpyt.form", "qualname": "SimpleVault.is_disabled", "kind": "function", "doc": "<p>Checks whether the SimpleVault control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.is_visible", "modulename": "dhxpyt.form", "qualname": "SimpleVault.is_visible", "kind": "function", "doc": "<p>Checks whether the SimpleVault control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.select_file", "modulename": "dhxpyt.form", "qualname": "SimpleVault.select_file", "kind": "function", "doc": "<p>Opens the dialog for selecting new files for adding to the SimpleVault.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.send", "modulename": "dhxpyt.form", "qualname": "SimpleVault.send", "kind": "function", "doc": "<p>Sends a POST request for file upload to a server-side URL.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.set_properties", "modulename": "dhxpyt.form", "qualname": "SimpleVault.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.set_value", "modulename": "dhxpyt.form", "qualname": "SimpleVault.set_value", "kind": "function", "doc": "<p>Sets the value for the SimpleVault control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.show", "modulename": "dhxpyt.form", "qualname": "SimpleVault.show", "kind": "function", "doc": "<p>Shows the SimpleVault control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.validate", "modulename": "dhxpyt.form", "qualname": "SimpleVault.validate", "kind": "function", "doc": "<p>Validates the SimpleVault control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validate_value</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.add_event_handler", "modulename": "dhxpyt.form", "qualname": "SimpleVault.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_after_add", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_after_add", "kind": "function", "doc": "<p>Fires after a file is added to the data collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_after_hide", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_after_remove", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_after_remove", "kind": "function", "doc": "<p>Fires after a file is removed from the data collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_after_show", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_after_validate", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_before_add", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_before_add", "kind": "function", "doc": "<p>Fires before a file is added to the data collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_before_change", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_before_hide", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_before_remove", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_before_remove", "kind": "function", "doc": "<p>Fires before a file is removed from the data collection.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_before_show", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_before_upload_file", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_before_upload_file", "kind": "function", "doc": "<p>Fires before file upload begins.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_before_validate", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_change", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_upload_begin", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_upload_begin", "kind": "function", "doc": "<p>Fires when file upload begins.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_upload_complete", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_upload_complete", "kind": "function", "doc": "<p>Fires when upload is completed.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_upload_fail", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_upload_fail", "kind": "function", "doc": "<p>Fires if the file upload failed.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_upload_file", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_upload_file", "kind": "function", "doc": "<p>Fires when a file has been uploaded.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVault.on_upload_progress", "modulename": "dhxpyt.form", "qualname": "SimpleVault.on_upload_progress", "kind": "function", "doc": "<p>Fires on each percent of files uploading.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider", "modulename": "dhxpyt.form", "qualname": "Slider", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Slider.__init__", "modulename": "dhxpyt.form", "qualname": "Slider.__init__", "kind": "function", "doc": "<p>Initializes the Slider control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">slider_config</span><span class=\"o\">.</span><span class=\"n\">SliderConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Slider.slider", "modulename": "dhxpyt.form", "qualname": "Slider.slider", "kind": "variable", "doc": "<p>Slider API Functions</p>\n"}, {"fullname": "dhxpyt.form.Slider.blur", "modulename": "dhxpyt.form", "qualname": "Slider.blur", "kind": "function", "doc": "<p>Removes focus from a thumb of a Slider control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.clear", "modulename": "dhxpyt.form", "qualname": "Slider.clear", "kind": "function", "doc": "<p>Clears the value of the Slider control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.destructor", "modulename": "dhxpyt.form", "qualname": "Slider.destructor", "kind": "function", "doc": "<p>Removes the Slider instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.disable", "modulename": "dhxpyt.form", "qualname": "Slider.disable", "kind": "function", "doc": "<p>Disables the Slider control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.enable", "modulename": "dhxpyt.form", "qualname": "Slider.enable", "kind": "function", "doc": "<p>Enables the Slider control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.focus", "modulename": "dhxpyt.form", "qualname": "Slider.focus", "kind": "function", "doc": "<p>Sets focus to a thumb of a Slider control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">extra</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.get_properties", "modulename": "dhxpyt.form", "qualname": "Slider.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.get_value", "modulename": "dhxpyt.form", "qualname": "Slider.get_value", "kind": "function", "doc": "<p>Returns the current value of the Slider control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.get_widget", "modulename": "dhxpyt.form", "qualname": "Slider.get_widget", "kind": "function", "doc": "<p>Returns the DHTMLX Slider widget attached to a Slider control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.hide", "modulename": "dhxpyt.form", "qualname": "Slider.hide", "kind": "function", "doc": "<p>Hides the Slider control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.is_disabled", "modulename": "dhxpyt.form", "qualname": "Slider.is_disabled", "kind": "function", "doc": "<p>Checks whether the Slider control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.is_visible", "modulename": "dhxpyt.form", "qualname": "Slider.is_visible", "kind": "function", "doc": "<p>Checks whether the Slider control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.set_properties", "modulename": "dhxpyt.form", "qualname": "Slider.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.set_value", "modulename": "dhxpyt.form", "qualname": "Slider.set_value", "kind": "function", "doc": "<p>Sets the value for the Slider control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.show", "modulename": "dhxpyt.form", "qualname": "Slider.show", "kind": "function", "doc": "<p>Shows the Slider control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Slider.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Slider.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Slider.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.on_after_show", "modulename": "dhxpyt.form", "qualname": "Slider.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.on_before_change", "modulename": "dhxpyt.form", "qualname": "Slider.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Slider.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Slider.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.on_before_show", "modulename": "dhxpyt.form", "qualname": "Slider.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.on_blur", "modulename": "dhxpyt.form", "qualname": "Slider.on_blur", "kind": "function", "doc": "<p>Fires when the Slider control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.on_change", "modulename": "dhxpyt.form", "qualname": "Slider.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.on_focus", "modulename": "dhxpyt.form", "qualname": "Slider.on_focus", "kind": "function", "doc": "<p>Fires when the Slider control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Slider.on_keydown", "modulename": "dhxpyt.form", "qualname": "Slider.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and the Slider control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer", "modulename": "dhxpyt.form", "qualname": "Spacer", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Spacer.__init__", "modulename": "dhxpyt.form", "qualname": "Spacer.__init__", "kind": "function", "doc": "<p>Initializes the Spacer control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">spacer_config</span><span class=\"o\">.</span><span class=\"n\">SpacerConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Spacer.spacer", "modulename": "dhxpyt.form", "qualname": "Spacer.spacer", "kind": "variable", "doc": "<p>Spacer API Functions</p>\n"}, {"fullname": "dhxpyt.form.Spacer.destructor", "modulename": "dhxpyt.form", "qualname": "Spacer.destructor", "kind": "function", "doc": "<p>Removes the Spacer instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.get_properties", "modulename": "dhxpyt.form", "qualname": "Spacer.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.hide", "modulename": "dhxpyt.form", "qualname": "Spacer.hide", "kind": "function", "doc": "<p>Hides the Spacer control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.is_visible", "modulename": "dhxpyt.form", "qualname": "Spacer.is_visible", "kind": "function", "doc": "<p>Checks whether the Spacer control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.set_properties", "modulename": "dhxpyt.form", "qualname": "Spacer.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.show", "modulename": "dhxpyt.form", "qualname": "Spacer.show", "kind": "function", "doc": "<p>Shows the Spacer control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Spacer.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Spacer.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Spacer.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.on_after_show", "modulename": "dhxpyt.form", "qualname": "Spacer.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Spacer.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Spacer.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Spacer.on_before_show", "modulename": "dhxpyt.form", "qualname": "Spacer.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text", "modulename": "dhxpyt.form", "qualname": "Text", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Text.__init__", "modulename": "dhxpyt.form", "qualname": "Text.__init__", "kind": "function", "doc": "<p>Initializes the Text control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">text_config</span><span class=\"o\">.</span><span class=\"n\">TextConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Text.text", "modulename": "dhxpyt.form", "qualname": "Text.text", "kind": "variable", "doc": "<p>Text API Functions</p>\n"}, {"fullname": "dhxpyt.form.Text.clear", "modulename": "dhxpyt.form", "qualname": "Text.clear", "kind": "function", "doc": "<p>Clears the value of the Text control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.destructor", "modulename": "dhxpyt.form", "qualname": "Text.destructor", "kind": "function", "doc": "<p>Removes the Text instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.disable", "modulename": "dhxpyt.form", "qualname": "Text.disable", "kind": "function", "doc": "<p>Disables the Text control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.enable", "modulename": "dhxpyt.form", "qualname": "Text.enable", "kind": "function", "doc": "<p>Enables the Text control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.get_properties", "modulename": "dhxpyt.form", "qualname": "Text.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.get_value", "modulename": "dhxpyt.form", "qualname": "Text.get_value", "kind": "function", "doc": "<p>Returns the current value of the Text control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.hide", "modulename": "dhxpyt.form", "qualname": "Text.hide", "kind": "function", "doc": "<p>Hides the Text control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.is_disabled", "modulename": "dhxpyt.form", "qualname": "Text.is_disabled", "kind": "function", "doc": "<p>Checks whether the Text control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.is_visible", "modulename": "dhxpyt.form", "qualname": "Text.is_visible", "kind": "function", "doc": "<p>Checks whether the Text control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.set_properties", "modulename": "dhxpyt.form", "qualname": "Text.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.set_value", "modulename": "dhxpyt.form", "qualname": "Text.set_value", "kind": "function", "doc": "<p>Sets the value for the Text control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.show", "modulename": "dhxpyt.form", "qualname": "Text.show", "kind": "function", "doc": "<p>Shows the Text control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Text.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Text.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Text.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.on_after_show", "modulename": "dhxpyt.form", "qualname": "Text.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.on_after_validate", "modulename": "dhxpyt.form", "qualname": "Text.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Text.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Text.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.on_before_show", "modulename": "dhxpyt.form", "qualname": "Text.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.on_before_validate", "modulename": "dhxpyt.form", "qualname": "Text.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Text.on_change", "modulename": "dhxpyt.form", "qualname": "Text.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea", "modulename": "dhxpyt.form", "qualname": "Textarea", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Textarea.__init__", "modulename": "dhxpyt.form", "qualname": "Textarea.__init__", "kind": "function", "doc": "<p>Initializes the Textarea control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">textarea_config</span><span class=\"o\">.</span><span class=\"n\">TextareaConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Textarea.textarea", "modulename": "dhxpyt.form", "qualname": "Textarea.textarea", "kind": "variable", "doc": "<p>Textarea API Functions</p>\n"}, {"fullname": "dhxpyt.form.Textarea.blur", "modulename": "dhxpyt.form", "qualname": "Textarea.blur", "kind": "function", "doc": "<p>Removes focus from the Textarea control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.clear", "modulename": "dhxpyt.form", "qualname": "Textarea.clear", "kind": "function", "doc": "<p>Clears the value of the Textarea control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.clear_validate", "modulename": "dhxpyt.form", "qualname": "Textarea.clear_validate", "kind": "function", "doc": "<p>Clears validation of the Textarea control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.destructor", "modulename": "dhxpyt.form", "qualname": "Textarea.destructor", "kind": "function", "doc": "<p>Removes the Textarea instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.disable", "modulename": "dhxpyt.form", "qualname": "Textarea.disable", "kind": "function", "doc": "<p>Disables the Textarea control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.enable", "modulename": "dhxpyt.form", "qualname": "Textarea.enable", "kind": "function", "doc": "<p>Enables the Textarea control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.focus", "modulename": "dhxpyt.form", "qualname": "Textarea.focus", "kind": "function", "doc": "<p>Sets focus to the Textarea control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.get_properties", "modulename": "dhxpyt.form", "qualname": "Textarea.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.get_value", "modulename": "dhxpyt.form", "qualname": "Textarea.get_value", "kind": "function", "doc": "<p>Returns the current value of the Textarea control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.hide", "modulename": "dhxpyt.form", "qualname": "Textarea.hide", "kind": "function", "doc": "<p>Hides the Textarea control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.is_disabled", "modulename": "dhxpyt.form", "qualname": "Textarea.is_disabled", "kind": "function", "doc": "<p>Checks whether the Textarea control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.is_visible", "modulename": "dhxpyt.form", "qualname": "Textarea.is_visible", "kind": "function", "doc": "<p>Checks whether the Textarea control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.set_properties", "modulename": "dhxpyt.form", "qualname": "Textarea.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.set_value", "modulename": "dhxpyt.form", "qualname": "Textarea.set_value", "kind": "function", "doc": "<p>Sets the value for the Textarea control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.show", "modulename": "dhxpyt.form", "qualname": "Textarea.show", "kind": "function", "doc": "<p>Shows the Textarea control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.validate", "modulename": "dhxpyt.form", "qualname": "Textarea.validate", "kind": "function", "doc": "<p>Validates the Textarea control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">validate_value</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Textarea.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Textarea.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Textarea.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_after_show", "modulename": "dhxpyt.form", "qualname": "Textarea.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_after_validate", "modulename": "dhxpyt.form", "qualname": "Textarea.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_before_change", "modulename": "dhxpyt.form", "qualname": "Textarea.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Textarea.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Textarea.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_before_show", "modulename": "dhxpyt.form", "qualname": "Textarea.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_before_validate", "modulename": "dhxpyt.form", "qualname": "Textarea.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_blur", "modulename": "dhxpyt.form", "qualname": "Textarea.on_blur", "kind": "function", "doc": "<p>Fires when the Textarea control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_change", "modulename": "dhxpyt.form", "qualname": "Textarea.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_focus", "modulename": "dhxpyt.form", "qualname": "Textarea.on_focus", "kind": "function", "doc": "<p>Fires when the Textarea control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_input", "modulename": "dhxpyt.form", "qualname": "Textarea.on_input", "kind": "function", "doc": "<p>Fires when a user types some text in the textarea.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Textarea.on_keydown", "modulename": "dhxpyt.form", "qualname": "Textarea.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and the Textarea control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker", "modulename": "dhxpyt.form", "qualname": "Timepicker", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Timepicker.__init__", "modulename": "dhxpyt.form", "qualname": "Timepicker.__init__", "kind": "function", "doc": "<p>Initializes the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">timepicker_config</span><span class=\"o\">.</span><span class=\"n\">TimepickerConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Timepicker.timepicker", "modulename": "dhxpyt.form", "qualname": "Timepicker.timepicker", "kind": "variable", "doc": "<p>TimePicker API Functions</p>\n"}, {"fullname": "dhxpyt.form.Timepicker.blur", "modulename": "dhxpyt.form", "qualname": "Timepicker.blur", "kind": "function", "doc": "<p>Removes focus from the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.clear", "modulename": "dhxpyt.form", "qualname": "Timepicker.clear", "kind": "function", "doc": "<p>Clears the value of the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.clear_validate", "modulename": "dhxpyt.form", "qualname": "Timepicker.clear_validate", "kind": "function", "doc": "<p>Clears validation of the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.destructor", "modulename": "dhxpyt.form", "qualname": "Timepicker.destructor", "kind": "function", "doc": "<p>Removes the TimePicker instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.disable", "modulename": "dhxpyt.form", "qualname": "Timepicker.disable", "kind": "function", "doc": "<p>Disables the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.enable", "modulename": "dhxpyt.form", "qualname": "Timepicker.enable", "kind": "function", "doc": "<p>Enables the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.focus", "modulename": "dhxpyt.form", "qualname": "Timepicker.focus", "kind": "function", "doc": "<p>Sets focus to the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.get_properties", "modulename": "dhxpyt.form", "qualname": "Timepicker.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.get_value", "modulename": "dhxpyt.form", "qualname": "Timepicker.get_value", "kind": "function", "doc": "<p>Returns the current value of the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">as_object</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.get_widget", "modulename": "dhxpyt.form", "qualname": "Timepicker.get_widget", "kind": "function", "doc": "<p>Returns the DHTMLX TimePicker widget attached to the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.hide", "modulename": "dhxpyt.form", "qualname": "Timepicker.hide", "kind": "function", "doc": "<p>Hides the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.is_disabled", "modulename": "dhxpyt.form", "qualname": "Timepicker.is_disabled", "kind": "function", "doc": "<p>Checks whether the TimePicker control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.is_visible", "modulename": "dhxpyt.form", "qualname": "Timepicker.is_visible", "kind": "function", "doc": "<p>Checks whether the TimePicker control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.set_properties", "modulename": "dhxpyt.form", "qualname": "Timepicker.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.set_value", "modulename": "dhxpyt.form", "qualname": "Timepicker.set_value", "kind": "function", "doc": "<p>Sets the value for the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.show", "modulename": "dhxpyt.form", "qualname": "Timepicker.show", "kind": "function", "doc": "<p>Shows the TimePicker control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.validate", "modulename": "dhxpyt.form", "qualname": "Timepicker.validate", "kind": "function", "doc": "<p>Validates the TimePicker control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">silent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">validate_value</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Timepicker.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_after_show", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_after_validate", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_after_validate", "kind": "function", "doc": "<p>Fires after the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_before_change", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_before_show", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_before_validate", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_before_validate", "kind": "function", "doc": "<p>Fires before the control value is validated.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_blur", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_blur", "kind": "function", "doc": "<p>Fires when the TimePicker control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_change", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_focus", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_focus", "kind": "function", "doc": "<p>Fires when the TimePicker control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_input", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_input", "kind": "function", "doc": "<p>Fires when a user enters the value of a control in the input manually.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Timepicker.on_keydown", "modulename": "dhxpyt.form", "qualname": "Timepicker.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and the TimePicker control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle", "modulename": "dhxpyt.form", "qualname": "Toggle", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.Toggle.__init__", "modulename": "dhxpyt.form", "qualname": "Toggle.__init__", "kind": "function", "doc": "<p>Initializes the Toggle control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">toggle_config</span><span class=\"o\">.</span><span class=\"n\">ToggleConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.Toggle.toggle", "modulename": "dhxpyt.form", "qualname": "Toggle.toggle", "kind": "variable", "doc": "<p>Toggle API Functions</p>\n"}, {"fullname": "dhxpyt.form.Toggle.blur", "modulename": "dhxpyt.form", "qualname": "Toggle.blur", "kind": "function", "doc": "<p>Removes focus from the Toggle control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.destructor", "modulename": "dhxpyt.form", "qualname": "Toggle.destructor", "kind": "function", "doc": "<p>Removes the Toggle instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.disable", "modulename": "dhxpyt.form", "qualname": "Toggle.disable", "kind": "function", "doc": "<p>Disables the Toggle control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.enable", "modulename": "dhxpyt.form", "qualname": "Toggle.enable", "kind": "function", "doc": "<p>Enables the Toggle control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.focus", "modulename": "dhxpyt.form", "qualname": "Toggle.focus", "kind": "function", "doc": "<p>Sets focus to the Toggle control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.get_properties", "modulename": "dhxpyt.form", "qualname": "Toggle.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.get_value", "modulename": "dhxpyt.form", "qualname": "Toggle.get_value", "kind": "function", "doc": "<p>Returns the current value/state of the Toggle control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.hide", "modulename": "dhxpyt.form", "qualname": "Toggle.hide", "kind": "function", "doc": "<p>Hides the Toggle control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.is_disabled", "modulename": "dhxpyt.form", "qualname": "Toggle.is_disabled", "kind": "function", "doc": "<p>Checks whether the Toggle control is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.is_selected", "modulename": "dhxpyt.form", "qualname": "Toggle.is_selected", "kind": "function", "doc": "<p>Checks whether the selected state is enabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.is_visible", "modulename": "dhxpyt.form", "qualname": "Toggle.is_visible", "kind": "function", "doc": "<p>Checks whether the Toggle control is visible on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.set_properties", "modulename": "dhxpyt.form", "qualname": "Toggle.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes of the control dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.set_value", "modulename": "dhxpyt.form", "qualname": "Toggle.set_value", "kind": "function", "doc": "<p>Sets the state for the Toggle control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">selected</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.show", "modulename": "dhxpyt.form", "qualname": "Toggle.show", "kind": "function", "doc": "<p>Shows the Toggle control on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.add_event_handler", "modulename": "dhxpyt.form", "qualname": "Toggle.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "Toggle.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.on_after_hide", "modulename": "dhxpyt.form", "qualname": "Toggle.on_after_hide", "kind": "function", "doc": "<p>Fires after the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.on_after_show", "modulename": "dhxpyt.form", "qualname": "Toggle.on_after_show", "kind": "function", "doc": "<p>Fires after the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.on_before_change", "modulename": "dhxpyt.form", "qualname": "Toggle.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "Toggle.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.on_before_hide", "modulename": "dhxpyt.form", "qualname": "Toggle.on_before_hide", "kind": "function", "doc": "<p>Fires before the control is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.on_before_show", "modulename": "dhxpyt.form", "qualname": "Toggle.on_before_show", "kind": "function", "doc": "<p>Fires before the control is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.on_blur", "modulename": "dhxpyt.form", "qualname": "Toggle.on_blur", "kind": "function", "doc": "<p>Fires when the Toggle control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.on_change", "modulename": "dhxpyt.form", "qualname": "Toggle.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.on_focus", "modulename": "dhxpyt.form", "qualname": "Toggle.on_focus", "kind": "function", "doc": "<p>Fires when the Toggle control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.Toggle.on_keydown", "modulename": "dhxpyt.form", "qualname": "Toggle.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and the Toggle control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup", "modulename": "dhxpyt.form", "qualname": "ToggleGroup", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroup.__init__", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.__init__", "kind": "function", "doc": "<p>Initializes the ToggleGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">togglegroup_config</span><span class=\"o\">.</span><span class=\"n\">ToggleGroupConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.ToggleGroup.togglegroup", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.togglegroup", "kind": "variable", "doc": "<p>ToggleGroup API Functions</p>\n"}, {"fullname": "dhxpyt.form.ToggleGroup.blur", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.blur", "kind": "function", "doc": "<p>Removes focus from the ToggleGroup control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.destructor", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.destructor", "kind": "function", "doc": "<p>Removes the ToggleGroup instance and releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.disable", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.disable", "kind": "function", "doc": "<p>Disables the ToggleGroup control or a specific element.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.enable", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.enable", "kind": "function", "doc": "<p>Enables the ToggleGroup control or a specific element.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.focus", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.focus", "kind": "function", "doc": "<p>Sets focus to an option of the ToggleGroup control by its id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.get_properties", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.get_properties", "kind": "function", "doc": "<p>Returns the configuration attributes of the control or its toggle.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.get_value", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.get_value", "kind": "function", "doc": "<p>Returns the current value/state of a toggle(s).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.hide", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.hide", "kind": "function", "doc": "<p>Hides either an option of ToggleGroup or the whole ToggleGroup.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.is_disabled", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.is_disabled", "kind": "function", "doc": "<p>Checks whether the ToggleGroup control or a specific element is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.is_selected", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.is_selected", "kind": "function", "doc": "<p>Checks whether a toggle of the ToggleGroup control is selected.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.is_visible", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.is_visible", "kind": "function", "doc": "<p>Checks whether the ToggleGroup control or a specific element is visible.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.set_properties", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.set_properties", "kind": "function", "doc": "<p>Allows changing configuration attributes dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.set_value", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.set_value", "kind": "function", "doc": "<p>Defines the state of the option's elements.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.show", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.show", "kind": "function", "doc": "<p>Shows either an option of ToggleGroup or the whole ToggleGroup.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.add_event_handler", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.on_after_change_properties", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.on_after_change_properties", "kind": "function", "doc": "<p>Fires after configuration attributes have been changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.on_after_hide", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.on_after_hide", "kind": "function", "doc": "<p>Fires after the control or its toggle is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.on_after_show", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.on_after_show", "kind": "function", "doc": "<p>Fires after the control or its toggle is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.on_before_change", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.on_before_change", "kind": "function", "doc": "<p>Fires before changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.on_before_change_properties", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.on_before_change_properties", "kind": "function", "doc": "<p>Fires before configuration attributes are changed dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.on_before_hide", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.on_before_hide", "kind": "function", "doc": "<p>Fires before the control or its toggle is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.on_before_show", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.on_before_show", "kind": "function", "doc": "<p>Fires before the control or its toggle is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.on_blur", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.on_blur", "kind": "function", "doc": "<p>Fires when the ToggleGroup control has lost focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.on_change", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.on_change", "kind": "function", "doc": "<p>Fires on changing the value of the control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.on_focus", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.on_focus", "kind": "function", "doc": "<p>Fires when the ToggleGroup control has received focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroup.on_keydown", "modulename": "dhxpyt.form", "qualname": "ToggleGroup.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and a toggle is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.AvatarConfig", "modulename": "dhxpyt.form", "qualname": "AvatarConfig", "kind": "class", "doc": "<p>Configuration class for the Avatar control.</p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.__init__", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>target</strong>:  (Optional) The URL to the server-side script for file upload.</li>\n<li><strong>value</strong>:  (Optional) The initial value of the Avatar control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>readOnly</strong>:  (Optional) Sets the readonly mode for the control.</li>\n<li><strong>removeIcon</strong>:  (Optional) Enables the possibility to clear the control via UI.</li>\n<li><strong>circle</strong>:  (Optional) Sets the mode of displaying the control with rounded corners.</li>\n<li><strong>icon</strong>:  (Optional) The CSS class of an icon when there is no image uploaded.</li>\n<li><strong>placeholder</strong>:  (Optional) The text visible when there is no image uploaded.</li>\n<li><strong>preview</strong>:  (Optional) Specifies the absolute path to the preview image.</li>\n<li><strong>alt</strong>:  (Optional) Sets the 'alt' attribute of the <img> tag.</li>\n<li><strong>size</strong>:  (Optional) The size of the control.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelWidth</strong>:  (Optional) Sets the label width of the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Defines the position of the label.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>required</strong>:  (Optional) Defines whether the control is required.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message shown after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message shown after validation error.</li>\n<li><strong>validation</strong>:  (Optional) The validation function.</li>\n<li><strong>accept</strong>:  (Optional) Specifies the type/extension of the selected file.</li>\n<li><strong>fieldName</strong>:  (Optional) Sets the file field name in the form data.</li>\n<li><strong>autosend</strong>:  (Optional) Enables/disables automatic sending of an added file.</li>\n<li><strong>params</strong>:  (Optional) Extra parameters for sending an XMLHttpRequest.</li>\n<li><strong>headerParams</strong>:  (Optional) Additional parameters for Request Headers.</li>\n<li><strong>updateFromResponse</strong>:  (Optional) Updates file attributes with server response data.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">readOnly</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">removeIcon</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">circle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preview</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">alt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;medium&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">validation</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">accept</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;image/*&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">fieldName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;file&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">autosend</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headerParams</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">updateFromResponse</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "dhxpyt.form.AvatarConfig.type", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.name", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.id", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.target", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.target", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.value", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.hidden", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.disabled", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.readOnly", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.readOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.removeIcon", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.removeIcon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.circle", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.circle", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.icon", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.placeholder", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.preview", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.preview", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.alt", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.alt", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.size", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.size", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.css", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.width", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.height", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.padding", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.label", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.required", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.validation", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.validation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.accept", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.accept", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.fieldName", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.fieldName", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.autosend", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.autosend", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.params", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.params", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.headerParams", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.headerParams", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.updateFromResponse", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.updateFromResponse", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.AvatarConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "AvatarConfig.to_dict", "kind": "function", "doc": "<p>Converts the AvatarConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ButtonConfig", "modulename": "dhxpyt.form", "qualname": "ButtonConfig", "kind": "class", "doc": "<p>Configuration class for the Button control.</p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.__init__", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>text</strong>:  (Optional) The text label of the button.</li>\n<li><strong>submit</strong>:  (Optional) Enables the button to send form data to a server.</li>\n<li><strong>url</strong>:  (Optional) The URL the post request with form data will be sent to.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>circle</strong>:  (Optional) Makes the corners of the button round.</li>\n<li><strong>color</strong>:  (Optional) Defines the color scheme of the button.</li>\n<li><strong>full</strong>:  (Optional) Extends the button to the full width of the form.</li>\n<li><strong>icon</strong>:  (Optional) The CSS class of an icon of the button.</li>\n<li><strong>loading</strong>:  (Optional) Adds a spinner into the button.</li>\n<li><strong>size</strong>:  (Optional) Defines the size of the button.</li>\n<li><strong>view</strong>:  (Optional) Defines the look of the button.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">submit</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">circle</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;primary&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">loading</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;medium&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">view</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;flat&#39;</span></span>)</span>"}, {"fullname": "dhxpyt.form.ButtonConfig.type", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.name", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.id", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.text", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.text", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.submit", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.submit", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.url", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.url", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.css", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.disabled", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.height", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.hidden", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.padding", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.width", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.circle", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.circle", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.color", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.color", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.full", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.full", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.icon", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.loading", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.loading", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.size", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.size", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.view", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.view", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ButtonConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "ButtonConfig.to_dict", "kind": "function", "doc": "<p>Converts the ButtonConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxConfig", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig", "kind": "class", "doc": "<p>Configuration class for the Checkbox control.</p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.__init__", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>value</strong>:  (Optional) The value of the checkbox.</li>\n<li><strong>checked</strong>:  (Optional) Defines the initial state of the checkbox.</li>\n<li><strong>text</strong>:  (Optional) The text value of the control displayed next to it.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>required</strong>:  (Optional) Whether the control is required.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Defines the position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Sets the width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message shown after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message shown after validation error.</li>\n<li><strong>validation</strong>:  (Optional) The validation function.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">checked</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">validation</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.CheckboxConfig.type", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.name", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.id", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.value", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.checked", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.checked", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.text", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.text", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.css", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.disabled", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.height", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.hidden", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.padding", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.required", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.width", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.label", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.validation", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.validation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "CheckboxConfig.to_dict", "kind": "function", "doc": "<p>Converts the CheckboxConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig", "kind": "class", "doc": "<p>Configuration class for the CheckboxGroup control.</p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.__init__", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>options</strong>:  (Required) An object with options of the CheckboxGroup.</li>\n<li><strong>value</strong>:  (Optional) An object with the initial value of the CheckboxGroup.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>required</strong>:  (Optional) Whether the control is required.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Defines the position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Sets the width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message shown after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message shown after validation error.</li>\n<li><strong>validation</strong>:  (Optional) The validation function.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">validation</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.type", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.name", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.id", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.options", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.options", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.value", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.css", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.disabled", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.height", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.hidden", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.padding", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.required", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.width", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.label", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.validation", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.validation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.CheckboxGroupConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "CheckboxGroupConfig.to_dict", "kind": "function", "doc": "<p>Converts the CheckboxGroupConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ColorpickerConfig", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig", "kind": "class", "doc": "<p>Configuration class for the ColorPicker control.</p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.__init__", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>value</strong>:  (Optional) The value of the colorpicker.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>editable</strong>:  (Optional) Allows user to enter the value manually.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>required</strong>:  (Optional) Whether the control is required.</li>\n<li><strong>validation</strong>:  (Optional) The validation function.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>customColors</strong>:  (Optional) Shows a section with custom colors.</li>\n<li><strong>grayShades</strong>:  (Optional) Displays gray shades in the palette.</li>\n<li><strong>icon</strong>:  (Optional) The CSS class name of an icon.</li>\n<li><strong>mode</strong>:  (Optional) The mode of the control (\"palette\", \"picker\").</li>\n<li><strong>palette</strong>:  (Optional) Arrays of colors to be shown in the colorpicker.</li>\n<li><strong>paletteOnly</strong>:  (Optional) Shows only the palette mode.</li>\n<li><strong>pickerOnly</strong>:  (Optional) Shows only the picker mode.</li>\n<li><strong>placeholder</strong>:  (Optional) A tip for the input.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message after validation error.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">editable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validation</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">customColors</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">grayShades</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;palette&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">palette</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">paletteOnly</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pickerOnly</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.ColorpickerConfig.type", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.name", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.id", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.value", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.css", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.disabled", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.editable", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.editable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.height", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.hidden", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.padding", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.required", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.validation", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.validation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.width", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.customColors", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.customColors", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.grayShades", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.grayShades", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.icon", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.mode", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.palette", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.palette", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.paletteOnly", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.paletteOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.pickerOnly", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.pickerOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.placeholder", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.label", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ColorpickerConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "ColorpickerConfig.to_dict", "kind": "function", "doc": "<p>Converts the ColorPickerConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ComboConfig", "modulename": "dhxpyt.form", "qualname": "ComboConfig", "kind": "class", "doc": "<p>Configuration class for the Combo control.</p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.__init__", "modulename": "dhxpyt.form", "qualname": "ComboConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>data</strong>:  (Optional) An array of Combo options.</li>\n<li><strong>value</strong>:  (Optional) The id(s) of options to be selected.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>required</strong>:  (Optional) Whether the control is required.</li>\n<li><strong>validation</strong>:  (Optional) A callback function for validation.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>filter</strong>:  (Optional) Custom function for filtering options.</li>\n<li><strong>eventHandlers</strong>:  (Optional) Event handlers for custom templates.</li>\n<li><strong>itemHeight</strong>:  (Optional) Height of a cell in the options list.</li>\n<li><strong>itemsCount</strong>:  (Optional) Shows the total number of selected options.</li>\n<li><strong>listHeight</strong>:  (Optional) Height of the list of options.</li>\n<li><strong>multiselection</strong>:  (Optional) Enables multiple selection.</li>\n<li><strong>newOptions</strong>:  (Optional) Allows users to add new options.</li>\n<li><strong>placeholder</strong>:  (Optional) Placeholder in the input field.</li>\n<li><strong>readOnly</strong>:  (Optional) Makes Combo readonly.</li>\n<li><strong>selectAllButton</strong>:  (Optional) Shows the Select All button.</li>\n<li><strong>template</strong>:  (Optional) Template for displaying options.</li>\n<li><strong>virtual</strong>:  (Optional) Enables dynamic loading of data.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message after validation error.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validation</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"nb\">filter</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">eventHandlers</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">itemHeight</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">itemsCount</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">listHeight</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">224</span>,</span><span class=\"param\">\t<span class=\"n\">multiselection</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">newOptions</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">readOnly</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">selectAllButton</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">template</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">virtual</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.ComboConfig.type", "modulename": "dhxpyt.form", "qualname": "ComboConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.name", "modulename": "dhxpyt.form", "qualname": "ComboConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.id", "modulename": "dhxpyt.form", "qualname": "ComboConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.data", "modulename": "dhxpyt.form", "qualname": "ComboConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.value", "modulename": "dhxpyt.form", "qualname": "ComboConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.css", "modulename": "dhxpyt.form", "qualname": "ComboConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.disabled", "modulename": "dhxpyt.form", "qualname": "ComboConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.height", "modulename": "dhxpyt.form", "qualname": "ComboConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.hidden", "modulename": "dhxpyt.form", "qualname": "ComboConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.padding", "modulename": "dhxpyt.form", "qualname": "ComboConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.required", "modulename": "dhxpyt.form", "qualname": "ComboConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.validation", "modulename": "dhxpyt.form", "qualname": "ComboConfig.validation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.width", "modulename": "dhxpyt.form", "qualname": "ComboConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.filter", "modulename": "dhxpyt.form", "qualname": "ComboConfig.filter", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.eventHandlers", "modulename": "dhxpyt.form", "qualname": "ComboConfig.eventHandlers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.itemHeight", "modulename": "dhxpyt.form", "qualname": "ComboConfig.itemHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.itemsCount", "modulename": "dhxpyt.form", "qualname": "ComboConfig.itemsCount", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.listHeight", "modulename": "dhxpyt.form", "qualname": "ComboConfig.listHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.multiselection", "modulename": "dhxpyt.form", "qualname": "ComboConfig.multiselection", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.newOptions", "modulename": "dhxpyt.form", "qualname": "ComboConfig.newOptions", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.placeholder", "modulename": "dhxpyt.form", "qualname": "ComboConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.readOnly", "modulename": "dhxpyt.form", "qualname": "ComboConfig.readOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.selectAllButton", "modulename": "dhxpyt.form", "qualname": "ComboConfig.selectAllButton", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.template", "modulename": "dhxpyt.form", "qualname": "ComboConfig.template", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.virtual", "modulename": "dhxpyt.form", "qualname": "ComboConfig.virtual", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "ComboConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.label", "modulename": "dhxpyt.form", "qualname": "ComboConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "ComboConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "ComboConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "ComboConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "ComboConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "ComboConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "ComboConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ComboConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "ComboConfig.to_dict", "kind": "function", "doc": "<p>Converts the ComboConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ContainerConfig", "modulename": "dhxpyt.form", "qualname": "ContainerConfig", "kind": "class", "doc": "<p>Configuration class for the Container control.</p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.__init__", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>html</strong>:  (Optional) The HTML content of the control.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.ContainerConfig.type", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.name", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.id", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.html", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.css", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.disabled", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.height", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.hidden", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.padding", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.width", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.label", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ContainerConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "ContainerConfig.to_dict", "kind": "function", "doc": "<p>Converts the ContainerConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.DatepickerConfig", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig", "kind": "class", "doc": "<p>Configuration class for the DatePicker control.</p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.__init__", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.__init__", "kind": "function", "doc": "<p>Initializes the DatePickerConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>value</strong>:  (Optional) The value of the datepicker.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>editable</strong>:  (Optional) Allows user to enter the value manually.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>required</strong>:  (Optional) Whether the control is required.</li>\n<li><strong>validation</strong>:  (Optional) The validation function.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>date</strong>:  (Optional) The date that will be opened when the calendar is created.</li>\n<li><strong>dateFormat</strong>:  (Optional) The format of dates in the calendar.</li>\n<li><strong>disabledDates</strong>:  (Optional) Disables some date intervals.</li>\n<li><strong>icon</strong>:  (Optional) The CSS class name of an icon.</li>\n<li><strong>mark</strong>:  (Optional) Adds a CSS class to specific days.</li>\n<li><strong>mode</strong>:  (Optional) Specifies the mode of displaying a calendar.</li>\n<li><strong>placeholder</strong>:  (Optional) A tip for the input.</li>\n<li><strong>thisMonthOnly</strong>:  (Optional) Hides dates of the previous/next months.</li>\n<li><strong>timeFormat: (Optional) Time format of a timepicker</strong>:  12 or 24.</li>\n<li><strong>timePicker</strong>:  (Optional) Adds a timepicker into the calendar.</li>\n<li><strong>valueFormat: (Optional) Format of the returned value</strong>:  \"string\" or \"Date\".</li>\n<li><strong>weekNumbers</strong>:  (Optional) Shows the numbers of weeks.</li>\n<li><strong>weekStart</strong>:  (Optional) Starting day of the week.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message after validation error.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">editable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validation</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">date</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dateFormat</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"si\">%d</span><span class=\"s1\">/%m/%y&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">disabledDates</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mark</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;calendar&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">thisMonthOnly</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">timeFormat</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">24</span>,</span><span class=\"param\">\t<span class=\"n\">timePicker</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">valueFormat</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;string&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">weekNumbers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">weekStart</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;sunday&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.DatepickerConfig.type", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.name", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.id", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.value", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.css", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.disabled", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.editable", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.editable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.height", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.hidden", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.padding", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.required", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.validation", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.validation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.width", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.date", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.date", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.dateFormat", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.dateFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.disabledDates", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.disabledDates", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.icon", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.mark", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.mark", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.mode", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.placeholder", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.thisMonthOnly", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.thisMonthOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.timeFormat", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.timeFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.timePicker", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.timePicker", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.valueFormat", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.valueFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.weekNumbers", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.weekNumbers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.weekStart", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.weekStart", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.label", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.DatepickerConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "DatepickerConfig.to_dict", "kind": "function", "doc": "<p>Converts the DatePickerConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.FieldsetConfig", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig", "kind": "class", "doc": "<p>Configuration class for the Fieldset control.</p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.__init__", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.__init__", "kind": "function", "doc": "<p>Initializes the FieldsetConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding for the content inside the control.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelAlignment</strong>:  (Optional) Position of the label.</li>\n<li><strong>rows</strong>:  (Optional) Arranges controls vertically.</li>\n<li><strong>cols</strong>:  (Optional) Arranges controls horizontally.</li>\n<li><strong>align</strong>:  (Optional) Alignment of controls inside the control.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelAlignment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;left&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">rows</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cols</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">align</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;start&#39;</span></span>)</span>"}, {"fullname": "dhxpyt.form.FieldsetConfig.type", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.name", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.id", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.hidden", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.disabled", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.css", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.width", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.height", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.padding", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.label", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.labelAlignment", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.labelAlignment", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.rows", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.rows", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.cols", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.cols", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.align", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.align", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.FieldsetConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "FieldsetConfig.to_dict", "kind": "function", "doc": "<p>Converts the FieldsetConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.InputConfig", "modulename": "dhxpyt.form", "qualname": "InputConfig", "kind": "class", "doc": "<p>Configuration class for the Input control.</p>\n"}, {"fullname": "dhxpyt.form.InputConfig.__init__", "modulename": "dhxpyt.form", "qualname": "InputConfig.__init__", "kind": "function", "doc": "<p>Initializes the InputConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>value</strong>:  (Optional) The initial value of the input.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>required</strong>:  (Optional) Whether the control is required.</li>\n<li><strong>validation</strong>:  (Optional) The validation rule or function.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>autocomplete</strong>:  (Optional) Enables autocomplete functionality.</li>\n<li><strong>icon</strong>:  (Optional) The CSS class name of an icon.</li>\n<li><strong>inputType: (Optional) Sets the type of input</strong>:  \"text\", \"password\", \"number\".</li>\n<li><strong>max</strong>:  (Optional) The maximal value allowed in the input (for \"number\" type).</li>\n<li><strong>maxlength</strong>:  (Optional) The maximum number of characters allowed.</li>\n<li><strong>min</strong>:  (Optional) The minimal value allowed in the input (for \"number\" type).</li>\n<li><strong>minlength</strong>:  (Optional) The minimum number of characters allowed.</li>\n<li><strong>placeholder</strong>:  (Optional) A tip for the input.</li>\n<li><strong>readOnly</strong>:  (Optional) Whether the input is readonly.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message after validation error.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">autocomplete</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">inputType</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;input&#39;</span>,</span><span class=\"param\">\t<span class=\"nb\">max</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">maxlength</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">min</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minlength</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">readOnly</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.InputConfig.name", "modulename": "dhxpyt.form", "qualname": "InputConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.id", "modulename": "dhxpyt.form", "qualname": "InputConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.value", "modulename": "dhxpyt.form", "qualname": "InputConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.css", "modulename": "dhxpyt.form", "qualname": "InputConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.disabled", "modulename": "dhxpyt.form", "qualname": "InputConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.height", "modulename": "dhxpyt.form", "qualname": "InputConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.hidden", "modulename": "dhxpyt.form", "qualname": "InputConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.padding", "modulename": "dhxpyt.form", "qualname": "InputConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.required", "modulename": "dhxpyt.form", "qualname": "InputConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.validation", "modulename": "dhxpyt.form", "qualname": "InputConfig.validation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.width", "modulename": "dhxpyt.form", "qualname": "InputConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.autocomplete", "modulename": "dhxpyt.form", "qualname": "InputConfig.autocomplete", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.icon", "modulename": "dhxpyt.form", "qualname": "InputConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.inputType", "modulename": "dhxpyt.form", "qualname": "InputConfig.inputType", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.max", "modulename": "dhxpyt.form", "qualname": "InputConfig.max", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.maxlength", "modulename": "dhxpyt.form", "qualname": "InputConfig.maxlength", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.min", "modulename": "dhxpyt.form", "qualname": "InputConfig.min", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.minlength", "modulename": "dhxpyt.form", "qualname": "InputConfig.minlength", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.placeholder", "modulename": "dhxpyt.form", "qualname": "InputConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.readOnly", "modulename": "dhxpyt.form", "qualname": "InputConfig.readOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "InputConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.label", "modulename": "dhxpyt.form", "qualname": "InputConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "InputConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "InputConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "InputConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "InputConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "InputConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "InputConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.InputConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "InputConfig.to_dict", "kind": "function", "doc": "<p>Converts the InputConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.RadioGroupConfig", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig", "kind": "class", "doc": "<p>Configuration class for the RadioGroup control.</p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.__init__", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.__init__", "kind": "function", "doc": "<p>Initializes the RadioGroupConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>options</strong>:  (Required) An object with options of a RadioGroup.</li>\n<li><strong>value</strong>:  (Optional) The initial value of the RadioGroup.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>required</strong>:  (Optional) Whether the control is required.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message after validation error.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">radiogroup_config</span><span class=\"o\">.</span><span class=\"n\">RadioButtonOption</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.RadioGroupConfig.type", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.name", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.id", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.options", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.options", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.value", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.css", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.disabled", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.height", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.hidden", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.padding", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.required", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.width", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.label", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.RadioGroupConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "RadioGroupConfig.to_dict", "kind": "function", "doc": "<p>Converts the RadioGroupConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SelectConfig", "modulename": "dhxpyt.form", "qualname": "SelectConfig", "kind": "class", "doc": "<p>Configuration class for the Select control.</p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.__init__", "modulename": "dhxpyt.form", "qualname": "SelectConfig.__init__", "kind": "function", "doc": "<p>Initializes the SelectConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>options</strong>:  (Required) An array of Select options.</li>\n<li><strong>value</strong>:  (Optional) The initial value of the select control.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>required</strong>:  (Optional) Whether the control is required.</li>\n<li><strong>validation</strong>:  (Optional) The validation function.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>icon</strong>:  (Optional) The CSS class name of an icon.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message after validation error.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">select_config</span><span class=\"o\">.</span><span class=\"n\">SelectOption</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validation</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.SelectConfig.type", "modulename": "dhxpyt.form", "qualname": "SelectConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.name", "modulename": "dhxpyt.form", "qualname": "SelectConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.id", "modulename": "dhxpyt.form", "qualname": "SelectConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.options", "modulename": "dhxpyt.form", "qualname": "SelectConfig.options", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.value", "modulename": "dhxpyt.form", "qualname": "SelectConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.css", "modulename": "dhxpyt.form", "qualname": "SelectConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.disabled", "modulename": "dhxpyt.form", "qualname": "SelectConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.height", "modulename": "dhxpyt.form", "qualname": "SelectConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.hidden", "modulename": "dhxpyt.form", "qualname": "SelectConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.padding", "modulename": "dhxpyt.form", "qualname": "SelectConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.required", "modulename": "dhxpyt.form", "qualname": "SelectConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.validation", "modulename": "dhxpyt.form", "qualname": "SelectConfig.validation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.width", "modulename": "dhxpyt.form", "qualname": "SelectConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.icon", "modulename": "dhxpyt.form", "qualname": "SelectConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "SelectConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.label", "modulename": "dhxpyt.form", "qualname": "SelectConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "SelectConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "SelectConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "SelectConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "SelectConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "SelectConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "SelectConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SelectConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "SelectConfig.to_dict", "kind": "function", "doc": "<p>Converts the SelectConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SimpleVaultConfig", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig", "kind": "class", "doc": "<p>Configuration class for the SimpleVault control.</p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.__init__", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.__init__", "kind": "function", "doc": "<p>Initializes the SimpleVaultConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>target</strong>:  (Optional) URL to the server-side script that will process file upload.</li>\n<li><strong>value</strong>:  (Optional) The default list of loaded files.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>fieldName</strong>:  (Optional) Name of the file field in the form data.</li>\n<li><strong>params</strong>:  (Optional) Extra parameters for sending XMLHttpRequest.</li>\n<li><strong>headerParams</strong>:  (Optional) Additional parameters for Request Headers.</li>\n<li><strong>singleRequest</strong>:  (Optional) Whether files are sent in one request.</li>\n<li><strong>updateFromResponse</strong>:  (Optional) Updates file attributes from server response.</li>\n<li><strong>autosend</strong>:  (Optional) Enables automatic sending of an added file.</li>\n<li><strong>accept</strong>:  (Optional) Specifies the type/extension displayed in the dialog.</li>\n<li><strong>validation</strong>:  (Optional) The validation function.</li>\n<li><strong>required</strong>:  (Optional) Whether the control is required.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message after validation error.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">fieldName</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;file&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">headerParams</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">singleRequest</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">updateFromResponse</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">autosend</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">accept</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">validation</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.type", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.name", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.id", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.target", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.target", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.value", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.css", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.height", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.width", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.padding", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.hidden", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.disabled", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.fieldName", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.fieldName", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.params", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.params", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.headerParams", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.headerParams", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.singleRequest", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.singleRequest", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.updateFromResponse", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.updateFromResponse", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.autosend", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.autosend", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.accept", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.accept", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.validation", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.validation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.required", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.label", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SimpleVaultConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "SimpleVaultConfig.to_dict", "kind": "function", "doc": "<p>Converts the SimpleVaultConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SliderConfig", "modulename": "dhxpyt.form", "qualname": "SliderConfig", "kind": "class", "doc": "<p>Configuration class for the Slider control.</p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.__init__", "modulename": "dhxpyt.form", "qualname": "SliderConfig.__init__", "kind": "function", "doc": "<p>Initializes the SliderConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>value</strong>:  (Optional) The initial value(s) of the slider.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>inverse</strong>:  (Optional) Enables the inverse slider mode.</li>\n<li><strong>majorTick</strong>:  (Optional) Interval of rendering numeric values on the scale.</li>\n<li><strong>max</strong>:  (Optional) The maximal value of the slider.</li>\n<li><strong>min</strong>:  (Optional) The minimal value of the slider.</li>\n<li><strong>mode</strong>:  (Optional) Direction of the Slider scale.</li>\n<li><strong>range</strong>:  (Optional) Enables selecting a range of values.</li>\n<li><strong>step</strong>:  (Optional) The step the slider thumb will be moved with.</li>\n<li><strong>tick</strong>:  (Optional) Interval of steps for rendering the scale.</li>\n<li><strong>tickTemplate</strong>:  (Optional) Template for rendering values on the scale.</li>\n<li><strong>tooltip</strong>:  (Optional) Enables prompt messages with ticks values.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">inverse</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">majorTick</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">max</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"nb\">min</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;horizontal&#39;</span>,</span><span class=\"param\">\t<span class=\"nb\">range</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">tick</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tickTemplate</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.SliderConfig.type", "modulename": "dhxpyt.form", "qualname": "SliderConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.name", "modulename": "dhxpyt.form", "qualname": "SliderConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.id", "modulename": "dhxpyt.form", "qualname": "SliderConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.value", "modulename": "dhxpyt.form", "qualname": "SliderConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.css", "modulename": "dhxpyt.form", "qualname": "SliderConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.disabled", "modulename": "dhxpyt.form", "qualname": "SliderConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.height", "modulename": "dhxpyt.form", "qualname": "SliderConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.hidden", "modulename": "dhxpyt.form", "qualname": "SliderConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.padding", "modulename": "dhxpyt.form", "qualname": "SliderConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.width", "modulename": "dhxpyt.form", "qualname": "SliderConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.inverse", "modulename": "dhxpyt.form", "qualname": "SliderConfig.inverse", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.majorTick", "modulename": "dhxpyt.form", "qualname": "SliderConfig.majorTick", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.max", "modulename": "dhxpyt.form", "qualname": "SliderConfig.max", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.min", "modulename": "dhxpyt.form", "qualname": "SliderConfig.min", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.mode", "modulename": "dhxpyt.form", "qualname": "SliderConfig.mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.range", "modulename": "dhxpyt.form", "qualname": "SliderConfig.range", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.step", "modulename": "dhxpyt.form", "qualname": "SliderConfig.step", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.tick", "modulename": "dhxpyt.form", "qualname": "SliderConfig.tick", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.tickTemplate", "modulename": "dhxpyt.form", "qualname": "SliderConfig.tickTemplate", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.tooltip", "modulename": "dhxpyt.form", "qualname": "SliderConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "SliderConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.label", "modulename": "dhxpyt.form", "qualname": "SliderConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "SliderConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "SliderConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "SliderConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SliderConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "SliderConfig.to_dict", "kind": "function", "doc": "<p>Converts the SliderConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.SpacerConfig", "modulename": "dhxpyt.form", "qualname": "SpacerConfig", "kind": "class", "doc": "<p>Configuration class for the Spacer control.</p>\n"}, {"fullname": "dhxpyt.form.SpacerConfig.__init__", "modulename": "dhxpyt.form", "qualname": "SpacerConfig.__init__", "kind": "function", "doc": "<p>Initializes the SpacerConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span></span>)</span>"}, {"fullname": "dhxpyt.form.SpacerConfig.type", "modulename": "dhxpyt.form", "qualname": "SpacerConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SpacerConfig.name", "modulename": "dhxpyt.form", "qualname": "SpacerConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SpacerConfig.id", "modulename": "dhxpyt.form", "qualname": "SpacerConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SpacerConfig.css", "modulename": "dhxpyt.form", "qualname": "SpacerConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SpacerConfig.height", "modulename": "dhxpyt.form", "qualname": "SpacerConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SpacerConfig.hidden", "modulename": "dhxpyt.form", "qualname": "SpacerConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SpacerConfig.padding", "modulename": "dhxpyt.form", "qualname": "SpacerConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SpacerConfig.width", "modulename": "dhxpyt.form", "qualname": "SpacerConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.SpacerConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "SpacerConfig.to_dict", "kind": "function", "doc": "<p>Converts the SpacerConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.TextConfig", "modulename": "dhxpyt.form", "qualname": "TextConfig", "kind": "class", "doc": "<p>Configuration class for the Text control.</p>\n"}, {"fullname": "dhxpyt.form.TextConfig.__init__", "modulename": "dhxpyt.form", "qualname": "TextConfig.__init__", "kind": "function", "doc": "<p>Initializes the TextConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>value</strong>:  (Optional) The value of the text control.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>inputType: (Optional) Type of input</strong>:  \"text\", \"password\", \"number\".</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message after validation error.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">inputType</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;text&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.TextConfig.type", "modulename": "dhxpyt.form", "qualname": "TextConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.name", "modulename": "dhxpyt.form", "qualname": "TextConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.id", "modulename": "dhxpyt.form", "qualname": "TextConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.value", "modulename": "dhxpyt.form", "qualname": "TextConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.css", "modulename": "dhxpyt.form", "qualname": "TextConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.disabled", "modulename": "dhxpyt.form", "qualname": "TextConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.height", "modulename": "dhxpyt.form", "qualname": "TextConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.hidden", "modulename": "dhxpyt.form", "qualname": "TextConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.padding", "modulename": "dhxpyt.form", "qualname": "TextConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.width", "modulename": "dhxpyt.form", "qualname": "TextConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.inputType", "modulename": "dhxpyt.form", "qualname": "TextConfig.inputType", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "TextConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.label", "modulename": "dhxpyt.form", "qualname": "TextConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "TextConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "TextConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "TextConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "TextConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "TextConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "TextConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "TextConfig.to_dict", "kind": "function", "doc": "<p>Converts the TextConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.TextareaConfig", "modulename": "dhxpyt.form", "qualname": "TextareaConfig", "kind": "class", "doc": "<p>Configuration class for the Textarea control.</p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.__init__", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.__init__", "kind": "function", "doc": "<p>Initializes the TextareaConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>value</strong>:  (Optional) The initial value of the textarea.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>required</strong>:  (Optional) Whether the control is required.</li>\n<li><strong>validation</strong>:  (Optional) The validation rule or function.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>maxlength</strong>:  (Optional) Maximum number of characters allowed.</li>\n<li><strong>minlength</strong>:  (Optional) Minimum number of characters required.</li>\n<li><strong>placeholder</strong>:  (Optional) A tip for the textarea.</li>\n<li><strong>readOnly</strong>:  (Optional) Whether the textarea is readonly.</li>\n<li><strong>resizable</strong>:  (Optional) Adds a resizer icon into a textarea.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message after validation error.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">maxlength</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minlength</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">readOnly</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">resizable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.TextareaConfig.type", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.name", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.id", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.value", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.css", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.disabled", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.height", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.hidden", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.padding", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.required", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.validation", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.validation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.width", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.maxlength", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.maxlength", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.minlength", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.minlength", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.placeholder", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.readOnly", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.readOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.resizable", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.resizable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.label", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TextareaConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "TextareaConfig.to_dict", "kind": "function", "doc": "<p>Converts the TextareaConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.TimepickerConfig", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig", "kind": "class", "doc": "<p>Configuration class for the TimePicker control.</p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.__init__", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.__init__", "kind": "function", "doc": "<p>Initializes the TimePickerConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>value</strong>:  (Optional) The initial value of the TimePicker control.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>editable</strong>:  (Optional) Allows user to enter the value manually.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the control is hidden.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n<li><strong>required</strong>:  (Optional) Whether the control is required.</li>\n<li><strong>validation</strong>:  (Optional) The validation function.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>controls</strong>:  (Optional) Whether the timepicker has Close and Save buttons.</li>\n<li><strong>icon</strong>:  (Optional) The CSS class name of an icon.</li>\n<li><strong>placeholder</strong>:  (Optional) A tip for the input.</li>\n<li><strong>timeFormat: (Optional) Clock format</strong>:  12 or 24.</li>\n<li><strong>valueFormat: (Optional) Format of the value in events</strong>:  \"string\", \"timeObject\".</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Makes the label invisible.</li>\n<li><strong>label</strong>:  (Optional) Specifies a label for the control.</li>\n<li><strong>labelPosition</strong>:  (Optional) Position of the label.</li>\n<li><strong>labelWidth</strong>:  (Optional) Width of the label.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds a help message to the control.</li>\n<li><strong>preMessage</strong>:  (Optional) Instructions for interacting with the control.</li>\n<li><strong>successMessage</strong>:  (Optional) Message after successful validation.</li>\n<li><strong>errorMessage</strong>:  (Optional) Message after validation error.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">editable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;5px&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">validation</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">controls</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeFormat</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">24</span>,</span><span class=\"param\">\t<span class=\"n\">valueFormat</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;string&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">successMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">errorMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.TimepickerConfig.type", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.name", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.id", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.value", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.css", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.disabled", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.editable", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.editable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.height", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.hidden", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.padding", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.required", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.required", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.validation", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.validation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.width", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.controls", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.controls", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.icon", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.placeholder", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.timeFormat", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.timeFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.valueFormat", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.valueFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.hiddenLabel", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.label", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.labelPosition", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.labelWidth", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.helpMessage", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.preMessage", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.preMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.successMessage", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.successMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.errorMessage", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.errorMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.TimepickerConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "TimepickerConfig.to_dict", "kind": "function", "doc": "<p>Converts the TimePickerConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleConfig", "modulename": "dhxpyt.form", "qualname": "ToggleConfig", "kind": "class", "doc": "<p>Configuration class for the Toggle control.</p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.__init__", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.__init__", "kind": "function", "doc": "<p>Initializes the ToggleConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the toggle is hidden.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>selected</strong>:  (Optional) Initial state of the toggle as selected.</li>\n<li><strong>full</strong>:  (Optional) Whether the toggle extends to the specified width.</li>\n<li><strong>text</strong>:  (Optional) Text inside the toggle.</li>\n<li><strong>offText</strong>:  (Optional) Text when the toggle is unselected.</li>\n<li><strong>icon</strong>:  (Optional) CSS class of the icon in the toggle.</li>\n<li><strong>offIcon</strong>:  (Optional) CSS class of the icon when unselected.</li>\n<li><strong>value</strong>:  (Optional) Value in the selected state.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">selected</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">offText</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">offIcon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.ToggleConfig.type", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.name", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.id", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.hidden", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.disabled", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.selected", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.selected", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.full", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.full", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.text", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.text", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.offText", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.offText", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.icon", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.offIcon", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.offIcon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.value", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.css", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.height", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.width", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.padding", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "ToggleConfig.to_dict", "kind": "function", "doc": "<p>Converts the ToggleConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.form.ToggleGroupConfig", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig", "kind": "class", "doc": "<p>Configuration class for the ToggleGroup control.</p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.__init__", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.__init__", "kind": "function", "doc": "<p>Initializes the ToggleGroupConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  (Optional) The name of the control.</li>\n<li><strong>id</strong>:  (Optional) The id of the control.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the ToggleGroup is hidden.</li>\n<li><strong>disabled</strong>:  (Optional) Whether the control is disabled.</li>\n<li><strong>full</strong>:  (Optional) Whether the ToggleGroup extends to the specified width.</li>\n<li><strong>gap</strong>:  (Optional) Offset between elements.</li>\n<li><strong>multiselection</strong>:  (Optional) Allows multiple selection.</li>\n<li><strong>options</strong>:  (Required) List of ToggleGroup elements.</li>\n<li><strong>value</strong>:  (Optional) Defines the state of elements on initialization.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the control.</li>\n<li><strong>height</strong>:  (Optional) The height of the control.</li>\n<li><strong>width</strong>:  (Optional) The width of the control.</li>\n<li><strong>padding</strong>:  (Optional) Sets padding between the cell and border.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">gap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">multiselection</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">controls</span><span class=\"o\">.</span><span class=\"n\">togglegroup_config</span><span class=\"o\">.</span><span class=\"n\">ToggleOption</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;content&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.type", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.name", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.id", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.hidden", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.disabled", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.full", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.full", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.gap", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.gap", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.multiselection", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.multiselection", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.options", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.options", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.value", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.css", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.height", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.width", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.padding", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.form.ToggleGroupConfig.to_dict", "modulename": "dhxpyt.form", "qualname": "ToggleGroupConfig.to_dict", "kind": "function", "doc": "<p>Converts the ToggleGroupConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid", "modulename": "dhxpyt.grid", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.Grid", "modulename": "dhxpyt.grid", "qualname": "Grid", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.Grid.__init__", "modulename": "dhxpyt.grid", "qualname": "Grid.__init__", "kind": "function", "doc": "<p>Initializes the Grid widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  (Optional) The GridConfig object containing the grid configuration.</li>\n<li><strong>widget_parent</strong>:  (Optional) The ID of the HTML element where the grid will be attached.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">grid_config</span><span class=\"o\">.</span><span class=\"n\">GridConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.grid.Grid.grid", "modulename": "dhxpyt.grid", "qualname": "Grid.grid", "kind": "variable", "doc": "<p>Grid API Functions</p>\n"}, {"fullname": "dhxpyt.grid.Grid.add_cell_css", "modulename": "dhxpyt.grid", "qualname": "Grid.add_cell_css", "kind": "function", "doc": "<p>Adds a CSS class to a cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.add_row_css", "modulename": "dhxpyt.grid", "qualname": "Grid.add_row_css", "kind": "function", "doc": "<p>Adds a CSS class to a row.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.add_span", "modulename": "dhxpyt.grid", "qualname": "Grid.add_span", "kind": "function", "doc": "<p>Adds a span to the grid.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">span_obj</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.adjust_column_width", "modulename": "dhxpyt.grid", "qualname": "Grid.adjust_column_width", "kind": "function", "doc": "<p>Adjusts the width of a column.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">adjust</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.destructor", "modulename": "dhxpyt.grid", "qualname": "Grid.destructor", "kind": "function", "doc": "<p>Destroys the grid instance and releases resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.edit_cell", "modulename": "dhxpyt.grid", "qualname": "Grid.edit_cell", "kind": "function", "doc": "<p>Enables editing of a grid cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">editor_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.edit_end", "modulename": "dhxpyt.grid", "qualname": "Grid.edit_end", "kind": "function", "doc": "<p>Finishes editing in a cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">without_save</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.get_cell_rect", "modulename": "dhxpyt.grid", "qualname": "Grid.get_cell_rect", "kind": "function", "doc": "<p>Returns the parameters of a cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.get_column", "modulename": "dhxpyt.grid", "qualname": "Grid.get_column", "kind": "function", "doc": "<p>Returns an object with attributes of a column.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.get_header_filter", "modulename": "dhxpyt.grid", "qualname": "Grid.get_header_filter", "kind": "function", "doc": "<p>Returns an object with methods for the header filter of the specified column.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.get_scroll_state", "modulename": "dhxpyt.grid", "qualname": "Grid.get_scroll_state", "kind": "function", "doc": "<p>Returns the coordinates of the scroll position.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.get_sorting_state", "modulename": "dhxpyt.grid", "qualname": "Grid.get_sorting_state", "kind": "function", "doc": "<p>Returns the current state of sorting data in the grid.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.get_span", "modulename": "dhxpyt.grid", "qualname": "Grid.get_span", "kind": "function", "doc": "<p>Returns an object with spans.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.hide_column", "modulename": "dhxpyt.grid", "qualname": "Grid.hide_column", "kind": "function", "doc": "<p>Hides a column of the grid.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.hide_row", "modulename": "dhxpyt.grid", "qualname": "Grid.hide_row", "kind": "function", "doc": "<p>Hides a row of the grid.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.is_column_hidden", "modulename": "dhxpyt.grid", "qualname": "Grid.is_column_hidden", "kind": "function", "doc": "<p>Checks whether a column is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.is_row_hidden", "modulename": "dhxpyt.grid", "qualname": "Grid.is_row_hidden", "kind": "function", "doc": "<p>Checks whether a row is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.paint", "modulename": "dhxpyt.grid", "qualname": "Grid.paint", "kind": "function", "doc": "<p>Repaints the grid on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.remove_cell_css", "modulename": "dhxpyt.grid", "qualname": "Grid.remove_cell_css", "kind": "function", "doc": "<p>Removes a CSS class from a cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.remove_row_css", "modulename": "dhxpyt.grid", "qualname": "Grid.remove_row_css", "kind": "function", "doc": "<p>Removes a CSS class from a row.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.remove_span", "modulename": "dhxpyt.grid", "qualname": "Grid.remove_span", "kind": "function", "doc": "<p>Removes a span from the grid.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.scroll", "modulename": "dhxpyt.grid", "qualname": "Grid.scroll", "kind": "function", "doc": "<p>Scrolls the grid to the specified coordinates.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.scroll_to", "modulename": "dhxpyt.grid", "qualname": "Grid.scroll_to", "kind": "function", "doc": "<p>Scrolls the grid to a specified cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.set_columns", "modulename": "dhxpyt.grid", "qualname": "Grid.set_columns", "kind": "function", "doc": "<p>Sets configuration for grid columns.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">columns</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.show_column", "modulename": "dhxpyt.grid", "qualname": "Grid.show_column", "kind": "function", "doc": "<p>Shows a hidden column.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.show_row", "modulename": "dhxpyt.grid", "qualname": "Grid.show_row", "kind": "function", "doc": "<p>Shows a hidden row.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.add_event_handler", "modulename": "dhxpyt.grid", "qualname": "Grid.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_after_edit_end", "modulename": "dhxpyt.grid", "qualname": "Grid.on_after_edit_end", "kind": "function", "doc": "<p>Fires after editing of a cell is ended.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_cell_click", "modulename": "dhxpyt.grid", "qualname": "Grid.on_cell_click", "kind": "function", "doc": "<p>Fires when a cell is clicked.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_cell_dbl_click", "modulename": "dhxpyt.grid", "qualname": "Grid.on_cell_dbl_click", "kind": "function", "doc": "<p>Fires when a cell is double-clicked.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_cell_mouse_down", "modulename": "dhxpyt.grid", "qualname": "Grid.on_cell_mouse_down", "kind": "function", "doc": "<p>Fires before releasing the left mouse button when clicking on a grid cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_cell_mouse_over", "modulename": "dhxpyt.grid", "qualname": "Grid.on_cell_mouse_over", "kind": "function", "doc": "<p>Fires on moving the mouse pointer over a grid cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_cell_right_click", "modulename": "dhxpyt.grid", "qualname": "Grid.on_cell_right_click", "kind": "function", "doc": "<p>Fires on right click on a grid cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_before_row_drag", "modulename": "dhxpyt.grid", "qualname": "Grid.on_before_row_drag", "kind": "function", "doc": "<p>Fires before dragging a row starts.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_after_row_drag", "modulename": "dhxpyt.grid", "qualname": "Grid.on_after_row_drag", "kind": "function", "doc": "<p>Fires after dragging a row finishes.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_before_column_drag", "modulename": "dhxpyt.grid", "qualname": "Grid.on_before_column_drag", "kind": "function", "doc": "<p>Fires before dragging a column starts.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_after_column_drag", "modulename": "dhxpyt.grid", "qualname": "Grid.on_after_column_drag", "kind": "function", "doc": "<p>Fires after dragging a column finishes.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_row_drop", "modulename": "dhxpyt.grid", "qualname": "Grid.on_row_drop", "kind": "function", "doc": "<p>Fires when a row is dropped.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_column_drop", "modulename": "dhxpyt.grid", "qualname": "Grid.on_column_drop", "kind": "function", "doc": "<p>Fires when a column is dropped.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_drag_row_in", "modulename": "dhxpyt.grid", "qualname": "Grid.on_drag_row_in", "kind": "function", "doc": "<p>Fires when a row is dragged over a potential target.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_drag_row_out", "modulename": "dhxpyt.grid", "qualname": "Grid.on_drag_row_out", "kind": "function", "doc": "<p>Fires when a row is dragged out of a potential target.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_drag_column_in", "modulename": "dhxpyt.grid", "qualname": "Grid.on_drag_column_in", "kind": "function", "doc": "<p>Fires when a column is dragged over a potential target.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_drag_column_out", "modulename": "dhxpyt.grid", "qualname": "Grid.on_drag_column_out", "kind": "function", "doc": "<p>Fires when a column is dragged out of a potential target.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_drag_row_start", "modulename": "dhxpyt.grid", "qualname": "Grid.on_drag_row_start", "kind": "function", "doc": "<p>Fires when the dragging of a row starts.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.on_drag_column_start", "modulename": "dhxpyt.grid", "qualname": "Grid.on_drag_column_start", "kind": "function", "doc": "<p>Fires when the dragging of a column starts.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.select_cell", "modulename": "dhxpyt.grid", "qualname": "Grid.select_cell", "kind": "function", "doc": "<p>Sets selection to specified cells.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">row</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">column</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ctrl_up</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">shift_up</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.get_selected_cells", "modulename": "dhxpyt.grid", "qualname": "Grid.get_selected_cells", "kind": "function", "doc": "<p>Returns an array with config objects of selected cells.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.unselect_cell", "modulename": "dhxpyt.grid", "qualname": "Grid.unselect_cell", "kind": "function", "doc": "<p>Unselects previously selected cells.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">row_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">col_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.export_to_csv", "modulename": "dhxpyt.grid", "qualname": "Grid.export_to_csv", "kind": "function", "doc": "<p>Exports data from the grid into a CSV string or file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.export_to_pdf", "modulename": "dhxpyt.grid", "qualname": "Grid.export_to_pdf", "kind": "function", "doc": "<p>Exports data from the grid to a PDF file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.export_to_png", "modulename": "dhxpyt.grid", "qualname": "Grid.export_to_png", "kind": "function", "doc": "<p>Exports data from the grid to a PNG file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.Grid.export_to_xlsx", "modulename": "dhxpyt.grid", "qualname": "Grid.export_to_xlsx", "kind": "function", "doc": "<p>Exports data from the grid to an Excel file.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.GridConfig", "modulename": "dhxpyt.grid", "qualname": "GridConfig", "kind": "class", "doc": "<p>Configuration class for the Grid widget.</p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.__init__", "modulename": "dhxpyt.grid", "qualname": "GridConfig.__init__", "kind": "function", "doc": "<p>Initializes the GridConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>columns</strong>:  (Required) List of column configurations.</li>\n<li><strong>data</strong>:  (Optional) List of data objects.</li>\n<li><strong>adjust</strong>:  (Optional) Auto adjust columns.</li>\n<li><strong>autoEmptyRow</strong>:  (Optional) Adds an empty row after the last filled row.</li>\n<li><strong>autoHeight</strong>:  (Optional) Makes long text split into multiple lines.</li>\n<li><strong>autoWidth</strong>:  (Optional) Makes grid's columns fit the size of the grid.</li>\n<li><strong>bottomSplit</strong>:  (Optional) Number of frozen rows from the bottom.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to Grid.</li>\n<li><strong>dragCopy</strong>:  (Optional) Defines whether a row is copied during drag-n-drop.</li>\n<li><strong>dragItem</strong>:  (Optional) Enables reordering columns or rows by drag and drop.</li>\n<li><strong>dragMode</strong>:  (Optional) Enables drag-n-drop in Grid.</li>\n<li><strong>editable</strong>:  (Optional) Enables editing in Grid columns.</li>\n<li><strong>eventHandlers</strong>:  (Optional) Adds event handlers to HTML elements in the grid.</li>\n<li><strong>exportStyles</strong>:  (Optional) Defines the styles to be sent when exporting.</li>\n<li><strong>footerAutoHeight</strong>:  (Optional) Allows adjusting the footer height.</li>\n<li><strong>footerRowHeight</strong>:  (Optional) Sets the height of rows in the footer.</li>\n<li><strong>footerTooltip</strong>:  (Optional) Controls the footer tooltips.</li>\n<li><strong>headerAutoHeight</strong>:  (Optional) Allows adjusting the header height.</li>\n<li><strong>headerRowHeight</strong>:  (Optional) Sets the height of rows in the header.</li>\n<li><strong>headerTooltip</strong>:  (Optional) Controls the header tooltips.</li>\n<li><strong>height</strong>:  (Optional) Sets the height of the grid.</li>\n<li><strong>htmlEnable</strong>:  (Optional) Specifies the HTML content of Grid columns.</li>\n<li><strong>keyNavigation</strong>:  (Optional) Enables keyboard navigation in Grid.</li>\n<li><strong>leftSplit</strong>:  (Optional) Number of frozen columns from the left.</li>\n<li><strong>multiselection</strong>:  (Optional) Enables multi-row/multi-cell selection.</li>\n<li><strong>resizable</strong>:  (Optional) Defines whether columns can be resized.</li>\n<li><strong>rightSplit</strong>:  (Optional) Number of frozen columns from the right.</li>\n<li><strong>rowCss</strong>:  (Optional) Sets style for a row.</li>\n<li><strong>rowHeight</strong>:  (Optional) Defines the height of a row.</li>\n<li><strong>selection</strong>:  (Optional) Enables selection in the grid.</li>\n<li><strong>sortable</strong>:  (Optional) Defines whether sorting is enabled.</li>\n<li><strong>spans</strong>:  (Optional) Describes the configuration of spans.</li>\n<li><strong>tooltip</strong>:  (Optional) Enables/disables all the tooltips of a column.</li>\n<li><strong>topSplit</strong>:  (Optional) Number of frozen rows from the top.</li>\n<li><strong>width</strong>:  (Optional) Sets the width of the grid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">columns</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">grid_config</span><span class=\"o\">.</span><span class=\"n\">GridColumnConfig</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">adjust</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">autoEmptyRow</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">autoHeight</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">autoWidth</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">bottomSplit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">collapsed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dragCopy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dragItem</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dragMode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">editable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">eventHandlers</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exportStyles</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">footerAutoHeight</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">footerRowHeight</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">footerTooltip</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">headerAutoHeight</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">headerRowHeight</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">headerTooltip</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">htmlEnable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">keyNavigation</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">leftSplit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">multiselection</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">resizable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">rightSplit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rowCss</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rowHeight</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">selection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">sortable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">spans</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">topSplit</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.grid.GridConfig.columns", "modulename": "dhxpyt.grid", "qualname": "GridConfig.columns", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.data", "modulename": "dhxpyt.grid", "qualname": "GridConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.adjust", "modulename": "dhxpyt.grid", "qualname": "GridConfig.adjust", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.autoEmptyRow", "modulename": "dhxpyt.grid", "qualname": "GridConfig.autoEmptyRow", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.autoHeight", "modulename": "dhxpyt.grid", "qualname": "GridConfig.autoHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.autoWidth", "modulename": "dhxpyt.grid", "qualname": "GridConfig.autoWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.bottomSplit", "modulename": "dhxpyt.grid", "qualname": "GridConfig.bottomSplit", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.css", "modulename": "dhxpyt.grid", "qualname": "GridConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.collapsed", "modulename": "dhxpyt.grid", "qualname": "GridConfig.collapsed", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.type", "modulename": "dhxpyt.grid", "qualname": "GridConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.dragCopy", "modulename": "dhxpyt.grid", "qualname": "GridConfig.dragCopy", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.dragItem", "modulename": "dhxpyt.grid", "qualname": "GridConfig.dragItem", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.dragMode", "modulename": "dhxpyt.grid", "qualname": "GridConfig.dragMode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.editable", "modulename": "dhxpyt.grid", "qualname": "GridConfig.editable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.eventHandlers", "modulename": "dhxpyt.grid", "qualname": "GridConfig.eventHandlers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.exportStyles", "modulename": "dhxpyt.grid", "qualname": "GridConfig.exportStyles", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.footerAutoHeight", "modulename": "dhxpyt.grid", "qualname": "GridConfig.footerAutoHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.footerRowHeight", "modulename": "dhxpyt.grid", "qualname": "GridConfig.footerRowHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.footerTooltip", "modulename": "dhxpyt.grid", "qualname": "GridConfig.footerTooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.headerAutoHeight", "modulename": "dhxpyt.grid", "qualname": "GridConfig.headerAutoHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.headerRowHeight", "modulename": "dhxpyt.grid", "qualname": "GridConfig.headerRowHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.headerTooltip", "modulename": "dhxpyt.grid", "qualname": "GridConfig.headerTooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.height", "modulename": "dhxpyt.grid", "qualname": "GridConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.htmlEnable", "modulename": "dhxpyt.grid", "qualname": "GridConfig.htmlEnable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.keyNavigation", "modulename": "dhxpyt.grid", "qualname": "GridConfig.keyNavigation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.leftSplit", "modulename": "dhxpyt.grid", "qualname": "GridConfig.leftSplit", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.multiselection", "modulename": "dhxpyt.grid", "qualname": "GridConfig.multiselection", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.resizable", "modulename": "dhxpyt.grid", "qualname": "GridConfig.resizable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.rightSplit", "modulename": "dhxpyt.grid", "qualname": "GridConfig.rightSplit", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.rowCss", "modulename": "dhxpyt.grid", "qualname": "GridConfig.rowCss", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.rowHeight", "modulename": "dhxpyt.grid", "qualname": "GridConfig.rowHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.selection", "modulename": "dhxpyt.grid", "qualname": "GridConfig.selection", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.sortable", "modulename": "dhxpyt.grid", "qualname": "GridConfig.sortable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.spans", "modulename": "dhxpyt.grid", "qualname": "GridConfig.spans", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.tooltip", "modulename": "dhxpyt.grid", "qualname": "GridConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.topSplit", "modulename": "dhxpyt.grid", "qualname": "GridConfig.topSplit", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.width", "modulename": "dhxpyt.grid", "qualname": "GridConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridConfig.to_dict", "modulename": "dhxpyt.grid", "qualname": "GridConfig.to_dict", "kind": "function", "doc": "<p>Converts the GridConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.grid.GridColumnConfig", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig", "kind": "class", "doc": "<p>Configuration class for Grid columns.</p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.__init__", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.__init__", "kind": "function", "doc": "<p>Initializes the GridColumnConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  (Required) The unique ID of the column.</li>\n<li><strong>header</strong>:  (Required) The header configuration for the column.</li>\n<li><strong>type</strong>:  (Optional) The data type of the column (e.g., 'string', 'number', 'date').</li>\n<li><strong>width</strong>:  (Optional) The width of the column.</li>\n<li><strong>align</strong>:  (Optional) The alignment of the column content ('left', 'center', 'right').</li>\n<li><strong>adjust</strong>:  (Optional) Whether to auto-adjust the column width.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the column is hidden.</li>\n<li><strong>sortable</strong>:  (Optional) Whether the column is sortable.</li>\n<li><strong>resizable</strong>:  (Optional) Whether the column is resizable.</li>\n<li><strong>tooltip</strong>:  (Optional) Tooltip configuration for the column.</li>\n<li><strong>css</strong>:  (Optional) CSS classes for the column.</li>\n<li><strong>htmlEnable</strong>:  (Optional) Whether to render HTML content in cells.</li>\n<li><strong>editable</strong>:  (Optional) Whether the column cells are editable.</li>\n<li><strong>filter</strong>:  (Optional) Filter configuration for the column.</li>\n<li><strong>format</strong>:  (Optional) Format string for displaying data.</li>\n<li><strong>template</strong>:  (Optional) Template function for custom cell rendering.</li>\n<li><strong>editorType</strong>:  (Optional) Type of editor for editing cells (e.g., 'input', 'select').</li>\n<li><strong>options</strong>:  (Optional) Options for select editors.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">header</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">align</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">adjust</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">sortable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">resizable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">htmlEnable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">editable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"nb\">filter</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">format</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">template</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">editorType</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">gravity</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.grid.GridColumnConfig.id", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.header", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.header", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.type", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.width", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.align", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.align", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.adjust", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.adjust", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.hidden", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.sortable", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.sortable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.resizable", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.resizable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.tooltip", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.css", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.htmlEnable", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.htmlEnable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.editable", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.editable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.filter", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.filter", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.format", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.format", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.template", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.template", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.editorType", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.editorType", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.options", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.options", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.gravity", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.gravity", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.grid.GridColumnConfig.to_dict", "modulename": "dhxpyt.grid", "qualname": "GridColumnConfig.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban", "modulename": "dhxpyt.kanban", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.Kanban", "modulename": "dhxpyt.kanban", "qualname": "Kanban", "kind": "class", "doc": "<p>Wrapper class for the DHTMLX Kanban widget.</p>\n"}, {"fullname": "dhxpyt.kanban.Kanban.__init__", "modulename": "dhxpyt.kanban", "qualname": "Kanban.__init__", "kind": "function", "doc": "<p>Initializes the Kanban widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  KanbanConfig object containing the configuration.</li>\n<li><strong>container</strong>:  ID of the HTML element to attach the Kanban to.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">kanban</span><span class=\"o\">.</span><span class=\"n\">kanban_config</span><span class=\"o\">.</span><span class=\"n\">KanbanConfig</span>,</span><span class=\"param\">\t<span class=\"n\">container</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.kanban.Kanban.kanban", "modulename": "dhxpyt.kanban", "qualname": "Kanban.kanban", "kind": "variable", "doc": "<p>Kanban API Methods</p>\n"}, {"fullname": "dhxpyt.kanban.Kanban.add_card", "modulename": "dhxpyt.kanban", "qualname": "Kanban.add_card", "kind": "function", "doc": "<p>Adds a new card to the Kanban.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">card</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.remove_card", "modulename": "dhxpyt.kanban", "qualname": "Kanban.remove_card", "kind": "function", "doc": "<p>Removes a card by its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">card_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.update_card", "modulename": "dhxpyt.kanban", "qualname": "Kanban.update_card", "kind": "function", "doc": "<p>Updates a card's properties.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">card_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">updates</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.add_column", "modulename": "dhxpyt.kanban", "qualname": "Kanban.add_column", "kind": "function", "doc": "<p>Adds a new column to the Kanban.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">column</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.set_theme", "modulename": "dhxpyt.kanban", "qualname": "Kanban.set_theme", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">theme</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.remove_column", "modulename": "dhxpyt.kanban", "qualname": "Kanban.remove_column", "kind": "function", "doc": "<p>Removes a column by its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">column_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.get_cards", "modulename": "dhxpyt.kanban", "qualname": "Kanban.get_cards", "kind": "function", "doc": "<p>Returns all cards in the Kanban.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.get_columns", "modulename": "dhxpyt.kanban", "qualname": "Kanban.get_columns", "kind": "function", "doc": "<p>Returns all columns in the Kanban.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.select_card", "modulename": "dhxpyt.kanban", "qualname": "Kanban.select_card", "kind": "function", "doc": "<p>Selects a card by its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">card_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.unselect_card", "modulename": "dhxpyt.kanban", "qualname": "Kanban.unselect_card", "kind": "function", "doc": "<p>Unselects a card by its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">card_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.export_to_json", "modulename": "dhxpyt.kanban", "qualname": "Kanban.export_to_json", "kind": "function", "doc": "<p>Exports Kanban data to JSON format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.add_event_handler", "modulename": "dhxpyt.kanban", "qualname": "Kanban.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.on_card_click", "modulename": "dhxpyt.kanban", "qualname": "Kanban.on_card_click", "kind": "function", "doc": "<p>Fires when a card is clicked.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.on_column_click", "modulename": "dhxpyt.kanban", "qualname": "Kanban.on_column_click", "kind": "function", "doc": "<p>Fires when a column header is clicked.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.on_card_drag", "modulename": "dhxpyt.kanban", "qualname": "Kanban.on_card_drag", "kind": "function", "doc": "<p>Fires during a card drag event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.on_card_drop", "modulename": "dhxpyt.kanban", "qualname": "Kanban.on_card_drop", "kind": "function", "doc": "<p>Fires when a card is dropped.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.Kanban.on_editor_change", "modulename": "dhxpyt.kanban", "qualname": "Kanban.on_editor_change", "kind": "function", "doc": "<p>Fires when editor data is changed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.kanban.KanbanConfig", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig", "kind": "class", "doc": "<p>Configuration class for the Kanban widget.</p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.__init__", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.__init__", "kind": "function", "doc": "<p>Initializes the KanbanConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>columns</strong>:  List of column configurations.</li>\n<li><strong>cards</strong>:  List of card configurations.</li>\n<li><strong>dragMode</strong>:  Enables drag-and-drop functionality.</li>\n<li><strong>editable</strong>:  Allows editing of card text.</li>\n<li><strong>multiselection</strong>:  Enables multi-card selection.</li>\n<li><strong>autosize</strong>:  Adjusts the Kanban board to fit its container.</li>\n<li><strong>toolbar</strong>:  Toolbar configuration for the Kanban.</li>\n<li><strong>cardShape</strong>:  Configuration for the shape and properties of cards.</li>\n<li><strong>editorShape</strong>:  Configuration for the Kanban editor.</li>\n<li><strong>rows</strong>:  List of row configurations.</li>\n<li><strong>links</strong>:  List of links between cards.</li>\n<li><strong>rowKey</strong>:  Key used for row-grouping of cards.</li>\n<li><strong>currentUser</strong>:  ID of the current user interacting with the Kanban.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">columns</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">cards</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dragMode</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">editable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">multiselection</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">autosize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">toolbar</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cardShape</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">editorShape</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rows</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">links</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rowKey</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">currentUser</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.kanban.KanbanConfig.columns", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.columns", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.cards", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.cards", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.dragMode", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.dragMode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.editable", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.editable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.multiselection", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.multiselection", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.autosize", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.autosize", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.toolbar", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.toolbar", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.cardShape", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.cardShape", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.editorShape", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.editorShape", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.rows", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.rows", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.links", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.links", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.rowKey", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.rowKey", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.currentUser", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.currentUser", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.kanban.KanbanConfig.to_dict", "modulename": "dhxpyt.kanban", "qualname": "KanbanConfig.to_dict", "kind": "function", "doc": "<p>Converts the KanbanConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout", "modulename": "dhxpyt.layout", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.Layout", "modulename": "dhxpyt.layout", "qualname": "Layout", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.Layout.__init__", "modulename": "dhxpyt.layout", "qualname": "Layout.__init__", "kind": "function", "doc": "<p>Called when you call MyNewClass()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "dhxpyt.layout.Layout.layout_config", "modulename": "dhxpyt.layout", "qualname": "Layout.layout_config", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "dhxpyt.layout.Layout.parent", "modulename": "dhxpyt.layout", "qualname": "Layout.parent", "kind": "variable", "doc": "<p>Initializes the layout instance.</p>\n"}, {"fullname": "dhxpyt.layout.Layout.initialized", "modulename": "dhxpyt.layout", "qualname": "Layout.initialized", "kind": "variable", "doc": "<p>Placeholder Widgets Adders</p>\n"}, {"fullname": "dhxpyt.layout.Layout.load_ui", "modulename": "dhxpyt.layout", "qualname": "Layout.load_ui", "kind": "function", "doc": "<p>Subclass this to build your UI</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_grid", "modulename": "dhxpyt.layout", "qualname": "Layout.add_grid", "kind": "function", "doc": "<p>Adds a Grid widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mainwindow&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">grid_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">grid_config</span><span class=\"o\">.</span><span class=\"n\">GridConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">Grid</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.wait_for_element", "modulename": "dhxpyt.layout", "qualname": "Layout.wait_for_element", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">selector</span>, </span><span class=\"param\"><span class=\"n\">callback</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_kanban", "modulename": "dhxpyt.layout", "qualname": "Layout.add_kanban", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mainwindow&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">kanban_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">kanban</span><span class=\"o\">.</span><span class=\"n\">kanban_config</span><span class=\"o\">.</span><span class=\"n\">KanbanConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">kanban_callback</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">callable</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.create_kanban", "modulename": "dhxpyt.layout", "qualname": "Layout.create_kanban", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_layout", "modulename": "dhxpyt.layout", "qualname": "Layout.add_layout", "kind": "function", "doc": "<p>Adds a Layout into a Layout cell</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mainwindow&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">layout_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">layout</span><span class=\"o\">.</span><span class=\"n\">layout_config</span><span class=\"o\">.</span><span class=\"n\">LayoutConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">TLayout</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_menu", "modulename": "dhxpyt.layout", "qualname": "Layout.add_menu", "kind": "function", "doc": "<p>Adds a Layout into a Layout cell</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mainwindow_header&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">menu_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">menu_config</span><span class=\"o\">.</span><span class=\"n\">MenuConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">Menu</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_toolbar", "modulename": "dhxpyt.layout", "qualname": "Layout.add_toolbar", "kind": "function", "doc": "<p>Adds a Toolbar widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mainwindow&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">toolbar_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">toolbar</span><span class=\"o\">.</span><span class=\"n\">toolbar_config</span><span class=\"o\">.</span><span class=\"n\">ToolbarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">toolbar</span><span class=\"o\">.</span><span class=\"n\">toolbar</span><span class=\"o\">.</span><span class=\"n\">Toolbar</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_sidebar", "modulename": "dhxpyt.layout", "qualname": "Layout.add_sidebar", "kind": "function", "doc": "<p>Adds a Sidebar widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">sidebar_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">sidebar_config</span><span class=\"o\">.</span><span class=\"n\">SidebarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">Sidebar</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_form", "modulename": "dhxpyt.layout", "qualname": "Layout.add_form", "kind": "function", "doc": "<p>Adds a Form widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">form_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">form_config</span><span class=\"o\">.</span><span class=\"n\">FormConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">Form</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_listbox", "modulename": "dhxpyt.layout", "qualname": "Layout.add_listbox", "kind": "function", "doc": "<p>Adds a Listbox widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">listbox_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">listbox_config</span><span class=\"o\">.</span><span class=\"n\">ListboxConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_calendar", "modulename": "dhxpyt.layout", "qualname": "Layout.add_calendar", "kind": "function", "doc": "<p>Adds a Calendar widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">calendar_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">calendar</span><span class=\"o\">.</span><span class=\"n\">calendar_config</span><span class=\"o\">.</span><span class=\"n\">CalendarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_chart", "modulename": "dhxpyt.layout", "qualname": "Layout.add_chart", "kind": "function", "doc": "<p>Adds a Chart widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">chart_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">chart</span><span class=\"o\">.</span><span class=\"n\">chart_config</span><span class=\"o\">.</span><span class=\"n\">ChartConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_pagination", "modulename": "dhxpyt.layout", "qualname": "Layout.add_pagination", "kind": "function", "doc": "<p>Adds a Pagination widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">pagination_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">pagination</span><span class=\"o\">.</span><span class=\"n\">pagination_config</span><span class=\"o\">.</span><span class=\"n\">PaginationConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_cardflow", "modulename": "dhxpyt.layout", "qualname": "Layout.add_cardflow", "kind": "function", "doc": "<p>Adds a CardFlow widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">cardflow_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">cardflow</span><span class=\"o\">.</span><span class=\"n\">cardflow_config</span><span class=\"o\">.</span><span class=\"n\">CardFlowConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_ribbon", "modulename": "dhxpyt.layout", "qualname": "Layout.add_ribbon", "kind": "function", "doc": "<p>Adds a Ribbon widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ribbon_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">ribbon</span><span class=\"o\">.</span><span class=\"n\">ribbon_config</span><span class=\"o\">.</span><span class=\"n\">RibbonConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_tabbar", "modulename": "dhxpyt.layout", "qualname": "Layout.add_tabbar", "kind": "function", "doc": "<p>Adds a Tabbar widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tabbar_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">tabbar</span><span class=\"o\">.</span><span class=\"n\">tabbar_config</span><span class=\"o\">.</span><span class=\"n\">TabbarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_timepicker", "modulename": "dhxpyt.layout", "qualname": "Layout.add_timepicker", "kind": "function", "doc": "<p>Adds a Timepicker widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">timepicker_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">timepicker</span><span class=\"o\">.</span><span class=\"n\">timepicker_config</span><span class=\"o\">.</span><span class=\"n\">TimepickerConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_tree", "modulename": "dhxpyt.layout", "qualname": "Layout.add_tree", "kind": "function", "doc": "<p>Adds a Tree widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tree_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">tree_config</span><span class=\"o\">.</span><span class=\"n\">TreeConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.destructor", "modulename": "dhxpyt.layout", "qualname": "Layout.destructor", "kind": "function", "doc": "<p>Destroys the layout instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.for_each", "modulename": "dhxpyt.layout", "qualname": "Layout.for_each", "kind": "function", "doc": "<p>Iterates over layout cells, applying the callback function to each.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">parent_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.get_cell", "modulename": "dhxpyt.layout", "qualname": "Layout.get_cell", "kind": "function", "doc": "<p>Retrieves a specific layout cell by its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.progress_hide", "modulename": "dhxpyt.layout", "qualname": "Layout.progress_hide", "kind": "function", "doc": "<p>Hides the loading progress bar in the layout.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.progress_show", "modulename": "dhxpyt.layout", "qualname": "Layout.progress_show", "kind": "function", "doc": "<p>Displays the loading progress bar in the layout.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.remove_cell", "modulename": "dhxpyt.layout", "qualname": "Layout.remove_cell", "kind": "function", "doc": "<p>Removes a specific layout cell by ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.resize", "modulename": "dhxpyt.layout", "qualname": "Layout.resize", "kind": "function", "doc": "<p>Manually triggers a resize on a cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.add_event_handler", "modulename": "dhxpyt.layout", "qualname": "Layout.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.after_add", "modulename": "dhxpyt.layout", "qualname": "Layout.after_add", "kind": "function", "doc": "<p>Fires after a cell is added.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.after_collapse", "modulename": "dhxpyt.layout", "qualname": "Layout.after_collapse", "kind": "function", "doc": "<p>Fires after a cell is collapsed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.after_expand", "modulename": "dhxpyt.layout", "qualname": "Layout.after_expand", "kind": "function", "doc": "<p>Fires after a cell is expanded.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.after_hide", "modulename": "dhxpyt.layout", "qualname": "Layout.after_hide", "kind": "function", "doc": "<p>Fires after a cell is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.after_remove", "modulename": "dhxpyt.layout", "qualname": "Layout.after_remove", "kind": "function", "doc": "<p>Fires after a cell is removed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.after_resize_end", "modulename": "dhxpyt.layout", "qualname": "Layout.after_resize_end", "kind": "function", "doc": "<p>Fires after a cell resize ends.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.after_show", "modulename": "dhxpyt.layout", "qualname": "Layout.after_show", "kind": "function", "doc": "<p>Fires after a cell is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.before_add", "modulename": "dhxpyt.layout", "qualname": "Layout.before_add", "kind": "function", "doc": "<p>Fires before adding a cell, returns false to prevent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.before_collapse", "modulename": "dhxpyt.layout", "qualname": "Layout.before_collapse", "kind": "function", "doc": "<p>Fires before collapsing a cell, returns false to prevent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.before_expand", "modulename": "dhxpyt.layout", "qualname": "Layout.before_expand", "kind": "function", "doc": "<p>Fires before expanding a cell, returns false to prevent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.before_hide", "modulename": "dhxpyt.layout", "qualname": "Layout.before_hide", "kind": "function", "doc": "<p>Fires before hiding a cell, returns false to prevent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.before_remove", "modulename": "dhxpyt.layout", "qualname": "Layout.before_remove", "kind": "function", "doc": "<p>Fires before removing a cell, returns false to prevent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.before_resize_start", "modulename": "dhxpyt.layout", "qualname": "Layout.before_resize_start", "kind": "function", "doc": "<p>Fires before resizing a cell, returns false to prevent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.before_show", "modulename": "dhxpyt.layout", "qualname": "Layout.before_show", "kind": "function", "doc": "<p>Fires before showing a cell, returns false to prevent.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.cols", "modulename": "dhxpyt.layout", "qualname": "Layout.cols", "kind": "variable", "doc": "<p>Gets or sets the columns of the layout.</p>\n", "annotation": ": List[Dict[Any, Any]]"}, {"fullname": "dhxpyt.layout.Layout.css", "modulename": "dhxpyt.layout", "qualname": "Layout.css", "kind": "variable", "doc": "<p>Gets or sets the CSS class for the layout.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.layout.Layout.rows", "modulename": "dhxpyt.layout", "qualname": "Layout.rows", "kind": "variable", "doc": "<p>Gets or sets the rows of the layout.</p>\n", "annotation": ": List[Dict[Any, Any]]"}, {"fullname": "dhxpyt.layout.Layout.type", "modulename": "dhxpyt.layout", "qualname": "Layout.type", "kind": "variable", "doc": "<p>Gets or sets the layout type ('line', 'wide', 'space', 'none').</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.layout.Layout.attach", "modulename": "dhxpyt.layout", "qualname": "Layout.attach", "kind": "function", "doc": "<p>Attaches a component or HTML content to a cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">component</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.attach_html", "modulename": "dhxpyt.layout", "qualname": "Layout.attach_html", "kind": "function", "doc": "<p>Inserts HTML content into a cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.collapse", "modulename": "dhxpyt.layout", "qualname": "Layout.collapse", "kind": "function", "doc": "<p>Collapses the specified cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.detach", "modulename": "dhxpyt.layout", "qualname": "Layout.detach", "kind": "function", "doc": "<p>Removes an attached component or content from a cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.expand", "modulename": "dhxpyt.layout", "qualname": "Layout.expand", "kind": "function", "doc": "<p>Expands the collapsed cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.get_parent", "modulename": "dhxpyt.layout", "qualname": "Layout.get_parent", "kind": "function", "doc": "<p>Returns the parent cell of the current cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.get_widget", "modulename": "dhxpyt.layout", "qualname": "Layout.get_widget", "kind": "function", "doc": "<p>Returns the attached widget in the layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.hide", "modulename": "dhxpyt.layout", "qualname": "Layout.hide", "kind": "function", "doc": "<p>Hides the specified cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.is_visible", "modulename": "dhxpyt.layout", "qualname": "Layout.is_visible", "kind": "function", "doc": "<p>Checks if the cell is visible.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.paint", "modulename": "dhxpyt.layout", "qualname": "Layout.paint", "kind": "function", "doc": "<p>Repaints the layout.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.toggle", "modulename": "dhxpyt.layout", "qualname": "Layout.toggle", "kind": "function", "doc": "<p>Toggles between collapsing and expanding the cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.Layout.align", "modulename": "dhxpyt.layout", "qualname": "Layout.align", "kind": "variable", "doc": "<p>Gets or sets the alignment of the content inside a cell.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.layout.Layout.resizable", "modulename": "dhxpyt.layout", "qualname": "Layout.resizable", "kind": "variable", "doc": "<p>Gets or sets whether the cell can be resized.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.layout.MainWindow", "modulename": "dhxpyt.layout", "qualname": "MainWindow", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.layout.layout.Layout"}, {"fullname": "dhxpyt.layout.MainWindow.__init__", "modulename": "dhxpyt.layout", "qualname": "MainWindow.__init__", "kind": "function", "doc": "<p>Initialize the Main Window layout.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, {"fullname": "dhxpyt.layout.MainWindow.initialized", "modulename": "dhxpyt.layout", "qualname": "MainWindow.initialized", "kind": "variable", "doc": "<p>Placeholder Widgets Adders</p>\n"}, {"fullname": "dhxpyt.layout.MainWindow.cookie_status", "modulename": "dhxpyt.layout", "qualname": "MainWindow.cookie_status", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.MainWindow.set_theme", "modulename": "dhxpyt.layout", "qualname": "MainWindow.set_theme", "kind": "function", "doc": "<p>Sets the layout theme.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">theme</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.MainWindow.show_cookie_banner", "modulename": "dhxpyt.layout", "qualname": "MainWindow.show_cookie_banner", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.MainWindow.hide_cookie_banner", "modulename": "dhxpyt.layout", "qualname": "MainWindow.hide_cookie_banner", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.MainWindow.accept_cookies", "modulename": "dhxpyt.layout", "qualname": "MainWindow.accept_cookies", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">_event</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.MainWindow.reject_cookies", "modulename": "dhxpyt.layout", "qualname": "MainWindow.reject_cookies", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">_event</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.MainWindow.check_cookie_consent", "modulename": "dhxpyt.layout", "qualname": "MainWindow.check_cookie_consent", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.LayoutConfig", "modulename": "dhxpyt.layout", "qualname": "LayoutConfig", "kind": "class", "doc": "<p>Configuration class for Layout. Contains rows and columns with nested cells.</p>\n"}, {"fullname": "dhxpyt.layout.LayoutConfig.__init__", "modulename": "dhxpyt.layout", "qualname": "LayoutConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>type</strong>:  (Optional) Type of the layout (\"line\", \"wide\", etc.)</li>\n<li><strong>rows</strong>:  (Optional) A list of rows, where each row is a list of CellConfig objects.</li>\n<li><strong>cols</strong>:  (Optional) A list of columns, where each column is a list of CellConfig objects.</li>\n<li><strong>css</strong>:  (Optional) CSS class to apply to the entire layout.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;line&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">rows</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">layout</span><span class=\"o\">.</span><span class=\"n\">layout_config</span><span class=\"o\">.</span><span class=\"n\">CellConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cols</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">layout</span><span class=\"o\">.</span><span class=\"n\">layout_config</span><span class=\"o\">.</span><span class=\"n\">CellConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.layout.LayoutConfig.type", "modulename": "dhxpyt.layout", "qualname": "LayoutConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.LayoutConfig.rows", "modulename": "dhxpyt.layout", "qualname": "LayoutConfig.rows", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.LayoutConfig.cols", "modulename": "dhxpyt.layout", "qualname": "LayoutConfig.cols", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.LayoutConfig.css", "modulename": "dhxpyt.layout", "qualname": "LayoutConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.LayoutConfig.process_nested_dict", "modulename": "dhxpyt.layout", "qualname": "LayoutConfig.process_nested_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.LayoutConfig.to_dict", "modulename": "dhxpyt.layout", "qualname": "LayoutConfig.to_dict", "kind": "function", "doc": "<p>Converts the LayoutConfig into a dictionary format that can be\npassed into the layout constructor. Handles nested rows and cols.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.layout.CellConfig", "modulename": "dhxpyt.layout", "qualname": "CellConfig", "kind": "class", "doc": "<p>Configuration class for individual cells in the Layout.\nDefines properties like header, id, width, height, etc.</p>\n"}, {"fullname": "dhxpyt.layout.CellConfig.__init__", "modulename": "dhxpyt.layout", "qualname": "CellConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>header</strong>:  (Optional) Header text of the cell.</li>\n<li><strong>id</strong>:  (Optional) Unique identifier for the cell.</li>\n<li><strong>width</strong>:  (Optional) Width of the cell, can be percentage or fixed.</li>\n<li><strong>height</strong>:  (Optional) Height of the cell, can be percentage or fixed.</li>\n<li><strong>css</strong>:  (Optional) CSS class to apply to the cell.</li>\n<li><strong>collapsable</strong>:  (Optional) Whether the cell can be collapsed.</li>\n<li><strong>hidden</strong>:  (Optional) Whether the cell is hidden by default.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">header</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">collapsable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "dhxpyt.layout.CellConfig.header", "modulename": "dhxpyt.layout", "qualname": "CellConfig.header", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.CellConfig.id", "modulename": "dhxpyt.layout", "qualname": "CellConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.CellConfig.width", "modulename": "dhxpyt.layout", "qualname": "CellConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.CellConfig.height", "modulename": "dhxpyt.layout", "qualname": "CellConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.CellConfig.css", "modulename": "dhxpyt.layout", "qualname": "CellConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.CellConfig.collapsable", "modulename": "dhxpyt.layout", "qualname": "CellConfig.collapsable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.CellConfig.hidden", "modulename": "dhxpyt.layout", "qualname": "CellConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.layout.CellConfig.to_dict", "modulename": "dhxpyt.layout", "qualname": "CellConfig.to_dict", "kind": "function", "doc": "<p>Converts the CellConfig into a dictionary format that can be\npassed into the layout constructor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox", "modulename": "dhxpyt.listbox", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.Listbox", "modulename": "dhxpyt.listbox", "qualname": "Listbox", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.Listbox.__init__", "modulename": "dhxpyt.listbox", "qualname": "Listbox.__init__", "kind": "function", "doc": "<p>Initializes the ListBox widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  (Optional) The ListBoxConfig object containing the list configuration.</li>\n<li><strong>widget_parent</strong>:  (Optional) The ID of the HTML element where the list will be attached.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">listbox_config</span><span class=\"o\">.</span><span class=\"n\">ListboxConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.listbox.Listbox.listbox", "modulename": "dhxpyt.listbox", "qualname": "Listbox.listbox", "kind": "variable", "doc": "<p>ListBox API Functions</p>\n"}, {"fullname": "dhxpyt.listbox.Listbox.destructor", "modulename": "dhxpyt.listbox", "qualname": "Listbox.destructor", "kind": "function", "doc": "<p>Destroys the ListBox instance and releases resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.edit_item", "modulename": "dhxpyt.listbox", "qualname": "Listbox.edit_item", "kind": "function", "doc": "<p>Enables editing of an item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.get_focus", "modulename": "dhxpyt.listbox", "qualname": "Listbox.get_focus", "kind": "function", "doc": "<p>Returns the ID of the item in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.get_focus_item", "modulename": "dhxpyt.listbox", "qualname": "Listbox.get_focus_item", "kind": "function", "doc": "<p>Returns the object of the item in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.paint", "modulename": "dhxpyt.listbox", "qualname": "Listbox.paint", "kind": "function", "doc": "<p>Repaints the list on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.reset_focus", "modulename": "dhxpyt.listbox", "qualname": "Listbox.reset_focus", "kind": "function", "doc": "<p>Resets focus and moves the scroll to the beginning of the list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.set_focus", "modulename": "dhxpyt.listbox", "qualname": "Listbox.set_focus", "kind": "function", "doc": "<p>Sets focus to an item by its ID and moves the scroll to it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">item_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.add_event_handler", "modulename": "dhxpyt.listbox", "qualname": "Listbox.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_after_drag", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_after_drag", "kind": "function", "doc": "<p>Fires after dragging of an item is finished.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_after_drop", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_after_drop", "kind": "function", "doc": "<p>Fires before the user has finished dragging of an item but after the mouse button is released.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_after_edit_end", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_after_edit_end", "kind": "function", "doc": "<p>Fires after editing of an item is ended.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_after_edit_start", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_after_edit_start", "kind": "function", "doc": "<p>Fires after editing of an item has started.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_before_drag", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_before_drag", "kind": "function", "doc": "<p>Fires before dragging of an item has started.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_before_drop", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_before_drop", "kind": "function", "doc": "<p>Fires before the user has finished dragging of an item and released the mouse button.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_before_edit_end", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_before_edit_end", "kind": "function", "doc": "<p>Fires before editing of an item is ended.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_before_edit_start", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_before_edit_start", "kind": "function", "doc": "<p>Fires before editing of an item has started.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_cancel_drop", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_cancel_drop", "kind": "function", "doc": "<p>Fires on moving a mouse pointer out of item's borders while dragging the item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_can_drop", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_can_drop", "kind": "function", "doc": "<p>Fires when a dragged item is over a target item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_click", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_click", "kind": "function", "doc": "<p>Fires on clicking an item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_double_click", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_double_click", "kind": "function", "doc": "<p>Fires on double-clicking an item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_drag_in", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_drag_in", "kind": "function", "doc": "<p>Fires when an item is dragged to another potential target.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_drag_out", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_drag_out", "kind": "function", "doc": "<p>Fires when an item is dragged out of a potential target.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_drag_start", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_drag_start", "kind": "function", "doc": "<p>Fires when dragging of an item has started.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_focus_change", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_focus_change", "kind": "function", "doc": "<p>Fires on moving focus to a new item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_item_mouse_over", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_item_mouse_over", "kind": "function", "doc": "<p>Fires on moving the mouse pointer over an item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.Listbox.on_item_right_click", "modulename": "dhxpyt.listbox", "qualname": "Listbox.on_item_right_click", "kind": "function", "doc": "<p>Fires on right-clicking an item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.listbox.ListboxConfig", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig", "kind": "class", "doc": "<p>Configuration class for the ListBox widget.</p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.__init__", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.__init__", "kind": "function", "doc": "<p>Initializes the ListBoxConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  (Optional) List of data items.</li>\n<li><strong>css</strong>:  (Optional) Adds a CSS class(es) to the component.</li>\n<li><strong>dragCopy</strong>:  (Optional) Defines that an item is copied to a target during drag-n-drop.</li>\n<li><strong>dragMode</strong>:  (Optional) Enables drag-n-drop in ListBox.</li>\n<li><strong>editable</strong>:  (Optional) Enables editing in ListBox.</li>\n<li><strong>eventHandlers</strong>:  (Optional) Adds event handlers to HTML elements of a custom template.</li>\n<li><strong>height</strong>:  (Optional) Sets the height of ListBox.</li>\n<li><strong>htmlEnable</strong>:  (Optional) Enables/disables rendering of HTML content.</li>\n<li><strong>itemHeight</strong>:  (Optional) Sets the height of an item.</li>\n<li><strong>keyNavigation</strong>:  (Optional) Enables/disables navigation by arrow keys.</li>\n<li><strong>multiselection</strong>:  (Optional) Enables multiselection mode.</li>\n<li><strong>selection</strong>:  (Optional) Enables selection of ListBox items.</li>\n<li><strong>template</strong>:  (Optional) Specifies a template for ListBox items.</li>\n<li><strong>virtual</strong>:  (Optional) Enables dynamic rendering of ListBox items.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dragCopy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">dragMode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">editable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">eventHandlers</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;auto&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">htmlEnable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">itemHeight</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">37</span>,</span><span class=\"param\">\t<span class=\"n\">keyNavigation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">bool</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">multiselection</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">selection</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">template</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">virtual</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "dhxpyt.listbox.ListboxConfig.data", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.css", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.dragCopy", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.dragCopy", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.dragMode", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.dragMode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.editable", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.editable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.eventHandlers", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.eventHandlers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.height", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.htmlEnable", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.htmlEnable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.itemHeight", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.itemHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.keyNavigation", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.keyNavigation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.multiselection", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.multiselection", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.selection", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.selection", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.template", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.template", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.virtual", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.virtual", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.listbox.ListboxConfig.to_dict", "modulename": "dhxpyt.listbox", "qualname": "ListboxConfig.to_dict", "kind": "function", "doc": "<p>Converts the ListBoxConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu", "modulename": "dhxpyt.menu", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.Menu", "modulename": "dhxpyt.menu", "qualname": "Menu", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.Menu.__init__", "modulename": "dhxpyt.menu", "qualname": "Menu.__init__", "kind": "function", "doc": "<p>Initializes the Menu instance.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">menu_config</span><span class=\"o\">.</span><span class=\"n\">MenuConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.menu.Menu.menu", "modulename": "dhxpyt.menu", "qualname": "Menu.menu", "kind": "variable", "doc": "<p>Menu API Functions</p>\n"}, {"fullname": "dhxpyt.menu.Menu.destructor", "modulename": "dhxpyt.menu", "qualname": "Menu.destructor", "kind": "function", "doc": "<p>Removes the Menu instance and releases occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.disable", "modulename": "dhxpyt.menu", "qualname": "Menu.disable", "kind": "function", "doc": "<p>Disables and dims an item(s) of Menu.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.enable", "modulename": "dhxpyt.menu", "qualname": "Menu.enable", "kind": "function", "doc": "<p>Enables a disabled item(s) of Menu.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.get_selected", "modulename": "dhxpyt.menu", "qualname": "Menu.get_selected", "kind": "function", "doc": "<p>Returns an array of IDs of selected items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.hide", "modulename": "dhxpyt.menu", "qualname": "Menu.hide", "kind": "function", "doc": "<p>Hides an item(s) of Menu.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.is_disabled", "modulename": "dhxpyt.menu", "qualname": "Menu.is_disabled", "kind": "function", "doc": "<p>Checks whether an item of Menu is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.is_selected", "modulename": "dhxpyt.menu", "qualname": "Menu.is_selected", "kind": "function", "doc": "<p>Checks whether a specified Menu item is selected.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.paint", "modulename": "dhxpyt.menu", "qualname": "Menu.paint", "kind": "function", "doc": "<p>Repaints Menu on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.select", "modulename": "dhxpyt.menu", "qualname": "Menu.select", "kind": "function", "doc": "<p>Selects a specified item of Menu.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">unselect</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.show", "modulename": "dhxpyt.menu", "qualname": "Menu.show", "kind": "function", "doc": "<p>Shows an item(s) of Menu.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.show_at", "modulename": "dhxpyt.menu", "qualname": "Menu.show_at", "kind": "function", "doc": "<p>Shows a context menu.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">elem</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">show_at</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bottom&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.unselect", "modulename": "dhxpyt.menu", "qualname": "Menu.unselect", "kind": "function", "doc": "<p>Unselects a selected Menu item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.add_event_handler", "modulename": "dhxpyt.menu", "qualname": "Menu.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.on_after_hide", "modulename": "dhxpyt.menu", "qualname": "Menu.on_after_hide", "kind": "function", "doc": "<p>Fires after hiding a sub-item of Menu.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.on_before_hide", "modulename": "dhxpyt.menu", "qualname": "Menu.on_before_hide", "kind": "function", "doc": "<p>Fires before hiding a sub-item of Menu.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.on_click", "modulename": "dhxpyt.menu", "qualname": "Menu.on_click", "kind": "function", "doc": "<p>Fires after a click on a button or a menu option.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.on_keydown", "modulename": "dhxpyt.menu", "qualname": "Menu.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and an option of Menu is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.on_open_menu", "modulename": "dhxpyt.menu", "qualname": "Menu.on_open_menu", "kind": "function", "doc": "<p>Fires on expanding a menu item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.Menu.css", "modulename": "dhxpyt.menu", "qualname": "Menu.css", "kind": "variable", "doc": "<p>Gets or sets the CSS classes for Menu.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.menu.Menu.data", "modulename": "dhxpyt.menu", "qualname": "Menu.data", "kind": "variable", "doc": "<p>Gets or sets the data objects for Menu.</p>\n", "annotation": ": List[Dict[str, Any]]"}, {"fullname": "dhxpyt.menu.Menu.menu_css", "modulename": "dhxpyt.menu", "qualname": "Menu.menu_css", "kind": "variable", "doc": "<p>Gets or sets the CSS classes for Menu controls with nested items.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.menu.Menu.navigation_type", "modulename": "dhxpyt.menu", "qualname": "Menu.navigation_type", "kind": "variable", "doc": "<p>Gets or sets the action that opens menu options ('click' or 'pointer').</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.menu.MenuConfig", "modulename": "dhxpyt.menu", "qualname": "MenuConfig", "kind": "class", "doc": "<p>Configuration class for Menu.</p>\n"}, {"fullname": "dhxpyt.menu.MenuConfig.__init__", "modulename": "dhxpyt.menu", "qualname": "MenuConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>css</strong>:  (Optional) Adds style classes to Menu.</li>\n<li><strong>data</strong>:  (Optional) Specifies an array of MenuItemConfig objects to set into Menu.</li>\n<li><strong>menuCss</strong>:  (Optional) Adds style classes to all containers of Menu controls with nested items.</li>\n<li><strong>navigationType</strong>:  (Optional) Defines the action that opens menu options ('click' or 'pointer').</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">menu_config</span><span class=\"o\">.</span><span class=\"n\">MenuItemConfig</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">menuCss</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">navigationType</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;pointer&#39;</span></span>)</span>"}, {"fullname": "dhxpyt.menu.MenuConfig.css", "modulename": "dhxpyt.menu", "qualname": "MenuConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuConfig.data", "modulename": "dhxpyt.menu", "qualname": "MenuConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuConfig.menuCss", "modulename": "dhxpyt.menu", "qualname": "MenuConfig.menuCss", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuConfig.navigationType", "modulename": "dhxpyt.menu", "qualname": "MenuConfig.navigationType", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuConfig.to_dict", "modulename": "dhxpyt.menu", "qualname": "MenuConfig.to_dict", "kind": "function", "doc": "<p>Converts the MenuConfig into a dictionary format that can be\npassed into the menu constructor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.menu.MenuItemConfig", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig", "kind": "class", "doc": "<p>Configuration class for individual items in the Menu.</p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.__init__", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  (Optional) The id of the menu item.</li>\n<li><strong>value</strong>:  (Optional) The text value of the menu item.</li>\n<li><strong>type</strong>:  (Optional) The type of control, should be \"menuItem\".</li>\n<li><strong>parent</strong>:  (Optional) The parent id of the menu item.</li>\n<li><strong>items</strong>:  (Optional) An array of child MenuItemConfig objects.</li>\n<li><strong>count</strong>:  (Optional) A badge with a number.</li>\n<li><strong>countColor</strong>:  (Optional) The color of the badge (\"danger\", \"secondary\", \"primary\", \"success\").</li>\n<li><strong>hotkey</strong>:  (Optional) The name of a keyboard shortcut for the menu item.</li>\n<li><strong>html</strong>:  (Optional) A string with HTML to insert into the menu item.</li>\n<li><strong>icon</strong>:  (Optional) The name of an icon from the used icon font.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes.</li>\n<li><strong>disabled</strong>:  (Optional) Defines whether an item is disabled.</li>\n<li><strong>hidden</strong>:  (Optional) Defines whether the control is hidden.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;menuItem&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">menu_config</span><span class=\"o\">.</span><span class=\"n\">MenuItemConfig</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">countColor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;danger&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hotkey</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "dhxpyt.menu.MenuItemConfig.id", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.value", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.type", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.parent", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.items", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.items", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.count", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.countColor", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.countColor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.hotkey", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.hotkey", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.html", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.icon", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.css", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.disabled", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.hidden", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.menu.MenuItemConfig.to_dict", "modulename": "dhxpyt.menu", "qualname": "MenuItemConfig.to_dict", "kind": "function", "doc": "<p>Converts the MenuItemConfig into a dictionary format that can be\npassed into the menu constructor.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.message", "modulename": "dhxpyt.message", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.message.Message", "modulename": "dhxpyt.message", "qualname": "Message", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.message.Message.__init__", "modulename": "dhxpyt.message", "qualname": "Message.__init__", "kind": "function", "doc": "<p>Initializes and displays the Message widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  (Optional) The MessageConfig object containing the message configuration.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">message_config</span><span class=\"o\">.</span><span class=\"n\">MessageConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.message.Message.message", "modulename": "dhxpyt.message", "qualname": "Message.message", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.message.Message.close", "modulename": "dhxpyt.message", "qualname": "Message.close", "kind": "function", "doc": "<p>Closes the message box.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.message.MessageConfig", "modulename": "dhxpyt.message", "qualname": "MessageConfig", "kind": "class", "doc": "<p>Configuration class for the Message widget.</p>\n"}, {"fullname": "dhxpyt.message.MessageConfig.__init__", "modulename": "dhxpyt.message", "qualname": "MessageConfig.__init__", "kind": "function", "doc": "<p>Initializes the MessageConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>text</strong>:  (Optional) The text of the message box.</li>\n<li><strong>icon</strong>:  (Optional) An icon from the used icon font.</li>\n<li><strong>css</strong>:  (Optional) The style of the message box.</li>\n<li><strong>html</strong>:  (Optional) The HTML content to be displayed in the message box.</li>\n<li><strong>node</strong>:  (Optional) The container for the message box or its id.</li>\n<li><strong>position</strong>:  (Optional) The position of the message box.</li>\n<li><strong>expire</strong>:  (Optional) The time period of displaying the message box before it disappears, in milliseconds.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;top-right&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">expire</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.message.MessageConfig.text", "modulename": "dhxpyt.message", "qualname": "MessageConfig.text", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.message.MessageConfig.icon", "modulename": "dhxpyt.message", "qualname": "MessageConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.message.MessageConfig.css", "modulename": "dhxpyt.message", "qualname": "MessageConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.message.MessageConfig.html", "modulename": "dhxpyt.message", "qualname": "MessageConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.message.MessageConfig.node", "modulename": "dhxpyt.message", "qualname": "MessageConfig.node", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.message.MessageConfig.position", "modulename": "dhxpyt.message", "qualname": "MessageConfig.position", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.message.MessageConfig.expire", "modulename": "dhxpyt.message", "qualname": "MessageConfig.expire", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.message.MessageConfig.to_dict", "modulename": "dhxpyt.message", "qualname": "MessageConfig.to_dict", "kind": "function", "doc": "<p>Converts the MessageConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.pagination", "modulename": "dhxpyt.pagination", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.pagination.Pagination", "modulename": "dhxpyt.pagination", "qualname": "Pagination", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.pagination.Pagination.__init__", "modulename": "dhxpyt.pagination", "qualname": "Pagination.__init__", "kind": "function", "doc": "<p>Initializes the Pagination widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  (Required) The PaginationConfig object containing the pagination configuration.</li>\n<li><strong>widget_parent</strong>:  (Optional) The ID of the HTML element where the pagination will be attached.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">pagination</span><span class=\"o\">.</span><span class=\"n\">pagination_config</span><span class=\"o\">.</span><span class=\"n\">PaginationConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.pagination.Pagination.pagination", "modulename": "dhxpyt.pagination", "qualname": "Pagination.pagination", "kind": "variable", "doc": "<p>Pagination API Functions</p>\n"}, {"fullname": "dhxpyt.pagination.Pagination.destructor", "modulename": "dhxpyt.pagination", "qualname": "Pagination.destructor", "kind": "function", "doc": "<p>Destroys the Pagination instance and releases resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.pagination.Pagination.get_page", "modulename": "dhxpyt.pagination", "qualname": "Pagination.get_page", "kind": "function", "doc": "<p>Returns the index of the active page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.pagination.Pagination.get_pages_count", "modulename": "dhxpyt.pagination", "qualname": "Pagination.get_pages_count", "kind": "function", "doc": "<p>Gets the total number of pages in the pagination.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.pagination.Pagination.get_page_size", "modulename": "dhxpyt.pagination", "qualname": "Pagination.get_page_size", "kind": "function", "doc": "<p>Returns the number of items displayed per page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.pagination.Pagination.set_page", "modulename": "dhxpyt.pagination", "qualname": "Pagination.set_page", "kind": "function", "doc": "<p>Sets an active page in the related widget.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">page</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.pagination.Pagination.set_page_size", "modulename": "dhxpyt.pagination", "qualname": "Pagination.set_page_size", "kind": "function", "doc": "<p>Sets the number of items displayed on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.pagination.Pagination.add_event_handler", "modulename": "dhxpyt.pagination", "qualname": "Pagination.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.pagination.Pagination.on_change", "modulename": "dhxpyt.pagination", "qualname": "Pagination.on_change", "kind": "function", "doc": "<p>Fires on changing the active page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.pagination.PaginationConfig", "modulename": "dhxpyt.pagination", "qualname": "PaginationConfig", "kind": "class", "doc": "<p>Configuration class for the Pagination widget.</p>\n"}, {"fullname": "dhxpyt.pagination.PaginationConfig.__init__", "modulename": "dhxpyt.pagination", "qualname": "PaginationConfig.__init__", "kind": "function", "doc": "<p>Initializes the PaginationConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  (Required) The data collection of a widget to set into the pagination.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to the pagination.</li>\n<li><strong>inputWidth</strong>:  (Optional) Sets the width for the input of the pagination.</li>\n<li><strong>page</strong>:  (Optional) The index of the initial page set in the pagination.</li>\n<li><strong>pageSize</strong>:  (Optional) The number of items displayed per page of the related widget.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">inputWidth</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">40</span>,</span><span class=\"param\">\t<span class=\"n\">page</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">pageSize</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span>)</span>"}, {"fullname": "dhxpyt.pagination.PaginationConfig.data", "modulename": "dhxpyt.pagination", "qualname": "PaginationConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.pagination.PaginationConfig.css", "modulename": "dhxpyt.pagination", "qualname": "PaginationConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.pagination.PaginationConfig.inputWidth", "modulename": "dhxpyt.pagination", "qualname": "PaginationConfig.inputWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.pagination.PaginationConfig.page", "modulename": "dhxpyt.pagination", "qualname": "PaginationConfig.page", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.pagination.PaginationConfig.pageSize", "modulename": "dhxpyt.pagination", "qualname": "PaginationConfig.pageSize", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.pagination.PaginationConfig.to_dict", "modulename": "dhxpyt.pagination", "qualname": "PaginationConfig.to_dict", "kind": "function", "doc": "<p>Converts the PaginationConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup", "modulename": "dhxpyt.popup", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.popup.Popup", "modulename": "dhxpyt.popup", "qualname": "Popup", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.popup.Popup.__init__", "modulename": "dhxpyt.popup", "qualname": "Popup.__init__", "kind": "function", "doc": "<p>Initializes the Popup widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  (Optional) The PopupConfig object containing the popup configuration.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">popup</span><span class=\"o\">.</span><span class=\"n\">popup_config</span><span class=\"o\">.</span><span class=\"n\">PopupConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.popup.Popup.popup", "modulename": "dhxpyt.popup", "qualname": "Popup.popup", "kind": "variable", "doc": "<p>Popup API Functions</p>\n"}, {"fullname": "dhxpyt.popup.Popup.attach", "modulename": "dhxpyt.popup", "qualname": "Popup.attach", "kind": "function", "doc": "<p>Attaches a DHTMLX component to the Popup.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong>:  The name or object of a component.</li>\n<li><strong>config</strong>:  (Optional) The configuration settings of a component.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The object of the attached component.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.attach_html", "modulename": "dhxpyt.popup", "qualname": "Popup.attach_html", "kind": "function", "doc": "<p>Adds HTML content into the Popup.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>html</strong>:  An HTML content to be added into the popup.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.destructor", "modulename": "dhxpyt.popup", "qualname": "Popup.destructor", "kind": "function", "doc": "<p>Removes the Popup instance and releases occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.get_container", "modulename": "dhxpyt.popup", "qualname": "Popup.get_container", "kind": "function", "doc": "<p>Returns the HTML element of the Popup.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The HTML element.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.get_widget", "modulename": "dhxpyt.popup", "qualname": "Popup.get_widget", "kind": "function", "doc": "<p>Returns the widget attached to the Popup.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The widget attached to the Popup.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.hide", "modulename": "dhxpyt.popup", "qualname": "Popup.hide", "kind": "function", "doc": "<p>Hides the Popup.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.is_visible", "modulename": "dhxpyt.popup", "qualname": "Popup.is_visible", "kind": "function", "doc": "<p>Checks whether the Popup is visible.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the Popup is visible; otherwise, False.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.paint", "modulename": "dhxpyt.popup", "qualname": "Popup.paint", "kind": "function", "doc": "<p>Repaints the Popup on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.show", "modulename": "dhxpyt.popup", "qualname": "Popup.show", "kind": "function", "doc": "<p>Shows the Popup.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>node</strong>:  The container to place the Popup in.</li>\n<li><strong>config</strong>:  (Optional) The configuration object of the Popup.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">Any</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">popup</span><span class=\"o\">.</span><span class=\"n\">popup_config</span><span class=\"o\">.</span><span class=\"n\">PopupShowConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.add_event_handler", "modulename": "dhxpyt.popup", "qualname": "Popup.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_name</strong>:  The name of the event.</li>\n<li><strong>handler</strong>:  The handler function to attach.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.on_after_hide", "modulename": "dhxpyt.popup", "qualname": "Popup.on_after_hide", "kind": "function", "doc": "<p>Fires after the Popup is hidden.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter e (Event).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.on_after_show", "modulename": "dhxpyt.popup", "qualname": "Popup.on_after_show", "kind": "function", "doc": "<p>Fires after the Popup is shown.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter node (HTMLElement).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.on_before_hide", "modulename": "dhxpyt.popup", "qualname": "Popup.on_before_hide", "kind": "function", "doc": "<p>Fires before the Popup is hidden.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters fromOuterClick (bool), e (Event).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.on_before_show", "modulename": "dhxpyt.popup", "qualname": "Popup.on_before_show", "kind": "function", "doc": "<p>Fires before the Popup is shown.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter node (HTMLElement).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.Popup.on_click", "modulename": "dhxpyt.popup", "qualname": "Popup.on_click", "kind": "function", "doc": "<p>Fires on clicking the Popup.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter e (Event).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.popup.PopupConfig", "modulename": "dhxpyt.popup", "qualname": "PopupConfig", "kind": "class", "doc": "<p>Configuration class for the Popup widget.</p>\n"}, {"fullname": "dhxpyt.popup.PopupConfig.__init__", "modulename": "dhxpyt.popup", "qualname": "PopupConfig.__init__", "kind": "function", "doc": "<p>Initializes the PopupConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>css</strong>:  (Optional) Adds style classes for the component.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.popup.PopupConfig.css", "modulename": "dhxpyt.popup", "qualname": "PopupConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.popup.PopupConfig.to_dict", "modulename": "dhxpyt.popup", "qualname": "PopupConfig.to_dict", "kind": "function", "doc": "<p>Converts the PopupConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon", "modulename": "dhxpyt.ribbon", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.Ribbon", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.Ribbon.__init__", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.__init__", "kind": "function", "doc": "<p>Initializes the Ribbon widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  (Optional) The RibbonConfig object containing the ribbon configuration.</li>\n<li><strong>widget_parent</strong>:  (Optional) The ID of the HTML element where the ribbon will be attached.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">ribbon</span><span class=\"o\">.</span><span class=\"n\">ribbon_config</span><span class=\"o\">.</span><span class=\"n\">RibbonConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.Ribbon.ribbon", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.ribbon", "kind": "variable", "doc": "<p>Ribbon API Functions</p>\n"}, {"fullname": "dhxpyt.ribbon.Ribbon.destructor", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.destructor", "kind": "function", "doc": "<p>Destroys the Ribbon instance and releases resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.disable", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.disable", "kind": "function", "doc": "<p>Disables and dims an item(s) of Ribbon.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.enable", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.enable", "kind": "function", "doc": "<p>Enables a disabled item(s) of Ribbon.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.get_selected", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.get_selected", "kind": "function", "doc": "<p>Returns an array of IDs of selected items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.get_state", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.get_state", "kind": "function", "doc": "<p>Gets current values/states of controls.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.hide", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.hide", "kind": "function", "doc": "<p>Hides an item of Ribbon.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.is_disabled", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.is_disabled", "kind": "function", "doc": "<p>Checks whether an item of Ribbon is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.is_selected", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.is_selected", "kind": "function", "doc": "<p>Checks whether a specified Ribbon item is selected.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.paint", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.paint", "kind": "function", "doc": "<p>Repaints Ribbon on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.select", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.select", "kind": "function", "doc": "<p>Selects a specified item of Ribbon.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">unselect</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.set_state", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.set_state", "kind": "function", "doc": "<p>Sets values/states of controls.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.show", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.show", "kind": "function", "doc": "<p>Shows an item of Ribbon.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.unselect", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.unselect", "kind": "function", "doc": "<p>Unselects a selected Ribbon item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.add_event_handler", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_name</strong>:  The name of the event.</li>\n<li><strong>handler</strong>:  The handler function to attach.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.on_click", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.on_click", "kind": "function", "doc": "<p>Fires after a click on a control.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters id (str or int), events (Event).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.on_input", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.on_input", "kind": "function", "doc": "<p>Fires on entering text into the input field.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters id (str), value (str).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.on_input_blur", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.on_input_blur", "kind": "function", "doc": "<p>Fires when a control is blurred.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter id (str or int).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.on_input_change", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.on_input_change", "kind": "function", "doc": "<p>Fires on changing the value in the Input control of Ribbon.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters id (str or int), newValue (str).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.on_input_created", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.on_input_created", "kind": "function", "doc": "<p>Fires when a new input is added.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters id (str or int), input (HTMLInputElement).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.on_input_focus", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.on_input_focus", "kind": "function", "doc": "<p>Fires when a control is focused.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter id (str or int).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.on_keydown", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and a control of Ribbon is in focus.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters event (KeyboardEvent), id (str or None).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.Ribbon.on_open_menu", "modulename": "dhxpyt.ribbon", "qualname": "Ribbon.on_open_menu", "kind": "function", "doc": "<p>Fires on expanding a menu control.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter id (str or int).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.BlockConfig", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.ribbon.ribbon_config.ControlConfig"}, {"fullname": "dhxpyt.ribbon.BlockConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">ribbon</span><span class=\"o\">.</span><span class=\"n\">ribbon_config</span><span class=\"o\">.</span><span class=\"n\">ControlConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">direction</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.BlockConfig.type", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.BlockConfig.id", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.BlockConfig.parent", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.BlockConfig.items", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig.items", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.BlockConfig.direction", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig.direction", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.BlockConfig.title", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig.title", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.BlockConfig.css", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.BlockConfig.disabled", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.BlockConfig.hidden", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.BlockConfig.to_dict", "modulename": "dhxpyt.ribbon", "qualname": "BlockConfig.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.CustomHTMLButtonConfig", "modulename": "dhxpyt.ribbon", "qualname": "CustomHTMLButtonConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.ribbon.ribbon_config.ControlConfig"}, {"fullname": "dhxpyt.ribbon.CustomHTMLButtonConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "CustomHTMLButtonConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.CustomHTMLButtonConfig.type", "modulename": "dhxpyt.ribbon", "qualname": "CustomHTMLButtonConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.CustomHTMLButtonConfig.id", "modulename": "dhxpyt.ribbon", "qualname": "CustomHTMLButtonConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.CustomHTMLButtonConfig.parent", "modulename": "dhxpyt.ribbon", "qualname": "CustomHTMLButtonConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.CustomHTMLButtonConfig.html", "modulename": "dhxpyt.ribbon", "qualname": "CustomHTMLButtonConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.CustomHTMLButtonConfig.css", "modulename": "dhxpyt.ribbon", "qualname": "CustomHTMLButtonConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.CustomHTMLButtonConfig.hidden", "modulename": "dhxpyt.ribbon", "qualname": "CustomHTMLButtonConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.ribbon.ribbon_config.ControlConfig"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">ribbon</span><span class=\"o\">.</span><span class=\"n\">ribbon_config</span><span class=\"o\">.</span><span class=\"n\">ControlConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">active</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">circle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">countColor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">group</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hotkey</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">loading</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">multiClick</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">twoState</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">view</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.type", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.id", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.parent", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.value", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.items", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.items", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.active", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.active", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.circle", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.circle", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.color", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.color", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.count", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.countColor", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.countColor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.full", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.full", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.group", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.group", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.hotkey", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.hotkey", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.html", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.icon", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.loading", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.loading", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.multiClick", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.multiClick", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.size", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.size", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.tooltip", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.twoState", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.twoState", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.view", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.view", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.css", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.disabled", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.hidden", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ButtonConfig.to_dict", "modulename": "dhxpyt.ribbon", "qualname": "ButtonConfig.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.ribbon.ribbon_config.ControlConfig"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">valueFormat</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dateFormat</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabledDates</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mark</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">thisMonthOnly</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeFormat</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timePicker</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">weekNumbers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">weekStart</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">editable</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.type", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.id", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.parent", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.value", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.valueFormat", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.valueFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.dateFormat", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.dateFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.disabledDates", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.disabledDates", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.icon", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.label", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.mark", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.mark", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.mode", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.placeholder", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.thisMonthOnly", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.thisMonthOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.timeFormat", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.timeFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.timePicker", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.timePicker", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.weekNumbers", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.weekNumbers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.weekStart", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.weekStart", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.css", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.disabled", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.editable", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.editable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.hidden", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.DatepickerConfig.width", "modulename": "dhxpyt.ribbon", "qualname": "DatepickerConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.ribbon.ribbon_config.ControlConfig"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">src</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">active</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">countColor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">group</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hotkey</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">twoState</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.type", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.id", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.parent", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.src", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.src", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.active", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.active", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.count", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.countColor", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.countColor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.group", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.group", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.hotkey", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.hotkey", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.size", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.size", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.tooltip", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.twoState", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.twoState", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.css", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.disabled", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.ImageButtonConfig.hidden", "modulename": "dhxpyt.ribbon", "qualname": "ImageButtonConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.ribbon.ribbon_config.ControlConfig"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;navItem&#39;</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">ribbon</span><span class=\"o\">.</span><span class=\"n\">ribbon_config</span><span class=\"o\">.</span><span class=\"n\">ControlConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">active</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">countColor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">group</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hotkey</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">twoState</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.type", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.id", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.parent", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.value", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.items", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.items", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.active", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.active", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.count", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.countColor", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.countColor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.group", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.group", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.hotkey", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.hotkey", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.html", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.icon", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.size", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.size", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.tooltip", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.twoState", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.twoState", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.css", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.disabled", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.hidden", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.NavItemConfig.to_dict", "modulename": "dhxpyt.ribbon", "qualname": "NavItemConfig.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.ribbon.ribbon_config.ControlConfig"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">ribbon</span><span class=\"o\">.</span><span class=\"n\">ribbon_config</span><span class=\"o\">.</span><span class=\"n\">ControlConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">countColor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.type", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.id", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.parent", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.value", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.items", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.items", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.count", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.countColor", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.countColor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.icon", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.size", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.size", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.tooltip", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.css", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.disabled", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.hidden", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SelectButtonConfig.to_dict", "modulename": "dhxpyt.ribbon", "qualname": "SelectButtonConfig.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.ribbon.TitleConfig", "modulename": "dhxpyt.ribbon", "qualname": "TitleConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.ribbon.ribbon_config.ControlConfig"}, {"fullname": "dhxpyt.ribbon.TitleConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "TitleConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.TitleConfig.type", "modulename": "dhxpyt.ribbon", "qualname": "TitleConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.TitleConfig.id", "modulename": "dhxpyt.ribbon", "qualname": "TitleConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.TitleConfig.parent", "modulename": "dhxpyt.ribbon", "qualname": "TitleConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.TitleConfig.value", "modulename": "dhxpyt.ribbon", "qualname": "TitleConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.TitleConfig.html", "modulename": "dhxpyt.ribbon", "qualname": "TitleConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.TitleConfig.tooltip", "modulename": "dhxpyt.ribbon", "qualname": "TitleConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.TitleConfig.css", "modulename": "dhxpyt.ribbon", "qualname": "TitleConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.TitleConfig.disabled", "modulename": "dhxpyt.ribbon", "qualname": "TitleConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.TitleConfig.hidden", "modulename": "dhxpyt.ribbon", "qualname": "TitleConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.ribbon.ribbon_config.ControlConfig"}, {"fullname": "dhxpyt.ribbon.InputConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.InputConfig.type", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig.id", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig.parent", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig.value", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig.icon", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig.label", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig.placeholder", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig.tooltip", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig.width", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig.css", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig.disabled", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.InputConfig.hidden", "modulename": "dhxpyt.ribbon", "qualname": "InputConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SeparatorConfig", "modulename": "dhxpyt.ribbon", "qualname": "SeparatorConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.ribbon.ribbon_config.ControlConfig"}, {"fullname": "dhxpyt.ribbon.SeparatorConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "SeparatorConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.SeparatorConfig.type", "modulename": "dhxpyt.ribbon", "qualname": "SeparatorConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SeparatorConfig.id", "modulename": "dhxpyt.ribbon", "qualname": "SeparatorConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SpacerConfig", "modulename": "dhxpyt.ribbon", "qualname": "SpacerConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.ribbon.ribbon_config.ControlConfig"}, {"fullname": "dhxpyt.ribbon.SpacerConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "SpacerConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.SpacerConfig.type", "modulename": "dhxpyt.ribbon", "qualname": "SpacerConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.SpacerConfig.id", "modulename": "dhxpyt.ribbon", "qualname": "SpacerConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.RibbonConfig", "modulename": "dhxpyt.ribbon", "qualname": "RibbonConfig", "kind": "class", "doc": "<p>Configuration class for the Ribbon widget.</p>\n"}, {"fullname": "dhxpyt.ribbon.RibbonConfig.__init__", "modulename": "dhxpyt.ribbon", "qualname": "RibbonConfig.__init__", "kind": "function", "doc": "<p>Initializes the RibbonConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  (Optional) List of control configurations to set into Ribbon.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to Ribbon.</li>\n<li><strong>menuCss</strong>:  (Optional) Adds style classes to all containers of Ribbon controls with nested items.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">ribbon</span><span class=\"o\">.</span><span class=\"n\">ribbon_config</span><span class=\"o\">.</span><span class=\"n\">ControlConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">menuCss</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.ribbon.RibbonConfig.data", "modulename": "dhxpyt.ribbon", "qualname": "RibbonConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.RibbonConfig.css", "modulename": "dhxpyt.ribbon", "qualname": "RibbonConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.RibbonConfig.menuCss", "modulename": "dhxpyt.ribbon", "qualname": "RibbonConfig.menuCss", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.ribbon.RibbonConfig.to_dict", "modulename": "dhxpyt.ribbon", "qualname": "RibbonConfig.to_dict", "kind": "function", "doc": "<p>Converts the RibbonConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar", "modulename": "dhxpyt.sidebar", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.Sidebar", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.Sidebar.__init__", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.__init__", "kind": "function", "doc": "<p>Initializes the Sidebar widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  (Optional) The SidebarConfig object containing the sidebar configuration.</li>\n<li><strong>widget_parent</strong>:  (Optional) The ID of the HTML element where the sidebar will be attached.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">sidebar_config</span><span class=\"o\">.</span><span class=\"n\">SidebarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.sidebar.Sidebar.sidebar", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.sidebar", "kind": "variable", "doc": "<p>Sidebar API Functions</p>\n"}, {"fullname": "dhxpyt.sidebar.Sidebar.collapse", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.collapse", "kind": "function", "doc": "<p>Collapses the sidebar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.destructor", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.destructor", "kind": "function", "doc": "<p>Destroys the Sidebar instance and releases resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.disable", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.disable", "kind": "function", "doc": "<p>Disables and dims items of Sidebar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.enable", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.enable", "kind": "function", "doc": "<p>Enables disabled items of Sidebar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.expand", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.expand", "kind": "function", "doc": "<p>Expands the sidebar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.get_selected", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.get_selected", "kind": "function", "doc": "<p>Returns an array of IDs of selected items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.hide", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.hide", "kind": "function", "doc": "<p>Hides items of Sidebar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.is_collapsed", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.is_collapsed", "kind": "function", "doc": "<p>Checks whether Sidebar is collapsed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.is_disabled", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.is_disabled", "kind": "function", "doc": "<p>Checks whether an item of Sidebar is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.is_selected", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.is_selected", "kind": "function", "doc": "<p>Checks whether a specified Sidebar item is selected.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.paint", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.paint", "kind": "function", "doc": "<p>Repaints Sidebar on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.select", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.select", "kind": "function", "doc": "<p>Selects a specified Sidebar item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">unselect</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.show", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.show", "kind": "function", "doc": "<p>Shows items of Sidebar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.toggle", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.toggle", "kind": "function", "doc": "<p>Expands/collapses Sidebar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.unselect", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.unselect", "kind": "function", "doc": "<p>Unselects a selected Sidebar item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.add_event_handler", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_name</strong>:  The name of the event.</li>\n<li><strong>handler</strong>:  The handler function to attach.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_after_collapse", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_after_collapse", "kind": "function", "doc": "<p>Fires after collapsing a sidebar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_after_expand", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_after_expand", "kind": "function", "doc": "<p>Fires after expanding a sidebar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_after_hide", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_after_hide", "kind": "function", "doc": "<p>Fires after hiding a sub-item of Sidebar.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter events (Event).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_before_collapse", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_before_collapse", "kind": "function", "doc": "<p>Fires before collapsing a sidebar.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function that returns False to prevent collapsing.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_before_expand", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_before_expand", "kind": "function", "doc": "<p>Fires before expanding a sidebar.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function that returns False to prevent expanding.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_before_hide", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_before_hide", "kind": "function", "doc": "<p>Fires before hiding a sub-item of Sidebar.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters id (str or int), events (Event).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_click", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_click", "kind": "function", "doc": "<p>Fires after a click on a control.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters id (str or int), events (Event).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_input_blur", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_input_blur", "kind": "function", "doc": "<p>Fires when a control is blurred.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter id (str or int).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_input_created", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_input_created", "kind": "function", "doc": "<p>Fires when a new input is added.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters id (str or int), input (HTMLInputElement).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_input_focus", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_input_focus", "kind": "function", "doc": "<p>Fires when a control is focused.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter id (str or int).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_keydown", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and a Sidebar option is in focus.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters event (KeyboardEvent), id (str or None).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.Sidebar.on_open_menu", "modulename": "dhxpyt.sidebar", "qualname": "Sidebar.on_open_menu", "kind": "function", "doc": "<p>Fires on expanding a menu control.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter id (str or int).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.SidebarConfig", "modulename": "dhxpyt.sidebar", "qualname": "SidebarConfig", "kind": "class", "doc": "<p>Configuration class for the Sidebar widget.</p>\n"}, {"fullname": "dhxpyt.sidebar.SidebarConfig.__init__", "modulename": "dhxpyt.sidebar", "qualname": "SidebarConfig.__init__", "kind": "function", "doc": "<p>Initializes the SidebarConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  (Optional) List of control configurations to set into Sidebar.</li>\n<li><strong>collapsed</strong>:  (Optional) Defines that a sidebar is initialized in the collapsed state.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to Sidebar.</li>\n<li><strong>menuCss</strong>:  (Optional) Adds style classes to all containers of Sidebar controls with nested items.</li>\n<li><strong>minWidth</strong>:  (Optional) Sets the minimal width of a sidebar in the collapsed state.</li>\n<li><strong>width</strong>:  (Optional) Sets the width of a sidebar.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">sidebar_config</span><span class=\"o\">.</span><span class=\"n\">ControlConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">collapsed</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">menuCss</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.sidebar.SidebarConfig.data", "modulename": "dhxpyt.sidebar", "qualname": "SidebarConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.SidebarConfig.collapsed", "modulename": "dhxpyt.sidebar", "qualname": "SidebarConfig.collapsed", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.SidebarConfig.css", "modulename": "dhxpyt.sidebar", "qualname": "SidebarConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.SidebarConfig.menuCss", "modulename": "dhxpyt.sidebar", "qualname": "SidebarConfig.menuCss", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.SidebarConfig.minWidth", "modulename": "dhxpyt.sidebar", "qualname": "SidebarConfig.minWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.SidebarConfig.width", "modulename": "dhxpyt.sidebar", "qualname": "SidebarConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.SidebarConfig.to_dict", "modulename": "dhxpyt.sidebar", "qualname": "SidebarConfig.to_dict", "kind": "function", "doc": "<p>Converts the SidebarConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.CustomHTMLConfig", "modulename": "dhxpyt.sidebar", "qualname": "CustomHTMLConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.sidebar.sidebar_config.ControlConfig"}, {"fullname": "dhxpyt.sidebar.CustomHTMLConfig.__init__", "modulename": "dhxpyt.sidebar", "qualname": "CustomHTMLConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.sidebar.CustomHTMLConfig.type", "modulename": "dhxpyt.sidebar", "qualname": "CustomHTMLConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.CustomHTMLConfig.id", "modulename": "dhxpyt.sidebar", "qualname": "CustomHTMLConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.CustomHTMLConfig.parent", "modulename": "dhxpyt.sidebar", "qualname": "CustomHTMLConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.CustomHTMLConfig.html", "modulename": "dhxpyt.sidebar", "qualname": "CustomHTMLConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.CustomHTMLConfig.css", "modulename": "dhxpyt.sidebar", "qualname": "CustomHTMLConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.CustomHTMLConfig.hidden", "modulename": "dhxpyt.sidebar", "qualname": "CustomHTMLConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.sidebar.sidebar_config.ControlConfig"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.__init__", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">sidebar_config</span><span class=\"o\">.</span><span class=\"n\">ControlConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">countColor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hotkey</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.type", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.id", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.parent", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.value", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.items", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.items", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.count", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.countColor", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.countColor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.hotkey", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.hotkey", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.html", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.icon", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.tooltip", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.css", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.disabled", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.hidden", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.MenuItemConfig.to_dict", "modulename": "dhxpyt.sidebar", "qualname": "MenuItemConfig.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.NavItemConfig", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.sidebar.sidebar_config.ControlConfig"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.__init__", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">sidebar_config</span><span class=\"o\">.</span><span class=\"n\">ControlConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">active</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">countColor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">group</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hotkey</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">twoState</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.type", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.id", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.parent", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.value", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.items", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.items", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.active", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.active", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.count", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.countColor", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.countColor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.group", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.group", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.hotkey", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.hotkey", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.html", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.icon", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.tooltip", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.twoState", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.twoState", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.css", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.disabled", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.hidden", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.NavItemConfig.to_dict", "modulename": "dhxpyt.sidebar", "qualname": "NavItemConfig.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.sidebar.SeparatorConfig", "modulename": "dhxpyt.sidebar", "qualname": "SeparatorConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.sidebar.sidebar_config.ControlConfig"}, {"fullname": "dhxpyt.sidebar.SeparatorConfig.__init__", "modulename": "dhxpyt.sidebar", "qualname": "SeparatorConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.sidebar.SeparatorConfig.type", "modulename": "dhxpyt.sidebar", "qualname": "SeparatorConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.SeparatorConfig.id", "modulename": "dhxpyt.sidebar", "qualname": "SeparatorConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.SpacerConfig", "modulename": "dhxpyt.sidebar", "qualname": "SpacerConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.sidebar.sidebar_config.ControlConfig"}, {"fullname": "dhxpyt.sidebar.SpacerConfig.__init__", "modulename": "dhxpyt.sidebar", "qualname": "SpacerConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.sidebar.SpacerConfig.type", "modulename": "dhxpyt.sidebar", "qualname": "SpacerConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.SpacerConfig.id", "modulename": "dhxpyt.sidebar", "qualname": "SpacerConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.TitleConfig", "modulename": "dhxpyt.sidebar", "qualname": "TitleConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.sidebar.sidebar_config.ControlConfig"}, {"fullname": "dhxpyt.sidebar.TitleConfig.__init__", "modulename": "dhxpyt.sidebar", "qualname": "TitleConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.sidebar.TitleConfig.type", "modulename": "dhxpyt.sidebar", "qualname": "TitleConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.TitleConfig.id", "modulename": "dhxpyt.sidebar", "qualname": "TitleConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.TitleConfig.parent", "modulename": "dhxpyt.sidebar", "qualname": "TitleConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.TitleConfig.value", "modulename": "dhxpyt.sidebar", "qualname": "TitleConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.TitleConfig.html", "modulename": "dhxpyt.sidebar", "qualname": "TitleConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.TitleConfig.tooltip", "modulename": "dhxpyt.sidebar", "qualname": "TitleConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.TitleConfig.css", "modulename": "dhxpyt.sidebar", "qualname": "TitleConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.TitleConfig.disabled", "modulename": "dhxpyt.sidebar", "qualname": "TitleConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.sidebar.TitleConfig.hidden", "modulename": "dhxpyt.sidebar", "qualname": "TitleConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider", "modulename": "dhxpyt.slider", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider", "modulename": "dhxpyt.slider.slider", "kind": "module", "doc": "<p>Slider widget implementation</p>\n"}, {"fullname": "dhxpyt.slider.slider.Slider", "modulename": "dhxpyt.slider.slider", "qualname": "Slider", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider.Slider.__init__", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.__init__", "kind": "function", "doc": "<p>Initializes the Slider widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  The SliderConfig object containing the slider configuration.</li>\n<li><strong>widget_parent</strong>:  (Optional) The ID of the HTML element where the slider will be attached.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">slider</span><span class=\"o\">.</span><span class=\"n\">slider_config</span><span class=\"o\">.</span><span class=\"n\">SliderConfig</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.slider.slider.Slider.slider", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.slider", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider.Slider.blur", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.blur", "kind": "function", "doc": "<p>Removes focus from a thumb of Slider.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.destructor", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.destructor", "kind": "function", "doc": "<p>Destroys the slider instance and releases occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.disable", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.disable", "kind": "function", "doc": "<p>Disables the slider.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.enable", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.enable", "kind": "function", "doc": "<p>Enables the slider.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.focus", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.focus", "kind": "function", "doc": "<p>Sets focus to a thumb of Slider.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>extra</strong>:  (Optional) If the range mode is activated, True will set focus to the second thumb.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">extra</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.get_value", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.get_value", "kind": "function", "doc": "<p>Returns the current value of Slider.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>An array with the current value of the slider.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.is_disabled", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.is_disabled", "kind": "function", "doc": "<p>Checks whether Slider is disabled.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the slider is disabled; otherwise, False.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.paint", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.paint", "kind": "function", "doc": "<p>Repaints Slider on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.set_value", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.set_value", "kind": "function", "doc": "<p>Sets a value for the slider.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong>:  The value to be set for Slider.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.add_event_handler", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_name</strong>:  The name of the event.</li>\n<li><strong>handler</strong>:  The handler function to attach.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.on_before_change", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.on_before_change", "kind": "function", "doc": "<p>Fires before changing of the slider value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters value (float), oldValue (float), isRange (bool).\nReturn False to prevent changing the slider value.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.on_blur", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.on_blur", "kind": "function", "doc": "<p>Fires when a thumb of Slider has lost focus.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.on_change", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.on_change", "kind": "function", "doc": "<p>Fires on change of the slider value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameters value (float), oldValue (float), isRange (bool).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.on_focus", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.on_focus", "kind": "function", "doc": "<p>Fires when a thumb of Slider has received focus.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.on_keydown", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed and a thumb of Slider is in focus.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter event (KeyboardEvent).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.on_mousedown", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.on_mousedown", "kind": "function", "doc": "<p>Fires on pressing the left mouse button over the slider thumb.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter event (Event).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider.Slider.on_mouseup", "modulename": "dhxpyt.slider.slider", "qualname": "Slider.on_mouseup", "kind": "function", "doc": "<p>Fires on releasing the left mouse button over the slider thumb.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter event (Event).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.slider.slider_config", "modulename": "dhxpyt.slider.slider_config", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig", "kind": "class", "doc": "<p>Configuration class for the Slider widget.</p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.__init__", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.__init__", "kind": "function", "doc": "<p>Initializes the SliderConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>min</strong>:  (Required) The minimal value of slider.</li>\n<li><strong>max</strong>:  (Required) The maximal value of slider.</li>\n<li><strong>step</strong>:  (Optional) The step the slider thumb will be moved with. Default is 1.</li>\n<li><strong>value</strong>:  (Optional) The value the thumb will be set at on initialization of the slider.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes for the component.</li>\n<li><strong>helpMessage</strong>:  (Optional) Adds an icon with a question mark next to Slider.</li>\n<li><strong>hiddenLabel</strong>:  (Optional) Adds a hidden label for a Slider that will be used while sending a form to the server.</li>\n<li><strong>inverse</strong>:  (Optional) Enables/disables the inverse slider mode.</li>\n<li><strong>label</strong>:  (Optional) Specifies the label of a slider.</li>\n<li><strong>labelPosition</strong>:  (Optional) Defines the position of a label of a slider (\"left\" | \"top\").</li>\n<li><strong>labelWidth</strong>:  (Optional) Sets the width of a label.</li>\n<li><strong>majorTick</strong>:  (Optional) Sets interval of rendering numeric values on the slider scale.</li>\n<li><strong>mode</strong>:  (Optional) The direction of the Slider scale (\"vertical\" | \"horizontal\"). Default is \"horizontal\".</li>\n<li><strong>range</strong>:  (Optional) Enables/disables the possibility to select a range of values on the slider.</li>\n<li><strong>tick</strong>:  (Optional) Sets the interval of steps for rendering the slider scale.</li>\n<li><strong>tickTemplate</strong>:  (Optional) Sets a template for rendering values on the scale.</li>\n<li><strong>tooltip</strong>:  (Optional) Enables a tooltip on hovering over the slider thumb. Default is True.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">min</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"nb\">max</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">helpMessage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hiddenLabel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">inverse</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelPosition</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">labelWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">majorTick</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;horizontal&#39;</span>,</span><span class=\"param\">\t<span class=\"nb\">range</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tick</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tickTemplate</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.min", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.min", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.max", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.max", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.step", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.step", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.value", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.css", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.helpMessage", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.helpMessage", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.hiddenLabel", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.hiddenLabel", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.inverse", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.inverse", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.label", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.labelPosition", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.labelPosition", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.labelWidth", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.labelWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.majorTick", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.majorTick", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.mode", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.range", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.range", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.tick", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.tick", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.tickTemplate", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.tickTemplate", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.tooltip", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.slider.slider_config.SliderConfig.to_dict", "modulename": "dhxpyt.slider.slider_config", "qualname": "SliderConfig.to_dict", "kind": "function", "doc": "<p>Converts the SliderConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar", "modulename": "dhxpyt.tabbar", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.Tabbar", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.Tabbar.__init__", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.__init__", "kind": "function", "doc": "<p>Initializes the Tabbar instance.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">tabbar</span><span class=\"o\">.</span><span class=\"n\">tabbar_config</span><span class=\"o\">.</span><span class=\"n\">TabbarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.tabbar.Tabbar.tabbar", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.tabbar", "kind": "variable", "doc": "<p>Placeholder Widgets Adders</p>\n"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_grid", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_grid", "kind": "function", "doc": "<p>Adds a Grid widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mainwindow&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">grid_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">grid_config</span><span class=\"o\">.</span><span class=\"n\">GridConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">Grid</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_cardflow", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_cardflow", "kind": "function", "doc": "<p>Adds a CardFlow widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">cardflow_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">cardflow</span><span class=\"o\">.</span><span class=\"n\">cardflow_config</span><span class=\"o\">.</span><span class=\"n\">CardFlowConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.wait_for_element", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.wait_for_element", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">selector</span>, </span><span class=\"param\"><span class=\"n\">callback</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_kanban", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_kanban", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mainwindow&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">kanban_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">kanban</span><span class=\"o\">.</span><span class=\"n\">kanban_config</span><span class=\"o\">.</span><span class=\"n\">KanbanConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">kanban_callback</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">callable</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.create_kanban", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.create_kanban", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_menu", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_menu", "kind": "function", "doc": "<p>Adds a Layout into a Layout cell</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mainwindow_header&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">menu_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">menu_config</span><span class=\"o\">.</span><span class=\"n\">MenuConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">menu</span><span class=\"o\">.</span><span class=\"n\">Menu</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_toolbar", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_toolbar", "kind": "function", "doc": "<p>Adds a Toolbar widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;mainwindow&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">toolbar_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">toolbar</span><span class=\"o\">.</span><span class=\"n\">toolbar_config</span><span class=\"o\">.</span><span class=\"n\">ToolbarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">toolbar</span><span class=\"o\">.</span><span class=\"n\">toolbar</span><span class=\"o\">.</span><span class=\"n\">Toolbar</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_sidebar", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_sidebar", "kind": "function", "doc": "<p>Adds a Sidebar widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">sidebar_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">sidebar_config</span><span class=\"o\">.</span><span class=\"n\">SidebarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">sidebar</span><span class=\"o\">.</span><span class=\"n\">Sidebar</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_form", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_form", "kind": "function", "doc": "<p>Adds a Form widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">form_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">form_config</span><span class=\"o\">.</span><span class=\"n\">FormConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">Form</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_listbox", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_listbox", "kind": "function", "doc": "<p>Adds a Listbox widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">listbox_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">listbox</span><span class=\"o\">.</span><span class=\"n\">listbox_config</span><span class=\"o\">.</span><span class=\"n\">ListboxConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_calendar", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_calendar", "kind": "function", "doc": "<p>Adds a Calendar widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">calendar_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">calendar</span><span class=\"o\">.</span><span class=\"n\">calendar_config</span><span class=\"o\">.</span><span class=\"n\">CalendarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_chart", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_chart", "kind": "function", "doc": "<p>Adds a Chart widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">chart_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">chart</span><span class=\"o\">.</span><span class=\"n\">chart_config</span><span class=\"o\">.</span><span class=\"n\">ChartConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_pagination", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_pagination", "kind": "function", "doc": "<p>Adds a Pagination widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">pagination_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">pagination</span><span class=\"o\">.</span><span class=\"n\">pagination_config</span><span class=\"o\">.</span><span class=\"n\">PaginationConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_ribbon", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_ribbon", "kind": "function", "doc": "<p>Adds a Ribbon widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ribbon_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">ribbon</span><span class=\"o\">.</span><span class=\"n\">ribbon_config</span><span class=\"o\">.</span><span class=\"n\">RibbonConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_tabbar", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_tabbar", "kind": "function", "doc": "<p>Adds a Tabbar widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tabbar_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">tabbar</span><span class=\"o\">.</span><span class=\"n\">tabbar_config</span><span class=\"o\">.</span><span class=\"n\">TabbarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_timepicker", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_timepicker", "kind": "function", "doc": "<p>Adds a Timepicker widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">timepicker_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">timepicker</span><span class=\"o\">.</span><span class=\"n\">timepicker_config</span><span class=\"o\">.</span><span class=\"n\">TimepickerConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_tree", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_tree", "kind": "function", "doc": "<p>Adds a Tree widget into a Layout cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tree_config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">tree_config</span><span class=\"o\">.</span><span class=\"n\">TreeConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_tab", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_tab", "kind": "function", "doc": "<p>Adds a new tab into a tabbar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.destructor", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.destructor", "kind": "function", "doc": "<p>Removes the Tabbar instance and releases occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.disable_tab", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.disable_tab", "kind": "function", "doc": "<p>Disables a tab on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.enable_tab", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.enable_tab", "kind": "function", "doc": "<p>Enables a disabled tab.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.get_active", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.get_active", "kind": "function", "doc": "<p>Gets the id of the active tab.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.get_cell", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.get_cell", "kind": "function", "doc": "<p>Returns the config object of a cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.get_id", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.get_id", "kind": "function", "doc": "<p>Returns the id of a tab by its index.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.get_widget", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.get_widget", "kind": "function", "doc": "<p>Returns the widget attached to Tabbar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.is_disabled", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.is_disabled", "kind": "function", "doc": "<p>Checks whether a tab is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.paint", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.paint", "kind": "function", "doc": "<p>Repaints the Tabbar on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.remove_tab", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.remove_tab", "kind": "function", "doc": "<p>Removes a tab from a tabbar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.set_active", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.set_active", "kind": "function", "doc": "<p>Sets an active tab.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.add_event_handler", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.add_event_handler", "kind": "function", "doc": "<p>Helper to add event handlers dynamically.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.on_after_close", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.on_after_close", "kind": "function", "doc": "<p>Fires after closing a tab in Tabbar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.on_before_change", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.on_before_change", "kind": "function", "doc": "<p>Fires before changing the active tab.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.on_before_close", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.on_before_close", "kind": "function", "doc": "<p>Fires before closing a tab in Tabbar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.on_change", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.on_change", "kind": "function", "doc": "<p>Fires on changing the active tab.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.active_tab", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.active_tab", "kind": "variable", "doc": "<p>Gets or sets the currently active tab.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.tabbar.Tabbar.closable", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.closable", "kind": "variable", "doc": "<p>Gets or sets the closable property for tabs.</p>\n", "annotation": ": Union[bool, List[str]]"}, {"fullname": "dhxpyt.tabbar.Tabbar.css", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.css", "kind": "variable", "doc": "<p>Gets or sets the CSS class(es) applied to Tabbar.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.tabbar.Tabbar.disabled", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.disabled", "kind": "variable", "doc": "<p>Gets or sets disabled tabs.</p>\n", "annotation": ": Union[str, List[str]]"}, {"fullname": "dhxpyt.tabbar.Tabbar.mode", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.mode", "kind": "variable", "doc": "<p>Gets or sets the mode of displaying a tabbar.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.tabbar.Tabbar.no_content", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.no_content", "kind": "variable", "doc": "<p>Gets or sets whether tabs contain any content.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.tabbar.Tabbar.tab_align", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.tab_align", "kind": "variable", "doc": "<p>Gets or sets alignment for tabs.</p>\n", "annotation": ": str"}, {"fullname": "dhxpyt.tabbar.Tabbar.tab_auto_height", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.tab_auto_height", "kind": "variable", "doc": "<p>Gets or sets whether the height of tabs is automatically adjusted.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.tabbar.Tabbar.tab_auto_width", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.tab_auto_width", "kind": "variable", "doc": "<p>Gets or sets whether the width of tabs is automatically adjusted.</p>\n", "annotation": ": bool"}, {"fullname": "dhxpyt.tabbar.Tabbar.tab_height", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.tab_height", "kind": "variable", "doc": "<p>Gets or sets the height of a tab.</p>\n", "annotation": ": Union[int, str]"}, {"fullname": "dhxpyt.tabbar.Tabbar.tab_width", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.tab_width", "kind": "variable", "doc": "<p>Gets or sets the width of a tab.</p>\n", "annotation": ": Union[int, str]"}, {"fullname": "dhxpyt.tabbar.Tabbar.views", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.views", "kind": "variable", "doc": "<p>Gets or sets the configuration of tabs.</p>\n", "annotation": ": List[Dict[str, Any]]"}, {"fullname": "dhxpyt.tabbar.Tabbar.attach", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.attach", "kind": "function", "doc": "<p>Attaches a DHTMLX component into a Tabbar cell.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">component</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.attach_html", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.attach_html", "kind": "function", "doc": "<p>Adds HTML content into a Tabbar cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.get_cell_parent", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.get_cell_parent", "kind": "function", "doc": "<p>Returns the parent of a cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.Tabbar.get_cell_widget", "modulename": "dhxpyt.tabbar", "qualname": "Tabbar.get_cell_widget", "kind": "function", "doc": "<p>Returns the widget attached to a Tabbar cell.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.TabbarConfig", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig", "kind": "class", "doc": "<p>Configuration class for Tabbar.</p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.__init__", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>views</strong>:  (Required) Defines the configuration of tabs.</li>\n<li><strong>activeTab</strong>:  (Optional) Sets the currently active tab.</li>\n<li><strong>closable</strong>:  (Optional) Adds close buttons for tabs.</li>\n<li><strong>css</strong>:  (Optional) The CSS class(es) applied to Tabbar.</li>\n<li><strong>disabled</strong>:  (Optional) Makes a tab or tabs disabled.</li>\n<li><strong>mode</strong>:  (Optional) Specifies the mode of displaying the tabbar.</li>\n<li><strong>noContent</strong>:  (Optional) Defines whether tabs contain any content.</li>\n<li><strong>tabAlign</strong>:  (Optional) Sets alignment for tabs.</li>\n<li><strong>tabAutoHeight</strong>:  (Optional) Adjusts tab height automatically.</li>\n<li><strong>tabAutoWidth</strong>:  (Optional) Adjusts tab width automatically.</li>\n<li><strong>tabHeight</strong>:  (Optional) Sets the height of a tab.</li>\n<li><strong>tabWidth</strong>:  (Optional) Sets the width of a tab.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">views</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">tabbar</span><span class=\"o\">.</span><span class=\"n\">tabbar_config</span><span class=\"o\">.</span><span class=\"n\">TabConfig</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">activeTab</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">closable</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">noContent</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tabAlign</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tabAutoHeight</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tabAutoWidth</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tabHeight</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tabWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.views", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.views", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.activeTab", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.activeTab", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.closable", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.closable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.css", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.disabled", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.mode", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.noContent", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.noContent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.tabAlign", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.tabAlign", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.tabAutoHeight", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.tabAutoHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.tabAutoWidth", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.tabAutoWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.tabHeight", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.tabHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.tabWidth", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.tabWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabbarConfig.to_dict", "modulename": "dhxpyt.tabbar", "qualname": "TabbarConfig.to_dict", "kind": "function", "doc": "<p>Converts the TabbarConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tabbar.TabConfig", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig", "kind": "class", "doc": "<p>Configuration class for individual tabs in the Tabbar.</p>\n"}, {"fullname": "dhxpyt.tabbar.TabConfig.__init__", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  (Required) The id of the tab.</li>\n<li><strong>tab</strong>:  (Optional) The name of the tab.</li>\n<li><strong>tabCss</strong>:  (Optional) The CSS class used for the tab.</li>\n<li><strong>css</strong>:  (Optional) The CSS class used for the cell.</li>\n<li><strong>header</strong>:  (Optional) The header of the cell.</li>\n<li><strong>html</strong>:  (Optional) HTML content for the tab.</li>\n<li><strong>padding</strong>:  (Optional) The distance between the content and border.</li>\n<li><strong>tabWidth</strong>:  (Optional) The width of the tab.</li>\n<li><strong>tabHeight</strong>:  (Optional) The height of the tab.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">tab</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tabCss</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">header</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">padding</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tabWidth</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tabHeight</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.tabbar.TabConfig.id", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabConfig.tab", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig.tab", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabConfig.tabCss", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig.tabCss", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabConfig.css", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabConfig.header", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig.header", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabConfig.html", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabConfig.padding", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig.padding", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabConfig.tabWidth", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig.tabWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabConfig.tabHeight", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig.tabHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tabbar.TabConfig.to_dict", "modulename": "dhxpyt.tabbar", "qualname": "TabConfig.to_dict", "kind": "function", "doc": "<p>Converts the TabConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker", "modulename": "dhxpyt.timepicker", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.timepicker.Timepicker", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.timepicker.Timepicker.__init__", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.__init__", "kind": "function", "doc": "<p>Initializes the TimePicker widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  (Optional) The TimePickerConfig object containing the timepicker configuration.</li>\n<li><strong>widget_parent</strong>:  (Optional) The ID of the HTML element where the timepicker will be attached.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">timepicker</span><span class=\"o\">.</span><span class=\"n\">timepicker_config</span><span class=\"o\">.</span><span class=\"n\">TimepickerConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.timepicker.Timepicker.timepicker", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.timepicker", "kind": "variable", "doc": "<p>TimePicker API Functions</p>\n"}, {"fullname": "dhxpyt.timepicker.Timepicker.clear", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.clear", "kind": "function", "doc": "<p>Clears the value set in the timepicker.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.Timepicker.destructor", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.destructor", "kind": "function", "doc": "<p>Destroys the timepicker instance and releases occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.Timepicker.get_value", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.get_value", "kind": "function", "doc": "<p>Returns the current value of a TimePicker.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>as_object</strong>:  (Optional) Specifies that the value will be returned as an object. False by default.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Either an object or a string with the value of the timepicker.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">as_object</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.Timepicker.paint", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.paint", "kind": "function", "doc": "<p>Repaints a timepicker on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.Timepicker.set_value", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.set_value", "kind": "function", "doc": "<p>Sets value for a TimePicker.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong>:  The value to be set for a timepicker.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.Timepicker.add_event_handler", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_name</strong>:  The name of the event.</li>\n<li><strong>handler</strong>:  The handler function to attach.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.Timepicker.on_after_apply", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.on_after_apply", "kind": "function", "doc": "<p>Fires after saving the timepicker value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter value (str or dict).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.Timepicker.on_after_close", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.on_after_close", "kind": "function", "doc": "<p>Fires after closing the timepicker.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter value (str or dict).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.Timepicker.on_before_apply", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.on_before_apply", "kind": "function", "doc": "<p>Fires before saving the timepicker value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter value (str or dict). Return False to prevent saving.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.Timepicker.on_before_change", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.on_before_change", "kind": "function", "doc": "<p>Fires before change of the timepicker value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter value (str or dict). Return False to prevent changing.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.Timepicker.on_before_close", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.on_before_close", "kind": "function", "doc": "<p>Fires before closing the timepicker.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter value (str or dict). Return False to prevent closing.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.Timepicker.on_change", "modulename": "dhxpyt.timepicker", "qualname": "Timepicker.on_change", "kind": "function", "doc": "<p>Fires on change of the timepicker value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>handler</strong>:  The handler function with parameter value (str or dict).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.timepicker.TimepickerConfig", "modulename": "dhxpyt.timepicker", "qualname": "TimepickerConfig", "kind": "class", "doc": "<p>Configuration class for the TimePicker widget.</p>\n"}, {"fullname": "dhxpyt.timepicker.TimepickerConfig.__init__", "modulename": "dhxpyt.timepicker", "qualname": "TimepickerConfig.__init__", "kind": "function", "doc": "<p>Initializes the TimePickerConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong>:  (Optional) The time value to be set on initialization of the timepicker.</li>\n<li><strong>controls</strong>:  (Optional) Defines whether a timepicker is equipped with the Close and Save buttons. Default is False.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to TimePicker.</li>\n<li><strong>timeFormat: (Optional) Defines what clock format is activated</strong>:  the 12-hour or 24-hour one. Default is 24.</li>\n<li><strong>valueFormat</strong>:  (Optional) Defines the format of the value to be applied when working with TimePicker events.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">controls</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeFormat</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">24</span>,</span><span class=\"param\">\t<span class=\"n\">valueFormat</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.timepicker.TimepickerConfig.value", "modulename": "dhxpyt.timepicker", "qualname": "TimepickerConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.timepicker.TimepickerConfig.controls", "modulename": "dhxpyt.timepicker", "qualname": "TimepickerConfig.controls", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.timepicker.TimepickerConfig.css", "modulename": "dhxpyt.timepicker", "qualname": "TimepickerConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.timepicker.TimepickerConfig.timeFormat", "modulename": "dhxpyt.timepicker", "qualname": "TimepickerConfig.timeFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.timepicker.TimepickerConfig.valueFormat", "modulename": "dhxpyt.timepicker", "qualname": "TimepickerConfig.valueFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.timepicker.TimepickerConfig.to_dict", "modulename": "dhxpyt.timepicker", "qualname": "TimepickerConfig.to_dict", "kind": "function", "doc": "<p>Converts the TimePickerConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar", "modulename": "dhxpyt.toolbar", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.Toolbar", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.Toolbar.__init__", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.__init__", "kind": "function", "doc": "<p>Initializes the Toolbar widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  (Optional) The ToolbarConfig object containing the toolbar configuration.</li>\n<li><strong>widget_parent</strong>:  (Optional) The ID of the HTML element where the toolbar will be attached.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">toolbar</span><span class=\"o\">.</span><span class=\"n\">toolbar_config</span><span class=\"o\">.</span><span class=\"n\">ToolbarConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.toolbar.Toolbar.toolbar", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.toolbar", "kind": "variable", "doc": "<p>Toolbar API Functions</p>\n"}, {"fullname": "dhxpyt.toolbar.Toolbar.destructor", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.destructor", "kind": "function", "doc": "<p>Destroys the Toolbar instance and releases resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.disable", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.disable", "kind": "function", "doc": "<p>Disables and dims items of Toolbar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.enable", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.enable", "kind": "function", "doc": "<p>Enables disabled items of Toolbar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.get_selected", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.get_selected", "kind": "function", "doc": "<p>Returns an array of IDs of selected items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.get_state", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.get_state", "kind": "function", "doc": "<p>Gets current values/states of controls.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.hide", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.hide", "kind": "function", "doc": "<p>Hides items of Toolbar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.is_disabled", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.is_disabled", "kind": "function", "doc": "<p>Checks whether an item of Toolbar is disabled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.is_selected", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.is_selected", "kind": "function", "doc": "<p>Checks whether a specified Toolbar item is selected.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.paint", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.paint", "kind": "function", "doc": "<p>Repaints Toolbar on a page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.select", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.select", "kind": "function", "doc": "<p>Selects a specified Toolbar item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">unselect</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.set_focus", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.set_focus", "kind": "function", "doc": "<p>Sets focus on an Input control by its ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.set_state", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.set_state", "kind": "function", "doc": "<p>Sets values/states of controls.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.update_item", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.update_item", "kind": "function", "doc": "<p>Updates a toolbar item that is already on the toolbar</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span>, </span><span class=\"param\"><span class=\"n\">item_dict</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.show", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.show", "kind": "function", "doc": "<p>Shows items of Toolbar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.unselect", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.unselect", "kind": "function", "doc": "<p>Unselects a selected Toolbar item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.add_event_handler", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_name</strong>:  The name of the event.</li>\n<li><strong>handler</strong>:  The handler function to attach.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.on_after_hide", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.on_after_hide", "kind": "function", "doc": "<p>Fires after hiding a toolbar item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.on_before_hide", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.on_before_hide", "kind": "function", "doc": "<p>Fires before hiding a toolbar item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.on_click", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.on_click", "kind": "function", "doc": "<p>Fires after a click on a control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.on_input", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.on_input", "kind": "function", "doc": "<p>Fires on entering text into an input field.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.on_input_blur", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.on_input_blur", "kind": "function", "doc": "<p>Fires when a control is blurred.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.on_input_change", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.on_input_change", "kind": "function", "doc": "<p>Fires on changing the value of an Input control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.on_input_created", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.on_input_created", "kind": "function", "doc": "<p>Fires when a new input is created.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.on_input_focus", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.on_input_focus", "kind": "function", "doc": "<p>Fires when a control is focused.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.on_keydown", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.on_keydown", "kind": "function", "doc": "<p>Fires when any key is pressed while a Toolbar control is in focus.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.Toolbar.on_open_menu", "modulename": "dhxpyt.toolbar", "qualname": "Toolbar.on_open_menu", "kind": "function", "doc": "<p>Fires when expanding a menu control.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.ToolbarConfig", "modulename": "dhxpyt.toolbar", "qualname": "ToolbarConfig", "kind": "class", "doc": "<p>Configuration class for the Toolbar widget.</p>\n"}, {"fullname": "dhxpyt.toolbar.ToolbarConfig.__init__", "modulename": "dhxpyt.toolbar", "qualname": "ToolbarConfig.__init__", "kind": "function", "doc": "<p>Initializes the ToolbarConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  (Optional) List of control configurations to set into Toolbar.</li>\n<li><strong>css</strong>:  (Optional) Adds style classes to Toolbar.</li>\n<li><strong>menuCss</strong>:  (Optional) Adds style classes to all containers of Toolbar controls with nested items.</li>\n<li><strong>navigationType</strong>:  (Optional) Defines the action that opens menu options (\"click\" or \"pointer\").</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">toolbar</span><span class=\"o\">.</span><span class=\"n\">toolbar_config</span><span class=\"o\">.</span><span class=\"n\">ControlConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">menuCss</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">navigationType</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;click&#39;</span></span>)</span>"}, {"fullname": "dhxpyt.toolbar.ToolbarConfig.data", "modulename": "dhxpyt.toolbar", "qualname": "ToolbarConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ToolbarConfig.css", "modulename": "dhxpyt.toolbar", "qualname": "ToolbarConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ToolbarConfig.menuCss", "modulename": "dhxpyt.toolbar", "qualname": "ToolbarConfig.menuCss", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ToolbarConfig.navigationType", "modulename": "dhxpyt.toolbar", "qualname": "ToolbarConfig.navigationType", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ToolbarConfig.to_dict", "modulename": "dhxpyt.toolbar", "qualname": "ToolbarConfig.to_dict", "kind": "function", "doc": "<p>Converts the ToolbarConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.toolbar.ButtonConfig", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.toolbar.toolbar_config.ControlConfig"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.__init__", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">circle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">countColor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">group</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hotkey</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">loading</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">multiClick</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">view</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.type", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.id", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.value", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.circle", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.circle", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.color", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.color", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.count", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.countColor", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.countColor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.full", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.full", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.group", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.group", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.hotkey", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.hotkey", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.html", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.icon", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.loading", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.loading", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.multiClick", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.multiClick", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.size", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.size", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.tooltip", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.view", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.view", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.css", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.disabled", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ButtonConfig.hidden", "modulename": "dhxpyt.toolbar", "qualname": "ButtonConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.CustomHTMLConfig", "modulename": "dhxpyt.toolbar", "qualname": "CustomHTMLConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.toolbar.toolbar_config.ControlConfig"}, {"fullname": "dhxpyt.toolbar.CustomHTMLConfig.__init__", "modulename": "dhxpyt.toolbar", "qualname": "CustomHTMLConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.toolbar.CustomHTMLConfig.type", "modulename": "dhxpyt.toolbar", "qualname": "CustomHTMLConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.CustomHTMLConfig.id", "modulename": "dhxpyt.toolbar", "qualname": "CustomHTMLConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.CustomHTMLConfig.parent", "modulename": "dhxpyt.toolbar", "qualname": "CustomHTMLConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.CustomHTMLConfig.html", "modulename": "dhxpyt.toolbar", "qualname": "CustomHTMLConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.CustomHTMLConfig.css", "modulename": "dhxpyt.toolbar", "qualname": "CustomHTMLConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.CustomHTMLConfig.hidden", "modulename": "dhxpyt.toolbar", "qualname": "CustomHTMLConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.toolbar.toolbar_config.ControlConfig"}, {"fullname": "dhxpyt.toolbar.InputConfig.__init__", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">autocomplete</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.toolbar.InputConfig.type", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.id", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.parent", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.value", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.autocomplete", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.autocomplete", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.icon", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.label", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.placeholder", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.tooltip", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.css", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.disabled", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.hidden", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.InputConfig.width", "modulename": "dhxpyt.toolbar", "qualname": "InputConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.SpacerConfig", "modulename": "dhxpyt.toolbar", "qualname": "SpacerConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.toolbar.toolbar_config.ControlConfig"}, {"fullname": "dhxpyt.toolbar.SpacerConfig.__init__", "modulename": "dhxpyt.toolbar", "qualname": "SpacerConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.toolbar.SpacerConfig.type", "modulename": "dhxpyt.toolbar", "qualname": "SpacerConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.SpacerConfig.id", "modulename": "dhxpyt.toolbar", "qualname": "SpacerConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.SeparatorConfig", "modulename": "dhxpyt.toolbar", "qualname": "SeparatorConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.toolbar.toolbar_config.ControlConfig"}, {"fullname": "dhxpyt.toolbar.SeparatorConfig.__init__", "modulename": "dhxpyt.toolbar", "qualname": "SeparatorConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.toolbar.SeparatorConfig.type", "modulename": "dhxpyt.toolbar", "qualname": "SeparatorConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.SeparatorConfig.id", "modulename": "dhxpyt.toolbar", "qualname": "SeparatorConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.toolbar.toolbar_config.ControlConfig"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.__init__", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">src</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">countColor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">group</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hotkey</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">multiClick</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.type", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.id", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.parent", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.src", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.src", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.count", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.countColor", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.countColor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.group", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.group", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.hotkey", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.hotkey", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.multiClick", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.multiClick", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.tooltip", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.css", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.disabled", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.ImageButtonConfig.hidden", "modulename": "dhxpyt.toolbar", "qualname": "ImageButtonConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.toolbar.toolbar_config.ControlConfig"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.__init__", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">valueFormat</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dateFormat</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;</span><span class=\"si\">%d</span><span class=\"s1\">/%m/%y&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">disabledDates</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mark</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">placeholder</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">thisMonthOnly</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeFormat</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timePicker</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">weekNumbers</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">weekStart</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">editable</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.type", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.id", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.parent", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.value", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.valueFormat", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.valueFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.dateFormat", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.dateFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.disabledDates", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.disabledDates", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.icon", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.label", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.label", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.mark", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.mark", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.mode", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.placeholder", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.placeholder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.thisMonthOnly", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.thisMonthOnly", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.timeFormat", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.timeFormat", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.timePicker", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.timePicker", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.weekNumbers", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.weekNumbers", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.weekStart", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.weekStart", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.css", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.disabled", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.editable", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.editable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.hidden", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.DatePickerConfig.width", "modulename": "dhxpyt.toolbar", "qualname": "DatePickerConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.TitleConfig", "modulename": "dhxpyt.toolbar", "qualname": "TitleConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.toolbar.toolbar_config.ControlConfig"}, {"fullname": "dhxpyt.toolbar.TitleConfig.__init__", "modulename": "dhxpyt.toolbar", "qualname": "TitleConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.toolbar.TitleConfig.type", "modulename": "dhxpyt.toolbar", "qualname": "TitleConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.TitleConfig.id", "modulename": "dhxpyt.toolbar", "qualname": "TitleConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.TitleConfig.parent", "modulename": "dhxpyt.toolbar", "qualname": "TitleConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.TitleConfig.value", "modulename": "dhxpyt.toolbar", "qualname": "TitleConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.TitleConfig.html", "modulename": "dhxpyt.toolbar", "qualname": "TitleConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.TitleConfig.tooltip", "modulename": "dhxpyt.toolbar", "qualname": "TitleConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.TitleConfig.css", "modulename": "dhxpyt.toolbar", "qualname": "TitleConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.TitleConfig.disabled", "modulename": "dhxpyt.toolbar", "qualname": "TitleConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.TitleConfig.hidden", "modulename": "dhxpyt.toolbar", "qualname": "TitleConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig", "kind": "class", "doc": "<p></p>\n", "bases": "dhxpyt.toolbar.toolbar_config.ControlConfig"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.__init__", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">toolbar</span><span class=\"o\">.</span><span class=\"n\">toolbar_config</span><span class=\"o\">.</span><span class=\"n\">MenuItemConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">countColor</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hotkey</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tooltip</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hidden</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.type", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.type", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.id", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.parent", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.value", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.items", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.items", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.count", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.countColor", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.countColor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.hotkey", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.hotkey", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.html", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.icon", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.tooltip", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.tooltip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.css", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.disabled", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.disabled", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.hidden", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.hidden", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.toolbar.MenuItemConfig.to_dict", "modulename": "dhxpyt.toolbar", "qualname": "MenuItemConfig.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree", "modulename": "dhxpyt.tree", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.Tree", "modulename": "dhxpyt.tree", "qualname": "Tree", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.Tree.__init__", "modulename": "dhxpyt.tree", "qualname": "Tree.__init__", "kind": "function", "doc": "<p>Initializes the Tree widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  (Optional) The TreeConfig object containing the tree configuration.</li>\n<li><strong>widget_parent</strong>:  (Optional) The ID of the HTML element where the tree will be attached.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">tree_config</span><span class=\"o\">.</span><span class=\"n\">TreeConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.tree.Tree.tree", "modulename": "dhxpyt.tree", "qualname": "Tree.tree", "kind": "variable", "doc": "<p>Tree API Functions</p>\n"}, {"fullname": "dhxpyt.tree.Tree.check_item", "modulename": "dhxpyt.tree", "qualname": "Tree.check_item", "kind": "function", "doc": "<p>Checks the checkbox of a tree item and all its sub-items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.collapse", "modulename": "dhxpyt.tree", "qualname": "Tree.collapse", "kind": "function", "doc": "<p>Collapses a tree item by ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.collapse_all", "modulename": "dhxpyt.tree", "qualname": "Tree.collapse_all", "kind": "function", "doc": "<p>Collapses all expanded tree items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.destructor", "modulename": "dhxpyt.tree", "qualname": "Tree.destructor", "kind": "function", "doc": "<p>Releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.edit_item", "modulename": "dhxpyt.tree", "qualname": "Tree.edit_item", "kind": "function", "doc": "<p>Edits a tree item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.expand", "modulename": "dhxpyt.tree", "qualname": "Tree.expand", "kind": "function", "doc": "<p>Expands a tree item by ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.expand_all", "modulename": "dhxpyt.tree", "qualname": "Tree.expand_all", "kind": "function", "doc": "<p>Expands all collapsed tree items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.focus_item", "modulename": "dhxpyt.tree", "qualname": "Tree.focus_item", "kind": "function", "doc": "<p>Sets focus to a tree item and moves the scroll to it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.get_checked", "modulename": "dhxpyt.tree", "qualname": "Tree.get_checked", "kind": "function", "doc": "<p>Gets all checked tree items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.get_state", "modulename": "dhxpyt.tree", "qualname": "Tree.get_state", "kind": "function", "doc": "<p>Gets the state of the tree.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.paint", "modulename": "dhxpyt.tree", "qualname": "Tree.paint", "kind": "function", "doc": "<p>Repaints the tree on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.set_state", "modulename": "dhxpyt.tree", "qualname": "Tree.set_state", "kind": "function", "doc": "<p>Sets the state for the tree.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.toggle", "modulename": "dhxpyt.tree", "qualname": "Tree.toggle", "kind": "function", "doc": "<p>Opens or closes a tree item by ID.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.uncheck_item", "modulename": "dhxpyt.tree", "qualname": "Tree.uncheck_item", "kind": "function", "doc": "<p>Unchecks the checkbox of a tree item and all its sub-items.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.add_event_handler", "modulename": "dhxpyt.tree", "qualname": "Tree.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_name</strong>:  The name of the event.</li>\n<li><strong>handler</strong>:  The handler function to attach.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_after_check", "modulename": "dhxpyt.tree", "qualname": "Tree.on_after_check", "kind": "function", "doc": "<p>Fires after the state of an item is changed (checked).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_after_collapse", "modulename": "dhxpyt.tree", "qualname": "Tree.on_after_collapse", "kind": "function", "doc": "<p>Fires after collapsing a tree item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_after_drag", "modulename": "dhxpyt.tree", "qualname": "Tree.on_after_drag", "kind": "function", "doc": "<p>Fires after dragging an item is finished.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_after_drop", "modulename": "dhxpyt.tree", "qualname": "Tree.on_after_drop", "kind": "function", "doc": "<p>Fires before the user has finished dragging an item but after the mouse button is released.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_after_edit_end", "modulename": "dhxpyt.tree", "qualname": "Tree.on_after_edit_end", "kind": "function", "doc": "<p>Fires after editing a tree item is finished.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_after_edit_start", "modulename": "dhxpyt.tree", "qualname": "Tree.on_after_edit_start", "kind": "function", "doc": "<p>Fires after editing of a tree item has started.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_after_expand", "modulename": "dhxpyt.tree", "qualname": "Tree.on_after_expand", "kind": "function", "doc": "<p>Fires after expanding a tree item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_before_check", "modulename": "dhxpyt.tree", "qualname": "Tree.on_before_check", "kind": "function", "doc": "<p>Fires before the state of an item is changed (checking).</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_before_collapse", "modulename": "dhxpyt.tree", "qualname": "Tree.on_before_collapse", "kind": "function", "doc": "<p>Fires before collapsing a tree item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_before_drag", "modulename": "dhxpyt.tree", "qualname": "Tree.on_before_drag", "kind": "function", "doc": "<p>Fires before dragging of an item starts.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_before_drop", "modulename": "dhxpyt.tree", "qualname": "Tree.on_before_drop", "kind": "function", "doc": "<p>Fires before the user has finished dragging an item and released the mouse button.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_before_edit_end", "modulename": "dhxpyt.tree", "qualname": "Tree.on_before_edit_end", "kind": "function", "doc": "<p>Fires before editing a tree item is finished.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_before_edit_start", "modulename": "dhxpyt.tree", "qualname": "Tree.on_before_edit_start", "kind": "function", "doc": "<p>Fires before editing of a tree item starts.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.Tree.on_before_expand", "modulename": "dhxpyt.tree", "qualname": "Tree.on_before_expand", "kind": "function", "doc": "<p>Fires before expanding a tree item.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.TreeConfig", "modulename": "dhxpyt.tree", "qualname": "TreeConfig", "kind": "class", "doc": "<p>Configuration class for the Tree widget.</p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.__init__", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.__init__", "kind": "function", "doc": "<p>Initializes the configuration for the Tree widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  List of TreeItemConfig to define the tree structure.</li>\n<li><strong>checkbox</strong>:  Whether checkboxes are enabled in the tree.</li>\n<li><strong>collapsed</strong>:  Whether the tree is initialized in the collapsed state.</li>\n<li><strong>css</strong>:  Adds custom style classes to the tree.</li>\n<li><strong>dragCopy</strong>:  Defines if the tree item should be copied during drag-and-drop.</li>\n<li><strong>dragMode</strong>:  Defines drag-and-drop mode (\"target\", \"source\", \"both\").</li>\n<li><strong>dropBehaviour</strong>:  Defines the behavior of dragged items (\"child\", \"sibling\", \"complex\").</li>\n<li><strong>editable</strong>:  Enables inline editing of tree items.</li>\n<li><strong>icon</strong>:  Custom icons for tree items.</li>\n<li><strong>itemHeight</strong>:  Sets the height of tree items.</li>\n<li><strong>keyNavigation</strong>:  Enables key navigation for tree.</li>\n<li><strong>rootId</strong>:  The ID for the root tree element.</li>\n<li><strong>selection</strong>:  Enables selection of tree items.</li>\n<li><strong>template</strong>:  Custom template function for rendering tree items.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">tree_config</span><span class=\"o\">.</span><span class=\"n\">TreeItemConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">checkbox</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">collapsed</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dragCopy</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dragMode</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dropBehaviour</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">editable</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">itemHeight</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keyNavigation</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rootId</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">selection</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">template</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.tree.TreeConfig.data", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.checkbox", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.checkbox", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.collapsed", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.collapsed", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.css", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.dragCopy", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.dragCopy", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.dragMode", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.dragMode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.dropBehaviour", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.dropBehaviour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.editable", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.editable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.icon", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.itemHeight", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.itemHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.keyNavigation", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.keyNavigation", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.rootId", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.rootId", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.selection", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.selection", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.template", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.template", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeConfig.to_dict", "modulename": "dhxpyt.tree", "qualname": "TreeConfig.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.tree.TreeItemConfig", "modulename": "dhxpyt.tree", "qualname": "TreeItemConfig", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeItemConfig.__init__", "modulename": "dhxpyt.tree", "qualname": "TreeItemConfig.__init__", "kind": "function", "doc": "<p>Initializes the configuration for a tree item.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>id</strong>:  The ID of the tree item.</li>\n<li><strong>value</strong>:  The value of the tree item.</li>\n<li><strong>opened</strong>:  Whether the tree item is opened by default.</li>\n<li><strong>checkbox</strong>:  Whether the checkbox is displayed for the tree item.</li>\n<li><strong>items</strong>:  Nested child tree items.</li>\n<li><strong>icon</strong>:  Custom icons for the tree item.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">opened</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">checkbox</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">tree_config</span><span class=\"o\">.</span><span class=\"n\">TreeItemConfig</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.tree.TreeItemConfig.id", "modulename": "dhxpyt.tree", "qualname": "TreeItemConfig.id", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeItemConfig.value", "modulename": "dhxpyt.tree", "qualname": "TreeItemConfig.value", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeItemConfig.opened", "modulename": "dhxpyt.tree", "qualname": "TreeItemConfig.opened", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeItemConfig.checkbox", "modulename": "dhxpyt.tree", "qualname": "TreeItemConfig.checkbox", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeItemConfig.items", "modulename": "dhxpyt.tree", "qualname": "TreeItemConfig.items", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeItemConfig.icon", "modulename": "dhxpyt.tree", "qualname": "TreeItemConfig.icon", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.tree.TreeItemConfig.to_dict", "modulename": "dhxpyt.tree", "qualname": "TreeItemConfig.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window", "modulename": "dhxpyt.window", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.Window", "modulename": "dhxpyt.window", "qualname": "Window", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.Window.__init__", "modulename": "dhxpyt.window", "qualname": "Window.__init__", "kind": "function", "doc": "<p>Initializes the Window widget.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  (Optional) The WindowConfig object containing the window configuration.</li>\n<li><strong>widget_parent</strong>:  (Optional) The ID of the HTML element where the window will be attached.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">dhxpyt</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">window_config</span><span class=\"o\">.</span><span class=\"n\">WindowConfig</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">widget_parent</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "dhxpyt.window.Window.window", "modulename": "dhxpyt.window", "qualname": "Window.window", "kind": "variable", "doc": "<p>Window API Functions</p>\n"}, {"fullname": "dhxpyt.window.Window.attach", "modulename": "dhxpyt.window", "qualname": "Window.attach", "kind": "function", "doc": "<p>Attaches a DHTMLX component to the window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.attach_html", "modulename": "dhxpyt.window", "qualname": "Window.attach_html", "kind": "function", "doc": "<p>Adds an HTML content into a DHTMLX window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.destructor", "modulename": "dhxpyt.window", "qualname": "Window.destructor", "kind": "function", "doc": "<p>Releases the occupied resources.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.get_container", "modulename": "dhxpyt.window", "qualname": "Window.get_container", "kind": "function", "doc": "<p>Returns the HTML element of the window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.get_position", "modulename": "dhxpyt.window", "qualname": "Window.get_position", "kind": "function", "doc": "<p>Gets the position of the window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.get_size", "modulename": "dhxpyt.window", "qualname": "Window.get_size", "kind": "function", "doc": "<p>Gets the size of the window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.get_widget", "modulename": "dhxpyt.window", "qualname": "Window.get_widget", "kind": "function", "doc": "<p>Returns the widget attached to the window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.hide", "modulename": "dhxpyt.window", "qualname": "Window.hide", "kind": "function", "doc": "<p>Hides the window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.is_full_screen", "modulename": "dhxpyt.window", "qualname": "Window.is_full_screen", "kind": "function", "doc": "<p>Checks whether the window is in full-screen mode.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.is_visible", "modulename": "dhxpyt.window", "qualname": "Window.is_visible", "kind": "function", "doc": "<p>Checks whether the window is visible.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.paint", "modulename": "dhxpyt.window", "qualname": "Window.paint", "kind": "function", "doc": "<p>Repaints the window on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.set_full_screen", "modulename": "dhxpyt.window", "qualname": "Window.set_full_screen", "kind": "function", "doc": "<p>Switches the window to full-screen mode.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.set_position", "modulename": "dhxpyt.window", "qualname": "Window.set_position", "kind": "function", "doc": "<p>Sets the position of the window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">top</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.set_size", "modulename": "dhxpyt.window", "qualname": "Window.set_size", "kind": "function", "doc": "<p>Sets the size of the window.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.show", "modulename": "dhxpyt.window", "qualname": "Window.show", "kind": "function", "doc": "<p>Shows the window on the page.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">top</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.unset_full_screen", "modulename": "dhxpyt.window", "qualname": "Window.unset_full_screen", "kind": "function", "doc": "<p>Switches the window from full-screen mode to windowed mode.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.add_event_handler", "modulename": "dhxpyt.window", "qualname": "Window.add_event_handler", "kind": "function", "doc": "<p>Adds an event handler for the specified event.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>event_name</strong>:  The name of the event.</li>\n<li><strong>handler</strong>:  The handler function to attach.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.on_after_hide", "modulename": "dhxpyt.window", "qualname": "Window.on_after_hide", "kind": "function", "doc": "<p>Fires after the window is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.on_after_show", "modulename": "dhxpyt.window", "qualname": "Window.on_after_show", "kind": "function", "doc": "<p>Fires after the window is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.on_before_hide", "modulename": "dhxpyt.window", "qualname": "Window.on_before_hide", "kind": "function", "doc": "<p>Fires before the window is hidden.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.on_before_show", "modulename": "dhxpyt.window", "qualname": "Window.on_before_show", "kind": "function", "doc": "<p>Fires before the window is shown.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.on_header_double_click", "modulename": "dhxpyt.window", "qualname": "Window.on_header_double_click", "kind": "function", "doc": "<p>Fires on double-clicking the window's header.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.on_move", "modulename": "dhxpyt.window", "qualname": "Window.on_move", "kind": "function", "doc": "<p>Fires on moving the window.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.Window.on_resize", "modulename": "dhxpyt.window", "qualname": "Window.on_resize", "kind": "function", "doc": "<p>Fires on resizing the window.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "dhxpyt.window.WindowConfig", "modulename": "dhxpyt.window", "qualname": "WindowConfig", "kind": "class", "doc": "<p>Configuration class for the Window widget.</p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.__init__", "modulename": "dhxpyt.window", "qualname": "WindowConfig.__init__", "kind": "function", "doc": "<p>Initializes the WindowConfig.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>closable</strong>:  Defines whether a window can be closed.</li>\n<li><strong>css</strong>:  Adds style classes for the window.</li>\n<li><strong>footer</strong>:  Adds a footer to the window.</li>\n<li><strong>header</strong>:  Adds a header to the window.</li>\n<li><strong>height</strong>:  Sets the height of the window.</li>\n<li><strong>html</strong>:  Sets an HTML content into a window on initialization.</li>\n<li><strong>left</strong>:  The left coordinate of a window position.</li>\n<li><strong>minHeight</strong>:  Sets the minimal height of a window.</li>\n<li><strong>minWidth</strong>:  Sets the minimal width of a window.</li>\n<li><strong>modal</strong>:  Defines whether a window is modal.</li>\n<li><strong>movable</strong>:  Defines whether a window is movable.</li>\n<li><strong>node</strong>:  The container for a window or its ID.</li>\n<li><strong>resizable</strong>:  Defines whether a window can be resized.</li>\n<li><strong>title</strong>:  Adds some text into the header of a window.</li>\n<li><strong>top</strong>:  The top coordinate of a window position.</li>\n<li><strong>viewportOverflow</strong>:  Defines whether a window can go beyond borders of the browser.</li>\n<li><strong>width</strong>:  Sets the width of the window.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">closable</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">css</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">footer</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">header</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;50%&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">html</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">minHeight</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">minWidth</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">modal</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">movable</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">resizable</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">top</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">viewportOverflow</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;50%&#39;</span></span>)</span>"}, {"fullname": "dhxpyt.window.WindowConfig.closable", "modulename": "dhxpyt.window", "qualname": "WindowConfig.closable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.css", "modulename": "dhxpyt.window", "qualname": "WindowConfig.css", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.footer", "modulename": "dhxpyt.window", "qualname": "WindowConfig.footer", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.header", "modulename": "dhxpyt.window", "qualname": "WindowConfig.header", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.height", "modulename": "dhxpyt.window", "qualname": "WindowConfig.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.html", "modulename": "dhxpyt.window", "qualname": "WindowConfig.html", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.left", "modulename": "dhxpyt.window", "qualname": "WindowConfig.left", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.minHeight", "modulename": "dhxpyt.window", "qualname": "WindowConfig.minHeight", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.minWidth", "modulename": "dhxpyt.window", "qualname": "WindowConfig.minWidth", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.modal", "modulename": "dhxpyt.window", "qualname": "WindowConfig.modal", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.movable", "modulename": "dhxpyt.window", "qualname": "WindowConfig.movable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.node", "modulename": "dhxpyt.window", "qualname": "WindowConfig.node", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.resizable", "modulename": "dhxpyt.window", "qualname": "WindowConfig.resizable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.title", "modulename": "dhxpyt.window", "qualname": "WindowConfig.title", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.top", "modulename": "dhxpyt.window", "qualname": "WindowConfig.top", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.viewportOverflow", "modulename": "dhxpyt.window", "qualname": "WindowConfig.viewportOverflow", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.width", "modulename": "dhxpyt.window", "qualname": "WindowConfig.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "dhxpyt.window.WindowConfig.to_dict", "modulename": "dhxpyt.window", "qualname": "WindowConfig.to_dict", "kind": "function", "doc": "<p>Converts the WindowConfig into a dictionary format.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();